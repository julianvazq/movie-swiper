{"version":3,"sources":["components/AppContainer/style.ts","types/room.ts","components/AppContainer/index.tsx","assets/themoviedb-logo.svg","components/Footer/style.ts","components/Footer/index.tsx","sockets/index.ts","sockets/emitters.ts","styles/index.ts","types/actions.ts","assets/poster_unavailable.png","utils/index.ts","context/UserContext.tsx","hooks/useLocalStorage.ts","sockets/listeners.ts","context/RoomContext.tsx","components/Modal/index.tsx","components/Nav/style.ts","components/Nav/index.tsx","components/ProtectedRoute/index.tsx","context/MoviePreviewContext.tsx","pages/create/CreateForm/style.ts","pages/create/CreateForm/index.tsx","pages/create/Create/index.tsx","pages/expired/Expired/style.ts","pages/expired/Expired/index.tsx","pages/home/Instruction/style.ts","pages/home/Instruction/index.tsx","pages/home/Explainer/style.ts","pages/home/Explainer/index.tsx","pages/home/MovieCardDisplay/style.ts","pages/home/MovieCardDisplay/index.tsx","pages/home/Showcase/style.ts","pages/home/Showcase/index.tsx","assets/movie-posters.jpg","pages/home/Home/style.ts","pages/home/Home/index.tsx","pages/join/JoinForm/style.ts","pages/join/JoinForm/index.tsx","pages/join/Join/index.tsx","components/InfoBox/style.ts","components/InfoBox/index.tsx","pages/results/LikeList/styled.ts","pages/results/LikeList/index.tsx","pages/results/ResultCard/style.ts","pages/results/ResultCard/index.tsx","pages/results/ResultList/style.ts","pages/results/ResultList/index.tsx","pages/results/Results/style.ts","pages/results/Results/index.tsx","hooks/useMovieManager.tsx","pages/selection/MovieDetail/style.ts","pages/selection/MovieDetail/index.tsx","components/InviteLink/style.ts","components/InviteLink/index.tsx","components/FixedContainer/style.ts","components/FixedContainer/index.tsx","pages/selection/ActionButton/style.ts","pages/selection/ActionButton/index.tsx","components/Tabs/style.ts","components/Tabs/index.tsx","pages/selection/MovieSearch/genres.ts","pages/selection/MovieListItem/styled.ts","pages/selection/MovieListItem/index.tsx","pages/selection/MovieList/styled.ts","pages/selection/MovieList/index.tsx","hooks/useFetchMovies.ts","components/MovieCardSkeleton/style.ts","components/MovieCardSkeleton/index.tsx","pages/selection/MovieCard/styled.ts","pages/selection/MovieCard/index.tsx","pages/selection/MovieGallery/style.ts","pages/selection/MovieGallery/index.tsx","pages/selection/MovieSearch/style.ts","pages/selection/MovieSearch/index.tsx","pages/selection/MovieSelection/index.tsx","pages/selection/Selection/style.ts","pages/selection/Selection/index.tsx","pages/swiper/Matches/index.tsx","pages/swiper/SwipeItem/style.ts","pages/swiper/SwipeItem/index.tsx","pages/swiper/SwipeArea/style.ts","pages/swiper/SwipeArea/index.tsx","pages/swiper/Swiper/style.ts","pages/swiper/Swiper/index.tsx","App.tsx","index.tsx"],"names":["Stage","Background","styled","main","AppContainer","children","Container","footer","props","display","InnerContainer","div","TheMovieDB","img","Attribution","p","Footer","pathname","useLocation","showFooter","includes","RESULTS","href","target","rel","src","TheMovieDBLogo","alt","socket","io","transports","reconnection","createRoom","data","callback","emit","ActionType","MaxWidthContainer","section","FormPageContainer","StyledForm","form","ErrorMessage","Title","h1","Subtitle","h2","Button","button","FormButton","$disabled","FontWeight600","span","ToastType","generateImageUrl","imageSrc","width","PosterUnavailable","useToast","type","message","duration","successOptions","style","backgroundColor","color","iconTheme","primary","secondary","errorOptions","loadingOptions","toast","success","error","loading","UserContext","createContext","user","setUser","useUser","useContext","UserProvider","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","useEffect","id","name","on","Provider","initialState","roomName","roomId","ownerId","participants","movies","stage","NULL","RoomContext","room","dispatch","useRoom","reducer","state","action","console","log","INITIALIZE_ROOM","payload","participant","SELECTION","GET_ROOM","JOIN","filter","LEAVE","CHANGE_OWNER","ADD_MOVIE","m","movie","REMOVE_MOVIE","SWIPE_MOVIE","swipedMovie","find","updatedSwipes","swipes","swipe","map","liked","updatedMovie","SET_STAGE","TOGGLE_READY","ready","USER_NAME_CHANGE","userId","Error","LS_KEY","RoomProvider","useReducer","rooms","roomIdParam","split","Boolean","toastId","useRef","timeoutId","getLSRooms","setLocalStorage","socketId","onParticipantJoin","newParticipant","Success","newOwnerSocketId","onRoomOwnerChange","newOwnerId","Custom","once","onGetRoom","onMovieAdd","onMovieRemove","movieId","onMovieSwipe","onToggleReady","userToToggle","onStartSwiper","SWIPER","onNameChange","affectedUser","oldName","removeAllListeners","isOwner","everyoneReady","length","every","current","clearTimeout","dismiss","setTimeout","Modal","visible","onClose","maxWidth","height","styles","background","borderRadius","closeOnEsc","customStyles","animation","nav","Logo","NavContainer","NavLinks","UserButton","UserIcon","FaUserCircle","ModalContent","CurrentName","Name","InputGroup","ChangeButton","Nav","show","forceShow","setVisible","newName","setNewName","closeModal","to","onClick","onSubmit","e","preventDefault","htmlFor","onChange","ProtectedRoute","Component","component","computedMatch","rest","history","useHistory","status","setStatus","params","path","url","replace","res","push","swipedAll","MoviePreviewContext","moviePreview","setMoviePreview","useMoviePreview","MoviePreviewProvider","CreateForm","initialInputs","disabled","setDisabled","inputs","setInputs","touched","setTouched","submitted","setSubmitted","errors","getErrors","isFormValid","Object","keys","onBlur","disconnect","connect","newUser","randomColor","luminosity","hue","Create","Expired","article","Headline","h3","Body","Instruction","headline","React","Children","toArray","child","isValidElement","body","Grid","iconStyles","css","UsersIcon","FaUsers","FilmIcon","FaFilm","PollIcon","FaPollH","instructions","icon","Explainer","i","Image","ButtonSection","InfoIcon","RiInformationLine","MovieCardDisplay","setMovie","setLoading","imageUrl","poster_path","a","axios","get","fetchMovie","title","MovieCardDisplayContainer","Content","Showcase","Cinema","CTA","MainTitle","Bold","GetStartedButton","br","Home","JoinForm","useParams","Join","margin","Text","TextContainer","aside","InfoBox","text","List","ul","Item","li","Color","wrap","MoreItems","LikeList","users","slice","Card","ResultsArea","ImageContainer","motion","TotalLikes","MovieTitle","ResultsContainer","DetailButton","ExpandIcon","ResultCard","usersWhoLiked","toString","Empty","ResultList","Results","filteredMovies","likes","reduce","acc","sort","b","participantIds","allSwiped","swipeIds","getInfoBoxProps","useMovieManager","movieInList","addedByMe","addedByUserId","movieActionHandler","removeMovie","addedMovie","buttonBackgroundColor","Overlay","ContentContainer","Tag","WrapContainer","Genre","Overview","Label","Divider","RatingText","GridCell","Star","AiFillStar","Video","iframe","ButtonContainer","BackButton","AddButton","BackIcon","IoIosArrowBack","PlusIcon","HiOutlinePlus","MinusIcon","HiMinus","DesktopAddButton","MovieDetail","setMovieDetail","details","setDetails","trailerData","videos","results","video","site","trailerUrl","inSelection","location","onEscPress","addEventListener","removeEventListener","fetchMovieDetails","document","overflow","cancelToken","cancel","CancelToken","source","token","data-overlay","attributes","initial","opacity","animate","exit","transition","layoutId","delay","tagline","genres","genre","overview","vote_average","runtime","release_date","original_language","toUpperCase","frameBorder","allowFullScreen","y","label","InputContainer","CopyButton","InviteLink","inputRef","defaultValue","ref","select","readOnly","navigator","clipboard","writeText","position","FixedContainer","variants","UserCheck","FaUserCheck","FillCheckbox","RiCheckboxCircleFill","EmptyCheckbox","RiCheckboxCircleLine","PlayIcon","SiTinder","RiMovieFill","CrownIcon","FaCrown","FaUserAlt","MainButton","disable","ToggleReadyButton","ReadyButton","StartButton","ActionButton","groupModalVisible","setGroupModalVisible","swipeModalVisible","setSwipeModalVisible","owner","isUserReady","participantsReady","disableSwiping","undefined","stopPropagation","Loading","TabBar","Tab","selected","TabContent","Tabs","tabs","currentTab","setCurrentTab","tabName","index","changeTab","InfoContainer","GenreContainer","SmallGenre","SeeMoreButton","MovieListItem","allowActions","genre_ids","genreId","genreObjects","g","onMovieClick","role","MovieList","emptyResponse","page","total_results","total_pages","useFetchMovies","movieQuery","setError","query","setMovies","fetch","post","MovieCardSkeleton","zIndex","MovieCard","setZIndex","Gallery","MovieGallery","moviesOnDisplay","Array","from","n","FormField","StyledSelect","Select","colorStyles","control","option","isDisabled","isFocused","isSelected","cursor","multiValue","multiValueLabel","padding","multiValueRemove","MovieSearch","setGenres","setMovieQuery","genreOptions","allGenres","isMulti","options","MovieSelection","ownerText","participantText","Selection","Matches","matches","PreviewButton","Details","SwipeItem","showPreview","LikeButton","DislikeButton","LikeIcon","HiHeart","DislikeIcon","RiCloseFill","SwiperCore","use","Pagination","A11y","EffectCoverflow","EffectFade","coverFlowEffectProps","rotate","stretch","depth","modifier","slideShadows","paginationProps","clickable","progressbarFillClass","SwipeArea","swiper","setSwiper","swiped","enableButtons","disableButtons","handleSwipeEmit","onSlidePrevTransitionStart","movieIndex","previousIndex","nextIndex","activeIndex","slideTo","update","updateProgress","onSlideNextTransitionStart","onSlidePrevTransitionEnd","onSlideNextTransitionEnd","onProgress","actualProgress","documentElement","setProperty","onInit","initialSlide","speed","observer","grabCursor","centeredSlides","spaceBetween","effect","coverflowEffect","pagination","Swiper","numMatches","num","App","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"4ZAEO,ICAKA,EDACC,EAAaC,IAAOC,KAAV,KESRC,EAJM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SACpB,OAAO,cAACJ,EAAD,UAAaI,KCRT,MAA0B,4C,4uBFE7BL,K,sBAAAA,E,gBAAAA,E,kBAAAA,E,aAAAA,M,KGAL,IAAMM,EAAYJ,IAAOK,OAAV,KAIP,SAACC,GAAD,OAAYA,EAAMC,QAAU,QAAU,UAOxCC,EAAiBR,IAAOS,IAAV,KAKdC,EAAaV,IAAOW,IAAV,KAKVC,EAAcZ,IAAOa,EAAV,KCKTC,EAtBA,WAAO,IACVC,EAAaC,cAAbD,SACFE,EACW,MAAbF,GACAA,EAASG,SAAS,YAClBH,EAASG,SAAS,UAClBH,EAASG,SAASpB,EAAMqB,SAE5B,OACI,cAACf,EAAD,CAAWG,QAASU,EAApB,SACI,cAACT,EAAD,UACI,eAACI,EAAD,wBAEI,mBAAGQ,KAAK,8BAA8BC,OAAO,SAASC,IAAI,aAA1D,SACI,cAACZ,EAAD,CAAYa,IAAKC,EAAgBC,IAAI,4B,sCClBhDC,E,MAASC,GAAG,wBAAyB,CAC9CC,WAAY,CAAC,aACbC,cAAc,ICCLC,EAAa,SACtBC,EACAC,GAEAN,EAAOO,KAAK,cAAeF,EAAMC,I,w4DCP9B,ICCKE,EDDCC,EAAoBnC,IAAOoC,QAAV,KAcjBC,EAAoBrC,YAAOmC,EAAPnC,CAAH,KASjBsC,EAAatC,IAAOuC,KAAV,KAWVC,EAAexC,IAAOS,IAAV,KAQZgC,EAAQzC,IAAO0C,GAAV,KAOLC,EAAW3C,IAAO4C,GAAV,KAQRC,EAAS7C,IAAO8C,OAAV,KAaNC,EAAa/C,YAAO6C,EAAP7C,CAAH,KAEL,SAACM,GAAD,OAAYA,EAAM0C,UAAY,UAAY,wBAC/C,SAAC1C,GAAD,OAAWA,EAAM0C,WAAa,aAI9BC,EAAgBjD,IAAOkD,KAAV,M,SC5EdhB,K,kCAAAA,E,oBAAAA,E,YAAAA,E,cAAAA,E,4BAAAA,E,sBAAAA,E,4BAAAA,E,0BAAAA,E,4BAAAA,E,sBAAAA,E,qCAAAA,M,KCHG,ICuBHiB,GDvBG,OAA0B,+CCe5BC,GAAmB,SAACC,EAAyBC,GACtD,OAAKD,EAIC,8BAAN,OAAqCC,GAArC,OAA6CD,GAHlCE,K,SAMHJ,K,kBAAAA,E,cAAAA,E,kBAAAA,E,iBAAAA,Q,KAaL,IAAMK,GAAW,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,SAChCC,EAA+B,CACjCD,SAAUA,GAAY,IACtBE,MAAO,CACHC,gBAAiB,qBACjBC,MAAO,QAEXC,UAAW,CACPC,QAAS,sBACTC,UAAW,SAIbC,EAA6B,CAC/BR,SAAUA,GAAY,IACtBE,MAAO,CACHC,gBAAiB,oBACjBC,MAAO,QAEXC,UAAW,CACPC,QAAS,UACTC,UAAW,SAIbE,EAA+B,CACjCT,SAAUA,GAAY,IACtBE,MAAO,CACHC,gBAAiB,qBACjBC,MAAO,QAEXC,UAAW,CACPC,QAAS,sBACTC,UAAW,SAGnB,OAAQT,GACJ,IAAK,UACD,OAAOY,IAAMC,QAAQZ,EAASE,GAClC,IAAK,QACD,OAAOS,IAAME,MAAMb,EAASS,GAChC,IAAK,UACD,OAAOE,IAAMG,QAAQd,EAASU,GAClC,IAAK,SAEL,QACI,OAAOC,YAAMX,EAASE,KCpErBa,GAAcC,wBAA4B,CAAEC,KAAM,GAAmBC,QAAS,iBAAO,MAErFC,GAAU,WACnB,OAAOC,qBAAWL,KAoBPM,GAjBM,SAAC,GAAyB,IAAvB5E,EAAsB,EAAtBA,SAAsB,EClBf,SAAI6E,EAAaC,GAA6D,IAAD,EAClEC,oBAAS,WAC3C,IACI,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GACzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACnC,MAAOV,GACL,OAAOU,MANyF,mBACjGQ,EADiG,KACpFC,EADoF,KAkBxG,MAAO,CAACD,EARS,SAACE,GACd,IACI,IAAMC,EAAeD,aAAiBE,SAAWF,EAAMF,GAAeE,EACtED,EAAeE,GACfR,OAAOC,aAAaS,QAAQd,EAAKO,KAAKQ,UAAUH,IAClD,MAAOrB,ODIWyB,CAAgB,OAAQ,IADN,mBACnCrB,EADmC,KAC7BC,EAD6B,KAc1C,OAXAqB,qBAAU,WEZc,IAACjE,IFaR,WACJ2C,EAAKuB,GAINxE,EAAOO,KAAK,WAAY0C,IAHxBC,EAAQ,CAAEuB,KAAMxB,EAAKwB,KAAMpC,MAAOY,EAAKZ,MAAOmC,GAAIxE,EAAOwE,KACzDxE,EAAOO,KAAK,WAAZ,2BAA6B0C,GAA7B,IAAmCuB,GAAIxE,EAAOwE,QEfnDxE,EAAO0E,GAAG,UAAWpE,KFoBzB,IAEI,cAACyC,GAAY4B,SAAb,CAAsBV,MAAO,CAAEhB,OAAMC,WAArC,SAAiDzE,KGJtDmG,GAAqB,CACvBC,SAAU,KACVC,OAAQ,KACRC,QAAS,KACTC,aAAc,GACdC,OAAQ,GACRC,MAAO9G,EAAM+G,MAOJC,GAAcpC,wBAA4B,CAAEqC,KAAMT,GAAcU,SAAU,iBAAO,MAEjFC,GAAU,WACnB,OAAOnC,qBAAWgC,KAGhBI,GAAU,SAACC,EAAaC,GAE1B,OADAC,QAAQC,IAAIF,GACJA,EAAO3D,MACX,KAAKvB,EAAWqF,gBACZ,OAAO,2BACAjB,IADP,IAEIC,SAAUa,EAAOI,QAAQjB,SACzBC,OAAQY,EAAOI,QAAQhB,OACvBC,QAASW,EAAOI,QAAQf,QACxBC,aAAc,CAACU,EAAOI,QAAQC,aAC9Bb,MAAO9G,EAAM4H,YAErB,KAAKxF,EAAWyF,SACZ,OAAO,eACAP,EAAOI,QAAQT,MAE1B,KAAK7E,EAAW0F,KACZ,IAAMlB,EAAY,sBACXS,EAAMT,aAAamB,QAAO,SAAChH,GAAD,OAAOA,EAAEqF,KAAOkB,EAAOI,QAAQC,YAAYvB,OAD1D,CAEdkB,EAAOI,QAAQC,cAEnB,OAAO,2BAAKN,GAAZ,IAAmBT,iBACvB,KAAKxE,EAAW4F,MACZ,OAAO,2BACAX,GADP,IAEIT,aAAcS,EAAMT,aAAamB,QAAO,SAAChH,GAAD,OAAOA,EAAEqF,KAAOkB,EAAOI,QAAQtB,QAE/E,KAAKhE,EAAW6F,aACZ,OAAO,2BACAZ,GADP,IAEIV,QAASW,EAAOI,QAAQf,UAEhC,KAAKvE,EAAW8F,UACZ,OAAO,2BACAb,GADP,IAEIR,OAAO,GAAD,mBAAMQ,EAAMR,OAAOkB,QAAO,SAACI,GAAD,OAAOA,EAAE/B,KAAOkB,EAAOI,QAAQU,MAAMhC,OAA/D,CAAoEkB,EAAOI,QAAQU,UAEjG,KAAKhG,EAAWiG,aACZ,OAAO,2BAAKhB,GAAZ,IAAmBR,OAAQQ,EAAMR,OAAOkB,QAAO,SAACI,GAAD,OAAOA,EAAE/B,KAAOkB,EAAOI,QAAQtB,QAClF,KAAKhE,EAAWkG,YACZ,IAAMC,EAAclB,EAAMR,OAAO2B,MAAK,SAACL,GAAD,OAAOA,EAAE/B,KAAOkB,EAAOI,QAAQtB,MAE/DqC,EADgBF,EAAYG,OAAOF,MAAK,SAACG,GAAD,OAAWA,EAAM9D,KAAKuB,KAAOkB,EAAOI,QAAQ7C,KAAKuB,MAEzFmC,EAAYG,OAAOE,KAAI,SAACD,GAAD,OACnBA,EAAM9D,KAAKuB,KAAOkB,EAAOI,QAAQ7C,KAAKuB,GAAtC,2BAAgDuC,GAAhD,IAAuDE,MAAOvB,EAAOI,QAAQmB,QAAUF,KAF9D,sBAIzBJ,EAAYG,QAJa,CAIL,CAAE7D,KAAMyC,EAAOI,QAAQ7C,KAAMgE,MAAOvB,EAAOI,QAAQmB,SAC3EC,EAAwB,2BAAQP,GAAR,IAAqBG,OAAQD,IAC3D,OAAO,2BACApB,GADP,IAEIR,OAAQQ,EAAMR,OAAO+B,KAAI,SAACT,GAAD,OAAQA,EAAE/B,KAAO0C,EAAa1C,GAAK0C,EAAeX,OAEnF,KAAK/F,EAAW2G,UACZ,OAAO,2BAAK1B,GAAZ,IAAmBP,MAAOQ,EAAOI,QAAQZ,QAC7C,KAAK1E,EAAW4G,aACZ,OAAO,2BACA3B,GADP,IAEIT,aAAcS,EAAMT,aAAagC,KAAI,SAAC7H,GAAD,OACjCA,EAAEqF,KAAOkB,EAAOI,QAAQtB,GAAxB,2BAAkCrF,GAAlC,IAAqCkI,OAAQlI,EAAEkI,QAAUlI,OAGrE,KAAKqB,EAAW8G,iBACZ,OAAO,2BACA7B,GADP,IAEIT,aAAcS,EAAMT,aAAagC,KAAI,SAAC7H,GAAD,OACjCA,EAAEqF,KAAOkB,EAAOI,QAAQyB,OAAxB,2BAAsCpI,GAAtC,IAAyCsF,KAAMiB,EAAOI,QAAQrB,OAAStF,OAGnF,QACI,MAAM,IAAIqI,MAAM,yBAItBC,GAAS,QAoJAC,GAlJM,SAAC,GAAyB,IAAvBjJ,EAAsB,EAAtBA,SACZY,EAAaC,cAAbD,SACA4D,EAASE,KAATF,KAFkC,EAGjB0E,qBAAWnC,GAASZ,IAU7C,SAAyBA,GACrB,IAAMnB,EAAOE,aAAaC,QAAQ6D,IAClC,IAAKhE,EAAM,OAAOmB,EAElB,IAAMgD,EAAiC/D,KAAKC,MAAML,GAC5CoE,EAAcxI,EAASyI,MAAM,KAAK3B,OAAO4B,SAAS,GAClD1C,EAAOuC,EAAMC,GACnB,OAAOxC,GAAcT,KApBiB,mBAGnCS,EAHmC,KAG7BC,EAH6B,KAIpC0C,EAAUC,mBACVC,EAAYD,mBA0IlB,OApHA1D,qBAAU,WACNoB,QAAQC,IAAIP,GACZ,IAAMuC,EAtBV,WACI,IAAMnE,EAAOE,aAAaC,QAAQ6D,IAClC,OAAKhE,EACEI,KAAKC,MAAML,GADA,KAoBJ0E,GACV9C,EAAKP,QAPb,SAAyB8C,GACrBjE,aAAaS,QAAQqD,GAAQ5D,KAAKQ,UAAUuD,IAQxCQ,CADkB,2BAAQR,GAAR,kBAAgBvC,EAAKP,OAAmBO,OAG/D,CAACA,IAEJd,qBAAU,WDzIoB,IAACjE,ECyN3B,ODjOyB,SAAC+E,EAAY/E,GACnCN,EAAO0E,GAAG,iBAAiB,SAACrE,GAC/BsF,QAAQC,IAAI,aAAcvF,EAAK4C,MAC/BjD,EAAOO,KAAK,YAAa,CAAE8H,SAAUhI,EAAKgI,SAAUhD,SACpD/E,EAASD,EAAK4C,SC8IdqF,CAAkBjD,GAAM,SAACkD,GACrBzG,GAAS,CACLC,KAAMN,GAAU+G,QAChBxG,QAAS,kBACL,iCACI,cAACT,EAAD,UAAgBgH,EAAe9D,OADnC,IAC0D,iBAIlEa,EAAS,CAAEvD,KAAMvB,EAAW0F,KAAMJ,QAAS,CAAEC,YAAY,2BAAMwC,GAAP,IAAuBlB,OAAO,UDnJ/D/G,ECqJR,YAAqC,IRrJhCD,EQqJFgI,EAAiC,EAAjCA,SAAUI,EAAuB,EAAvBA,iBAC5BnD,EAAS,CAAEvD,KAAMvB,EAAW4F,MAAON,QAAS,CAAEtB,GAAI6D,KAC9CA,IAAahD,EAAKN,SAAW0D,IAAqBzI,EAAOwE,KRvJzCnE,EQwJA,CAAEyE,OAAQO,EAAKP,OAAkByC,OAAQtE,EAAKuB,IRvJ1ExE,EAAOO,KAAK,oBAAqBF,KOA1BL,EAAO0E,GAAG,aAAcpE,GAGF,SAACA,GACvBN,EAAO0E,GAAG,oBAAqBpE,GCsJlCoI,EAAkB,YAAqB,IAAlBC,EAAiB,EAAjBA,WACjBrD,EAAS,CAAEvD,KAAMvB,EAAW6F,aAAcP,QAAS,CAAEf,QAAS4D,KAC1DA,IAAe1F,EAAKuB,IACpB1C,GAAS,CACLC,KAAMN,GAAUmH,OAChB5G,QAAS,mCDxJJ,SAAC1B,GACfN,EAAO6I,KAAK,WAAYvI,GC2J3BwI,EAAU,YAAe,IAAZzD,EAAW,EAAXA,KACHpC,EAAoBY,KAAKC,MAAMH,aAAaC,QAAQ,SAAW,IAEjEoB,EAA8BK,EAAKL,aAAamB,QAAO,SAAChH,GAAD,OAAOA,EAAEqF,KAAOvB,EAAKuB,MAC5EvB,IACA+B,EAAY,sBAAOA,GAAP,4BAA0B/B,GAA1B,IAAgCoE,OAAO,OAEvD/B,EAAS,CAAEvD,KAAMvB,EAAWyF,SAAUH,QAAS,CAAET,KAAK,2BAAMA,GAAP,IAAaL,uBD/JpD,SAAC1E,GAChBN,EAAO0E,GAAG,aAAa,SAACrE,GAC3BC,EAASD,EAAKmG,UC+JduC,EAAW,SAACvC,GACRlB,EAAS,CAAEvD,KAAMvB,EAAW8F,UAAWR,QAAS,CAAEU,cD5JjC,SAAClG,GACnBN,EAAO0E,GAAG,eAAgBpE,GC6J7B0I,EAAc,YAAkB,IAAfC,EAAc,EAAdA,QACb3D,EAAS,CAAEvD,KAAMvB,EAAWiG,aAAcX,QAAS,CAAEtB,GAAIyE,QD3JzC,SAAC3I,GAClBN,EAAO0E,GAAG,cAAepE,GC4J5B4I,EAAa,YAA+B,IAA5BD,EAA2B,EAA3BA,QAAShC,EAAkB,EAAlBA,MAAOhE,EAAW,EAAXA,KAC5BqC,EAAS,CAAEvD,KAAMvB,EAAWkG,YAAaZ,QAAS,CAAEtB,GAAIyE,EAAShC,QAAOhE,aD1JvD,SAAC3C,GACnBN,EAAO0E,GAAG,aAAcpE,GC2J3B6I,EAAc,YAAiB,IAAd5B,EAAa,EAAbA,OACP6B,EAAe/D,EAAKL,aAAa4B,MAAK,SAACzH,GAAD,OAAOA,EAAEqF,KAAO+C,KACxD6B,IAAiBA,EAAa/B,OAASpE,EAAKuB,KAAO4E,EAAa5E,IAChE1C,GAAS,CACLC,KAAMN,GAAU+G,QAChBxG,QAAS,kBACL,iCACI,cAACT,EAAD,UAAgB6H,EAAa3E,OADjC,mBAMZa,EAAS,CAAEvD,KAAMvB,EAAW4G,aAActB,QAAS,CAAEtB,GAAI+C,QDpKxC,SAACjH,GACnBN,EAAO0E,GAAG,eAAgBpE,GCqK7B+I,EAAc,YAAgB,EAAbvE,SACEO,EAAKP,QACpBQ,EAAS,CAAEvD,KAAMvB,EAAW2G,UAAWrB,QAAS,CAAEZ,MAAO9G,EAAMkL,aDpK/C,SAAChJ,GAClBN,EAAO0E,GAAG,mBAAoBpE,GCqKjCiJ,EAAa,YAAuB,IAApBhC,EAAmB,EAAnBA,OAAQ9C,EAAW,EAAXA,KACd+E,EAAenE,EAAKL,aAAa4B,MAAK,SAACzH,GAAD,OAAOA,EAAEqF,KAAO+C,KAC5D,GAAIiC,GAAgBA,EAAahF,KAAOvB,EAAKuB,GAAI,CAC7C,IAAMiF,EAAO,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAc/E,KAC9B3C,GAAS,CACLC,KAAMN,GAAU+G,QAChBxG,QAAS,kBACL,iCACI,cAACT,EAAD,UAAgBkI,IADpB,IAC8C,8BAA+B,IACzE,eAAClI,EAAD,WAAgBkD,EAAhB,aAKhBa,EAAS,CAAEvD,KAAMvB,EAAW8G,iBAAkBxB,QAAS,CAAEyB,SAAQ9C,aAG9D,WACHzE,EAAO0J,wBAEZ,CAAC1J,EAAQqF,EAAMC,IAElBf,qBAAU,WAEN,IAAMoF,EAAU1G,EAAKuB,KAAOa,EAAKN,QAC3BC,EAAeK,EAAKL,aAAamB,QAAO,SAAChH,GAAD,OAAOA,EAAEqF,KAAOvB,EAAKuB,MAC7DoF,EAAgB5E,EAAa6E,OAAS,GAAK7E,EAAa8E,OAAM,SAAC3K,GAAD,OAAOA,EAAEkI,UACxEuC,GAAiB1B,EAAU6B,UAC5BC,aAAa9B,EAAU6B,SACvBpH,IAAMsH,QAAQjC,EAAQ+B,UAEtBJ,GAAWC,IACX1B,EAAU6B,QAAUrG,OAAOwG,YACvB,kBACKlC,EAAQ+B,QAAUjI,GAAS,CACxBC,KAAMN,GAAU+G,QAChBxG,QAAS,8BACTC,SAAU,UAElB,SAGT,CAACoD,EAAKL,eAEF,cAACI,GAAYT,SAAb,CAAsBV,MAAO,CAAEoB,OAAMC,YAArC,SAAkD7G,K,SC9O9C0L,I,OAhBD,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,QAASC,EAA4E,EAA5EA,QAA4E,IAAnEzI,aAAmE,MAA3D,MAA2D,MAApD0I,gBAAoD,MAAzC,IAAyC,MAApCC,cAAoC,MAA3B,IAA2B,EAAtB9L,EAAsB,EAAtBA,SACtE+L,EAAS,CACXD,SACA3I,QACA0I,WACAG,WAAY,qBACZC,aAAc,OAGlB,OACI,cAAC,KAAD,CAAON,QAASA,EAASC,QAASA,EAASM,YAAY,EAAMC,aAAcJ,EAAQK,UAAU,UAA7F,SACKpM,M,ukECpBN,IAAMC,GAAYJ,IAAOwM,IAAV,MASThM,GAAiBR,IAAOS,IAAV,MAQdgM,GAAOzM,IAAOS,IAAV,MAOJiM,GAAe1M,IAAOoC,QAAV,MAEZuK,GAAW3M,IAAOS,IAAV,MAURmM,GAAa5M,IAAO8C,OAAV,MAMV+J,GAAW7M,YAAO8M,KAAP9M,CAAH,MAMR+M,GAAe/M,IAAOoC,QAAV,MAYZ4K,GAAchN,IAAOa,EAAV,MAKXoM,GAAOjN,IAAOa,EAAV,MAKJqM,GAAalN,IAAOS,IAAV,MAMV0M,GAAenN,YAAO6C,EAAP7C,CAAH,MC4BVoN,GAhFH,SAAC,GAAgC,IAAnBC,EAAkB,EAA7BC,UACHvG,EAASE,KAATF,KADgC,EAEdlC,KAAlBF,EAFgC,EAEhCA,KAAMC,EAF0B,EAE1BA,QACN7D,EAAaC,cAAbD,SAHgC,EAIVmE,oBAAS,GAJC,mBAIjC4G,EAJiC,KAIxByB,EAJwB,OAKVrI,mBAAS,IALC,mBAKjCsI,EALiC,KAKxBC,EALwB,KAOxC,GAAiB,MAAb1M,IAAqBsM,EACrB,OAAO,KAGX,IAAMK,EAAa,WACfH,GAAW,GACXE,EAAW,KAqBf,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,cAAChB,GAAD,UACI,cAAC,IAAD,CAASkB,GAAG,IAAZ,6BAEJ,cAACjB,GAAD,UACI,eAACC,GAAD,WACK5F,EAAKP,OACF,cAAC,IAAD,CAASmH,GAAE,WAAM5G,EAAKH,MAAX,YAAoBG,EAAKP,QAApC,kBAEA,cAAC,IAAD,CAASmH,GAAG,UAAZ,oBAEHhJ,EAAKwB,MACF,eAACyG,GAAD,CAAYgB,QAAS,kBAAML,GAAW,IAAtC,UACK5I,EAAKwB,KACN,cAAC0G,GAAD,eAMpB,cAAC,GAAD,CAAOf,QAASA,EAASC,QAAS2B,EAAYzB,OAAQ,IAAKD,SAAU,IAArE,SACI,eAACe,GAAD,WACI,6CACA,cAACC,GAAD,2BACA,cAACC,GAAD,UAAOtI,EAAKwB,OACZ,eAAC7D,EAAD,CAAYuL,SA7CF,SAACC,GXWL,IAAC/L,EWVnB+L,EAAEC,iBACFnJ,EAAQ,2BAAKD,GAAN,IAAYwB,KAAMqH,KACzBE,IACAlK,GAAS,CACLC,KAAMN,GAAU+G,QAChBxG,QAAS,kBACL,iCACK,kBADL,IACwB,eAACT,EAAD,WAAgBuK,EAAhB,aAK5BzG,EAAKP,SXFUzE,EWGJ,CAAEyE,OAAQO,EAAKP,OAAQyC,OAAQtE,EAAKuB,GAAIC,KAAMqH,GXFjE9L,EAAOO,KAAK,mBAAoBF,KWiChB,UACI,eAACmL,GAAD,WACI,uBAAOc,QAAQ,UAAf,sBACA,uBACIvK,KAAK,OACL0C,KAAK,UACLD,GAAG,UACHP,MAAO6H,EACPS,SAAU,SAACH,GAAD,OAAOL,EAAWK,EAAEzM,OAAOsE,aAG7C,cAACwH,GAAD,CAAc1J,KAAK,SAAnB,qC,SCVTyK,GA1EQ,SAAC,GAA6D,IAAhDC,EAA+C,EAA1DC,UAAsBC,EAAoC,EAApCA,cAAkBC,EAAkB,gDACrDrH,KAAnBF,EADwE,EACxEA,KAAMC,EADkE,EAClEA,SACNrC,EAASE,KAATF,KACF4J,EAAUC,cAHgE,EAIpDtJ,mBAA0C,WAJU,mBAIzEuJ,EAJyE,KAIjEC,EAJiE,KAK1ElI,EAAS6H,EAAcM,OAAOzI,GAC9B0I,EAAOP,EAAcQ,IAAIrF,MAAM,KAAK,GAyD1C,OAvDAvD,qBAAU,WACN,IAEI,GADAoB,QAAQC,IAAIP,EAAKP,OAAQA,IACpBA,EAAQ,OAAO+H,EAAQO,QAAQ,YZftB/M,EYiBJ,CAAEyE,UZjB4BxE,EYiBlB,SAAC+M,GACnB,GAAIA,EAAIzK,QAAS,CAEb,IAAIK,EAAKwB,KAUL,OAAOoI,EAAQO,QAAR,gBAAyBtI,IZzBpDzE,EYgB6B,CAAEyE,SAAQ7B,QZfvC3C,EYe+C,SAAC+M,GACpBA,EAAIzK,QACJoK,EAAU,WAEVA,EAAU,UZjBtChN,EAAOO,KAAK,YAAaF,EAAMC,OYwBZ,CACH,IAAK+E,EAAKP,OAAQ,OAAO+H,EAAQO,QAAQ,WAEzChN,EAAW,CAAE0E,WAAU,SAACuI,GACpB,GAAKA,EAAIzK,QAMT,OAJA0C,EAAS,CACLvD,KAAMvB,EAAWyF,SACjBH,QAAS,CAAET,UAERwH,EAAQS,KAAR,qBAA2BxI,OZtClC,IACpBzE,EACAC,GALAN,EAAOO,KAAK,aAAcF,EAAMC,GY6CxB0M,EAAU,WACZ,MAAOnK,GACL8C,QAAQC,IAAI/C,GACZmK,EAAU,SZjDG,IAAC3M,EAA0BC,IYmD7C,CAACqM,EAAcM,OAAOzI,GAAIvB,IAE7BsB,qBAAU,WACN,IAAMgJ,EACFlI,EAAKJ,OAAO4E,OAAS,GACrBxE,EAAKJ,OAAO6E,OAAM,SAACtD,GAAD,OAAWA,EAAMM,OAAOF,MAAK,SAACG,GAAD,OAAWA,EAAM9D,KAAKuB,KAAOvB,EAAKuB,SACjFa,EAAKP,QAAUyI,EACfV,EAAQO,QAAR,WAAoBhP,EAAMqB,QAA1B,YAAqCqF,IAIrCO,EAAKP,QAAUoI,IAAS7H,EAAKH,OAC7B2H,EAAQO,QAAR,WAAoB/H,EAAKH,MAAzB,YAAkCJ,MAEvC,CAACO,EAAKH,QAEM,YAAX6H,EACO,cAAChM,EAAD,yBAGI,UAAXgM,EACO,cAAChM,EAAD,gDAGJ,cAAC0L,EAAD,2BAAeE,GAAmBC,KC3EhCY,GAAsBxK,wBAA4B,CAC3DyK,aAAc,KACdC,gBAAiB,iBAAO,MAGfC,GAAkB,WAC3B,OAAOvK,qBAAWoK,KAaPI,GAVc,SAAC,GAAyB,IAAvBnP,EAAsB,EAAtBA,SAAsB,EACV+E,mBAAuB,MADb,mBAC3CiK,EAD2C,KAC7BC,EAD6B,KAGlD,OACI,cAACF,GAAoB7I,SAArB,CAA8BV,MAAO,CAAEwJ,eAAcC,mBAArD,SACKjP,K,qOCxBN,IAAM+M,GAAalN,IAAOS,IAAV,MC6GR8O,GA/FI,WACf,IAAMhB,EAAUC,cADK,EAEMvH,KAAnBF,EAFa,EAEbA,KAAMC,EAFO,EAEPA,SAFO,EAGKnC,KAAlBF,EAHa,EAGbA,KAAMC,EAHO,EAGPA,QACR4K,EAAgB,CAClBrJ,KAAMxB,EAAKwB,MAAQ,GACnBI,SAAU,IANO,EAQWrB,oBAAS,GARpB,mBAQduK,EARc,KAQJC,EARI,OASOxK,mBAASsK,GAThB,mBASdG,EATc,KASNC,EATM,OAUS1K,mBAAiB,IAV1B,mBAUd2K,EAVc,KAULC,EAVK,OAWa5K,oBAAS,GAXtB,mBAWd6K,EAXc,KAWHC,EAXG,KAafC,EAgDN,WACI,IAAMA,EAAiB,GAClBN,EAAOxJ,OAAM8J,EAAO9J,KAAO,qBAC3BwJ,EAAOpJ,WAAU0J,EAAO1J,SAAW,2BAExC,OAAO0J,EArDIC,GACTC,GAAeC,OAAOC,KAAKJ,GAAQ1E,OAqCnC0C,EAAW,SAACH,GAA4C,IAAD,EACjCA,EAAEzM,OAAlB8E,EADiD,EACjDA,KAAMR,EAD2C,EAC3CA,MACdiK,GAAU,SAACD,GAAD,mBAAC,eAAiBA,GAAlB,kBAA2BxJ,EAAOR,QAG1C2K,EAAS,SAACxC,GAA2C,IAC/C3H,EAAS2H,EAAEzM,OAAX8E,KACR2J,GAAW,SAACD,GAAD,mBAAC,eAAkBA,GAAnB,kBAA6B1J,GAAO,QAWnD,OACI,eAAC7D,EAAD,CAAYuL,SAtDc,SAACC,GAI3B,GAHAA,EAAEC,iBACFiC,GAAa,GAERG,EAAL,CAEAT,GAAY,GACR3I,EAAKP,SACL9E,EAAO6O,aACP7O,EAAO8O,WAGX,IAAMC,EAAO,2BACN9L,GADM,IAETwB,KAAMwJ,EAAOxJ,KACbpC,MAAO2M,KAAY,CACfC,WAAY,QACZC,IAAK,WAGbhM,EAAQ6L,GACR3O,EAAW,CAAE0E,OAAQ,OAAQ,SAACuI,GAC1B,GAAKA,EAAIzK,QAAT,CAIA,IAAMkC,EAASuI,EAAIhN,KAAKyE,OACxBQ,EAAS,CACLvD,KAAMvB,EAAWqF,gBACjBC,QAAS,CAAEjB,SAAUoJ,EAAOpJ,SAAUC,SAAQC,QAASgK,EAAQvK,GAAIuB,YAAagJ,KAEpFlC,EAAQS,KAAR,qBAA2BxI,UAuB/B,UACI,eAAC,GAAD,WACI,uBAAOwH,QAAQ,OAAf,uBACA,uBAAOvK,KAAK,OAAO0C,KAAK,OAAOD,GAAG,OAAOP,MAAOgK,EAAOxJ,KAAM8H,SAAUA,EAAUqC,OAAQA,KACvFT,EAAQ1J,MAAQ4J,IAAcE,EAAO9J,MAAQ,cAAC3D,EAAD,UAAeyN,EAAO9J,UAEzE,eAAC,GAAD,WACI,uBAAO6H,QAAQ,WAAf,wBACA,uBACIvK,KAAK,OACL0C,KAAK,WACLD,GAAG,WACHP,MAAOgK,EAAOpJ,SACd0H,SAAUA,EACVqC,OAAQA,KAEVT,EAAQtJ,UAAYwJ,IAAcE,EAAO1J,UAAY,cAAC/D,EAAD,UAAeyN,EAAO1J,cAEjF,cAACxD,EAAD,CAAYC,UAAWyM,EAAUA,SAAUA,EAA3C,6BC1FGoB,GAVA,WACX,OACI,eAACxO,EAAD,WACI,cAACI,EAAD,+BACA,cAACE,EAAD,qFACA,cAAC,GAAD,Q,uECNL,IAAMvC,GAAYJ,YAAOmC,EAAPnC,CAAH,MCUP8Q,GATC,WACZ,OACI,eAAC,GAAD,WACI,cAACrO,EAAD,wBACA,cAACE,EAAD,uF,kqBCNL,IAAMvC,GAAYJ,IAAO+Q,QAAV,MAOTC,GAAWhR,IAAOiR,GAAV,MAWRC,GAAOlR,IAAOa,EAAV,MCbXmQ,GAAW,SAAC,GAAD,IAAG7Q,EAAH,EAAGA,SAAH,OAAwB,cAAC,GAAD,UAAaA,KAChD+Q,GAAO,SAAC,GAAD,IAAG/Q,EAAH,EAAGA,SAAH,OAAwB,cAAC,GAAD,UAASA,KAExCgR,GAAc,SAAC,GAAwB,IAAtBhR,EAAqB,EAArBA,SACbiR,EAAWC,IAAMC,SAASC,QAAQpR,GAAU0H,QAC9C,SAAC2J,GAAD,OAAWH,IAAMI,eAAeD,IAAUA,EAAM/N,OAASuN,MAEvDU,EAAOL,IAAMC,SAASC,QAAQpR,GAAU0H,QAAO,SAAC2J,GAAD,OAAWH,IAAMI,eAAeD,IAAUA,EAAM/N,OAASyN,MAE9G,OACI,eAAC,GAAD,WACKE,EACAM,MAKbP,GAAYH,SAAWA,GACvBG,GAAYD,KAAOA,GAEJC,U,wlCCxBR,IAAMQ,GAAO3R,IAAOoC,QAAV,MA+BXwP,GAAaC,YAAH,MAKHC,GAAY9R,YAAO+R,KAAP/R,CAAH,KAChB4R,IAIOI,GAAWhS,YAAOiS,KAAPjS,CAAH,KACf4R,IAGOM,GAAWlS,YAAOmS,KAAPnS,CAAH,KACf4R,IC7CAQ,GAAe,CACjB,CACIhB,SAAU,sBACVM,KAAM,yDACNW,KAAM,cAAC,GAAD,KAEV,CACIjB,SAAU,mBACVM,KAAM,4FACNW,KAAM,cAAC,GAAD,KAEV,CACIjB,SAAU,gBACVM,KAAM,0DACNW,KAAM,cAAC,GAAD,MAmBCC,GAfG,WACd,OACI,cAAC,GAAD,UACKF,GAAa1J,KAAI,SAAC6J,GAAD,OACd,eAAC,GAAD,WACI,eAAC,GAAYvB,SAAb,WACKuB,EAAEF,KADP,IACcE,EAAEnB,YAEhB,cAAC,GAAYF,KAAb,UAAmBqB,EAAEb,SAJPa,EAAEnB,gB,m8BCvB7B,IAAMvO,GAAS7C,IAAO8C,OAAV,MAUN0P,GAAQxS,IAAOW,IAAV,MAQL8R,GAAgBzS,IAAOS,IAAV,MAabiS,GAAW1S,YAAO2S,KAAP3S,CAAH,MC+BN4S,GAxCU,WAAO,IAAD,EACD1N,mBAAuB,MADtB,mBACpBgD,EADoB,KACb2K,EADa,OAEG3N,oBAAS,GAFZ,mBAEX4N,GAFW,WAGrBC,EAAW7K,GAAS9E,GAAiB8E,EAAM8K,YAAa,QACtD5D,EAAoBC,KAApBD,gBAuBR,OArBAnJ,qBAAU,YACU,yCAAG,6BAAAgN,EAAA,sEAEXH,GAAW,GAFA,SAGOI,KAAMC,IAAI,kBAHjB,OAKQ,OAFbpE,EAHK,QAKHN,QACJoE,EAAS9D,EAAIhN,MAEjBsF,QAAQC,IAAIyH,GARD,gDAUX1H,QAAQC,IAAR,MACAuL,EAAS,MAXE,yBAaXC,GAAW,GAbA,4EAAH,qDAiBhBM,KACD,IAEElL,GAAU6K,EAGX,eAAC,GAAD,CAAUnF,QAAS,kBAAMwB,EAAgBlH,IAAzC,UACI,cAAC,GAAD,CAAS3G,IAAKwR,EAAUtR,IAAG,kCAAsByG,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOmL,MAA7B,OAC3B,eAAC,GAAD,WACI,cAAC,GAAD,IADJ,oBALwB,M,0nCChD7B,IAAMjT,GAAYJ,YAAOmC,EAAPnC,CAAH,KAIdsT,IAYKC,GAAUvT,IAAOS,IAAV,MCIL+S,GApBE,WACb,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,mDACA,uGACA,+EACA,+BACI,6CACA,0CACA,wCACA,4CAEJ,sEAEJ,cAAC,GAAD,QCnBG,OAA0B,0C,y5FCIlC,IAAMpT,GAAYJ,IAAOoC,QAAV,KAeUqR,IAoBnBC,GAAM1T,IAAOoC,QAAV,MAuBHuR,GAAY3T,IAAO0C,GAAV,MA8BTkR,GAAO5T,IAAOkD,KAAV,MAYJP,GAAW3C,IAAO4C,GAAV,MAmBRiR,IAPK7T,IAAO8T,GAAV,MAOiB9T,YAAO6C,EAAP7C,CAAH,OC1Fd+T,GA1BF,WACT,IAAMxF,EAAUC,cAIhB,OACI,qCACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAKlB,WAAS,IACd,cAACoG,GAAD,UACI,gCACI,eAACC,GAAD,0BAEI,cAACC,GAAD,kCAEJ,cAAC,GAAD,mCACA,cAACC,GAAD,CAAkBjG,QAdrB,WACbW,EAAQS,KAAK,YAaG,iCAIZ,cAAC,GAAD,IACA,cAAC,GAAD,Q,iNC1BL,IAAM9B,GAAalN,IAAOS,IAAV,MCSjB+O,GAAgB,CAClBrJ,KAAM,IA6DK6N,GA1DE,WACb,IAAMzF,EAAUC,cACJhI,EAAsCyN,cAA1C/N,GAFW,EAGOrB,KAAlBF,EAHW,EAGXA,KAAMC,EAHK,EAGLA,QAHK,EAISM,mBAASsK,IAJlB,mBAIZG,EAJY,KAIJC,EAJI,OAKW1K,mBAAiB,IAL5B,mBAKZ2K,EALY,KAKHC,EALG,OAMe5K,oBAAS,GANxB,mBAMZ6K,EANY,KAMDC,EANC,KAQbC,EAaN,WACI,IAAMA,EAAiB,GAClBN,EAAOxJ,OAAM8J,EAAO9J,KAAO,qBAEhC,OAAO8J,EAjBIC,GACTC,GAAeC,OAAOC,KAAKJ,GAAQ1E,OAqCzC,OACI,eAACjJ,EAAD,CAAYuL,SAnBC,SAACC,GAId,GAHAA,EAAEC,iBACFiC,GAAa,GAERG,EAAL,CAEA,IAAMM,EAAO,2BACN9L,GADM,IAETwB,KAAMwJ,EAAOxJ,KACbpC,MAAO2M,KAAY,CACfC,WAAY,QACZC,IAAK,WAGbhM,EAAQ6L,GACRlC,EAAQS,KAAR,qBAA2BxI,MAI3B,UACI,eAAC,GAAD,WACI,8CACA,uBAAO/C,KAAK,OAAO0C,KAAK,OAAO8H,SAvC1B,SAACH,GAA4C,IAAD,EACjCA,EAAEzM,OAAlB8E,EADiD,EACjDA,KAAMR,EAD2C,EAC3CA,MACdiK,GAAU,SAACD,GAAD,mBAAC,eAAiBA,GAAlB,kBAA2BxJ,EAAOR,QAqCe2K,OAlChD,SAACxC,GAA2C,IAC/C3H,EAAS2H,EAAEzM,OAAX8E,KACR2J,GAAW,SAACD,GAAD,mBAAC,eAAkBA,GAAnB,kBAA6B1J,GAAO,WAiCrC0J,EAAQ1J,MAAQ4J,IAAcE,EAAO9J,MAAQ,cAAC3D,EAAD,UAAeyN,EAAO9J,UAEzE,cAACpD,EAAD,8BCtDGmR,GAVF,WACT,OACI,eAAC7R,EAAD,WACI,cAACI,EAAD,8BACA,cAACE,EAAD,oEACA,cAAC,GAAD,Q,4ZCPL,IAAMvC,GAAYJ,IAAOS,IAAV,MAER,SAACH,GAAD,OAAWA,EAAM6T,QAAU,MAIvB,SAAC7T,GAAD,OAAWA,EAAMwD,iBAAmB,0BAIzCsQ,GAAOpU,IAAOa,EAAV,MAIJwT,GAAgBrU,IAAOsU,MAAV,MCUXC,GAhBC,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,KAAML,EAA+C,EAA/CA,OAAQrQ,EAAuC,EAAvCA,gBAAiB3D,EAAsB,EAAtBA,SAC9C,OAAIA,EAEI,cAAC,GAAD,CAAWgU,OAAQA,EAAQrQ,gBAAiBA,EAA5C,SACI,cAACuQ,GAAD,UAAgBlU,MAMxB,cAAC,GAAD,CAAWgU,OAAQA,EAAQrQ,gBAAiBA,EAA5C,SACI,cAACsQ,GAAD,UAAOI,O,2+BCnBZ,IAAMC,GAAOzU,IAAO0U,GAAV,MAUJC,GAAO3U,IAAO4U,GAAV,MAMJC,GAAQ7U,IAAOS,IAAV,MACM,SAACH,GAAD,OAAWA,EAAMyD,SAQ5BkJ,GAAOjN,IAAOa,EAAV,MACE,SAACP,GAAD,OAA0B,IAAfA,EAAMwU,MAAc,YAClC,SAACxU,GAAD,OAA0B,IAAfA,EAAMwU,MAAc,YAC1B,SAACxU,GAAD,OAA0B,IAAfA,EAAMwU,MAAc,cACnC,SAACxU,GAAD,OAA0B,IAAfA,EAAMwU,MAAc,WAGnCC,GAAY/U,IAAOa,EAAV,MASTkM,GAAe/M,IAAOoC,QAAV,MCiBV4S,GAnDE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAmB,EACL/P,oBAAS,GADJ,mBAC5B4G,EAD4B,KACnByB,EADmB,KAInC,OAAI0H,EAAM1J,OADQ,EAGV,qCACI,eAACkJ,GAAD,WACKQ,EAAMC,MAAM,EALX,GAKyBxM,KAAI,SAAC/D,GAAD,OAC3B,eAACgQ,GAAD,WACI,cAACE,GAAD,CAAO9Q,MAAOY,EAAKZ,QACnB,cAAC,GAAD,CAAM+Q,KAAM,EAAZ,SAAgBnQ,EAAKwB,SAFdxB,EAAKuB,OAKpB,cAACyO,GAAD,UACI,cAACI,GAAD,CAAWnH,QAAS,kBAAML,GAAW,IAArC,SACI,mCACI,qCAAQ0H,EAAM1J,OAdxB,KAaM,kBAMZ,cAAC,GAAD,CAAOO,QAASA,EAASC,QAAS,kBAAMwB,GAAW,IAAQtB,OAAQ,IAAnE,SACI,eAAC,GAAD,WACI,uCACA,cAACwI,GAAD,UACKQ,EAAMvM,KAAI,SAAC/D,GAAD,OACP,eAACgQ,GAAD,WACI,cAACE,GAAD,CAAO9Q,MAAOY,EAAKZ,QACnB,cAAC,GAAD,CAAM+Q,KAAM,EAAZ,SAAgBnQ,EAAKwB,SAFdxB,EAAKuB,iBAaxC,cAACuO,GAAD,UACKQ,EAAMvM,KAAI,SAAC/D,GAAD,OACP,eAACgQ,GAAD,WACI,cAACE,GAAD,CAAO9Q,MAAOY,EAAKZ,QACnB,cAAC,GAAD,CAAM+Q,KAAM,EAAZ,SAAgBnQ,EAAKwB,SAFdxB,EAAKuB,U,6yDC9CzB,IAAMiP,GAAOnV,IAAO+Q,QAAV,MAKJqE,GAAcpV,IAAOS,IAAV,MAKX4U,GAAiBrV,YAAOsV,IAAO7U,IAAdT,CAAH,MAIdwS,GAAQxS,YAAOsV,IAAO3U,IAAdX,CAAH,MAOLuV,GAAavV,IAAOa,EAAV,MAuBV2U,GAAaxV,IAAOiR,GAAV,MASVwE,GAAmBzV,IAAOS,IAAV,MAMhBiV,GAAe1V,YAAO6C,EAAP7C,CAAH,MAQZ2V,GAAa3V,YAAO2S,KAAP3S,CAAH,MCbR4V,GArCI,SAAC,GAAsB,IAApB1N,EAAmB,EAAnBA,MACVkH,EAAoBC,KAApBD,gBACArO,EAAaC,cAAbD,SACF8U,EAAgB3N,EAAMM,OAAOX,QAAO,SAACY,GAAD,OAAWA,EAAME,SAAOD,KAAI,SAACD,GAAD,OAAWA,EAAM9D,QACxEkR,EAAcnN,KAAI,SAAC/D,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMZ,SAUjD,OACI,eAACoR,GAAD,WACI,eAACC,GAAD,WACI,eAACC,GAAD,WACI,eAACE,GAAD,WACKM,EAActK,OADnB,IAC2B,4CAE3B,cAAC,GAAD,CAAOhK,IAAK6B,GAAiB8E,EAAM8K,YAAa,aAEpD,eAACyC,GAAD,WACI,cAACD,GAAD,UAAatN,EAAMmL,QACnB,cAAC,GAAD,CAAU4B,MAAOY,UAGzB,eAACH,GAAD,CAAc9H,QAtBD,WACb7M,EAASG,SAASgH,EAAMhC,GAAG4P,YAC3B1G,EAAgB,MAEhBA,EAAgBlH,IAkBhB,UACI,cAACyN,GAAD,IADJ,uB,kRChDL,IAAMlB,GAAOzU,IAAOoC,QAAV,MAMJ2T,GAAQ/V,IAAOa,EAAV,MCeHmV,GAdI,SAAC,GAAuB,IAArBrP,EAAoB,EAApBA,OAClB,OAAKA,EAAO4E,OAKR,cAAC,GAAD,UACK5E,EAAO+B,KAAI,SAACR,GAAD,OACR,cAAC,GAAD,CAA2BA,MAAOA,GAAjBA,EAAMhC,SANxB,cAAC6P,GAAD,+B,uECRR,IAAM3V,GAAYJ,YAAOmC,EAAPnC,CAAH,MC+CPiW,GA3CC,WAAO,IACXlP,EAASE,KAATF,KAOFmP,EANenP,EAAKJ,OACrB+B,KAAI,SAACR,GACF,IAAMiO,EAAQjO,EAAMM,OAAO4N,QAAO,SAACC,EAAK5N,GAAN,OAAiBA,EAAME,MAAQ0N,EAAM,EAAIA,IAAM,GACjF,OAAO,2BAAKnO,GAAZ,IAAmBiO,aAEtBG,MAAK,SAACrD,EAAGsD,GAAJ,OAAUA,EAAEJ,MAAQlD,EAAEkD,SACItO,QAAO,SAACK,GAAD,OAAWA,EAAMiO,MAAQ,KARlD,EAUM,WACpB,IAAMK,EAAiBzP,EAAKL,aAAagC,KAAI,SAAC7H,GAAD,OAAOA,EAAEqF,MAQtD,OAPkBa,EAAKJ,OAAOyP,QAAO,SAACK,EAAWvO,GAC7C,IAAMwO,EAAWxO,EAAMM,OAAOE,KAAI,SAACD,GAAD,OAAWA,EAAM9D,KAAKuB,MAGxD,OADIgC,EAAMM,OAAO+C,QAAUiL,EAAejL,QAAUiL,EAAehL,OAAM,SAACtF,GAAD,OAAQwQ,EAASxV,SAASgF,SAEpG,GASI,CACHsO,KAAM,wDACN1Q,gBAAiB,wBARV,CACH0Q,KAAM,gDACN1Q,gBAAiB,2BASK6S,GAA1BnC,EA/BU,EA+BVA,KAAM1Q,EA/BI,EA+BJA,gBAEd,OACI,eAAC,GAAD,WACI,cAACrB,EAAD,4BACA,cAACE,EAAD,+EACA,cAAC,GAAD,CAAS6R,KAAMA,EAAML,OAAO,WAAWrQ,gBAAiBA,IACxD,cAAC,GAAD,CAAY6C,OAAQuP,QCgCjBU,GAnES,SAAC1O,GAAkB,IAC/BnB,EAASE,KAATF,KACApC,EAASE,KAATF,KACFkS,EAAc9P,EAAKJ,OAAO2B,MAAK,SAACL,GAAD,OAAOA,EAAE/B,KAAOgC,EAAMhC,MACrD4Q,GAAuB,OAAXD,QAAW,IAAXA,OAAA,EAAAA,EAAaE,iBAAkBpS,EAAKuB,GA4DtD,MAAO,CAAE8Q,mBA1DkB,WACvB,GAAKH,EA4BE,IAAIA,IAAgBC,EASvB,YARAtT,GAAS,CACLC,KAAMN,GAAUmH,OAChB5G,QAAS,kBACL,iCACI,cAACT,EAAD,UAAgBiF,EAAMmL,QAD1B,0D3CfO,SACvBtR,EACAC,GAEAN,EAAOO,KAAK,eAAgBF,EAAMC,G2CkB1BiV,CAAY,CAAEzQ,OAAQO,EAAKP,OAAkBmE,QAASzC,EAAMhC,KAAM,SAAC6I,GAC1DA,EAAIzK,SACLD,IAAME,MAAN,uCAA4C2D,EAAMmL,MAAlD,aAzCM,CACd,IAAM6D,EAAsB,2BAAQhP,GAAR,IAAe6O,cAAepS,EAAKuB,GAAIsC,OAAQ,K3CUnFzG,E2CTiB,CAAEyE,OAAQO,EAAKP,OAAkB0B,MAAOgP,G3CUzDlV,E2CVuE,SAAC+M,GACxDA,EAAIzK,QACJd,GAAS,CACLC,KAAMN,GAAU+G,QAChBxG,QAAS,kBACL,mCACI,0CACU,cAACT,EAAD,UAAgBiF,EAAMmL,QADhC,aAOZ7P,GAAS,CACLC,KAAMN,GAAU+F,MAChBxF,QAAS,kBACL,mCACI,+DAC+B,cAACT,EAAD,UAAgBiF,EAAMmL,QADrD,YAMZhP,IAAME,MAAN,qCAA0C2D,EAAMmL,MAAhD,Q3CXhB3R,EAAOO,KAAK,YAAaF,EAAMC,GAJX,IACpBD,EACAC,G2C6C6BmV,sBATpBN,EAEMA,IAAgBC,EAChB,2BAEA,wBAJA,sBAQiED,gB,6zJCnE7E,IAAMO,GAAUpX,YAAOsV,IAAO7U,IAAdT,CAAH,MAiBPI,GAAYJ,YAAOsV,IAAOlT,QAAdpC,CAAH,MAqBTwS,GAAQxS,YAAOsV,IAAO3U,IAAdX,CAAH,MAkBLqX,GAAmBrX,YAAOsV,IAAOvE,QAAd/Q,CAAH,MAkBhByC,GAAQzC,YAAOsV,IAAOrE,GAAdjR,CAAH,MAKLsX,GAAMtX,IAAOa,EAAV,MAKH0W,GAAgBvX,IAAOS,IAAV,MAWb+W,GAAQxX,IAAOa,EAAV,MAOL4W,GAAWzX,IAAOa,EAAV,MAKR6W,GAAQ1X,IAAOa,EAAV,MAML8W,GAAU3X,IAAOa,EAAV,MAUP+W,GAAa5X,IAAOa,EAAV,MAKV8Q,GAAO3R,IAAOS,IAAV,MAUJoX,GAAW7X,IAAOS,IAAV,MAMRqX,GAAO9X,YAAO+X,KAAP/X,CAAH,MAKJgY,GAAQhY,IAAOiY,OAAV,MAaLC,GAAkBlY,YAAOsV,IAAO7U,IAAdT,CAAH,MAefmY,GAAanY,YAAO6C,EAAP7C,CAAH,MAEVoY,GAAYpY,YAAO6C,EAAP7C,CAAH,MACJ,SAACM,GAAD,OAAWA,EAAMwD,iBAAmB,wBAIhD8N,GAAaC,YAAH,MAKHwG,GAAWrY,YAAOsY,KAAPtY,CAAH,KACf4R,IAGO2G,GAAWvY,YAAOwY,KAAPxY,CAAH,KACf4R,IAGO6G,GAAYzY,YAAO0Y,KAAP1Y,CAAH,KAChB4R,IAGO+G,GAAmB3Y,YAAO6C,EAAP7C,CAAH,MAGX,SAACM,GAAD,OAAWA,EAAMwD,iBAAmB,wBCMvC8U,GAjLK,SAAC,GAAsB,IAAD,MAAnB1Q,EAAmB,EAAnBA,MACbqG,EAAUC,cACRzH,EAASE,KAATF,KAF8B,EAG6B6P,GAAgB1O,GAA3E8O,EAH8B,EAG9BA,mBAAoBG,EAHU,EAGVA,sBAAuBN,EAHb,EAGaA,YAC1BgC,EAAmBxJ,KAApCD,gBAJ8B,EAMRlK,mBAA8B,MANtB,mBAM/B4T,EAN+B,KAMtBC,EANsB,OAOR7T,oBAAS,GAPD,mBAOtB4N,GAPsB,WAShCC,EAAW3P,GAAiB8E,EAAM8K,YAAa,QAC/CgG,EACFF,IAAO,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAASG,cAAb,iBAAI,EAAiBC,eAArB,aAAI,EAA0B5Q,MAAK,SAAC6Q,GAAD,MAA0B,YAAfA,EAAM1V,MAAqC,YAAf0V,EAAMC,SACrFC,EAAU,+CAAoCL,QAApC,IAAoCA,OAApC,EAAoCA,EAAahU,KAC3DsU,EAAc/K,EAAQgL,SAASxY,SAASG,SAASpB,EAAM4H,WAY7DzB,qBAAU,WACN,IAAMuT,EAAa,SAAC1L,GAChBzG,QAAQC,IAAIwG,GACE,WAAVA,EAAE9I,KACFuJ,EAAQS,KAAR,qBAA2BjI,EAAKP,UAMxC,OAFApB,OAAOqU,iBAAiB,UAAWD,GAE5BpU,OAAOsU,oBAAoB,UAAWF,KAC9C,IAEHvT,qBAAU,WAGN,OAFA0T,IACAC,SAASlI,KAAK7N,MAAMgW,SAAW,SACxB,WACHC,EAAYC,OAAO,2BACnBH,SAASlI,KAAK7N,MAAMgW,SAAW,WAEpC,CAAC3R,IAEJ,IAAM4R,EAAc5G,KAAM8G,YAAYC,SAEhCN,EAAiB,yCAAG,6BAAA1G,EAAA,sEAElBH,GAAW,GAFO,SAGAI,KAAMC,IAAN,kBAAqBjL,EAAMhC,IAAM,CAC/C4T,YAAaA,EAAYI,QAJX,OAMC,OAHbnL,EAHY,QAMVN,QACJsK,EAAWhK,EAAIhN,MAEnB+Q,GAAW,GATO,gDAWlBgH,EAAYC,OAAO,6BACnB1S,QAAQC,IAAR,MACAwL,GAAW,GAbO,yDAAH,qDAiBvB,OACI,cAACsE,GAAD,CACI+C,gBAAc,EACdvM,QAtDe,SAACE,GAChBA,EAAEzM,OAAO+Y,WAAW,iBACpBvB,EAAe,OAqDfwB,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,EAAGG,WAAY,CAAE9W,SAAU,IALhD,SAOI,cAAC,GAAD,UACI,eAAC0T,GAAD,CAAkBgD,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKI,SAAQ,gBAAWxS,EAAMhC,IAA7F,UACI,cAAC,GAAD,CAAO3E,IAAKwR,IACZ,cAAC,IAAD,UACK+F,GACG,eAAC,IAAOrY,IAAR,CACI4Z,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBG,WAAY,CAAE9W,SAAU,GAAKgX,MAAO,KAHxC,UAKKrB,GACG,eAACX,GAAD,CACI/K,QAASoJ,EACTlT,gBAAiBqT,EAFrB,UAIK,KACCN,GACE,qCACI,cAAC0B,GAAD,IADJ,gBAIH1B,GACG,qCACI,cAAC4B,GAAD,IADJ,sBAMZ,cAAC,GAAD,UAAQK,EAAQzF,QAChB,cAACiE,GAAD,UAAMwB,EAAQ8B,UAEd,cAACrD,GAAD,oBACKuB,EAAQ+B,cADb,aACK,EAAgBnS,KAAI,SAACoS,GAAD,OACjB,cAACtD,GAAD,UAAuBsD,EAAM3U,MAAjB2U,EAAM5U,SAG1B,cAACwR,GAAD,uBACA,cAACD,GAAD,UAAWqB,EAAQiC,WACnB,cAACpD,GAAD,sBACA,eAAC,GAAD,WACI,eAACE,GAAD,WACI,cAACH,GAAD,qBACA,eAACE,GAAD,WACKkB,EAAQkC,aADb,IAC2B,cAAClD,GAAD,UAG/B,eAACD,GAAD,WACI,cAACH,GAAD,sBACA,8BAAIoB,EAAQmC,QAAZ,aAEJ,eAACpD,GAAD,WACI,cAACH,GAAD,uBACA,4BAAIoB,EAAQoC,kBAEhB,eAACrD,GAAD,WACI,cAACH,GAAD,uBACA,4BAAIoB,EAAQqC,kBAAkBC,sBAGrCpC,GACG,qCACI,cAACrB,GAAD,sBACA,cAACK,GAAD,CAAOzW,IAAK8X,EAAYgC,YAAY,IAAIC,iBAAe,OAG/D,eAACpD,GAAD,CACImC,QAAS,CAAEC,QAAS,EAAGiB,EAAG,IAC1BhB,QAAS,CACLD,QAAS,EACTiB,EAAG,EACHd,WAAY,CACR9W,SAAU,MANtB,UAUI,eAACwU,GAAD,CAAYvK,QAhIpB,WACpBiL,EAAe,OA+Ha,UACI,cAACR,GAAD,IADJ,aAICiB,GACG,eAAClB,GAAD,CAAWxK,QAASoJ,EAAoBlT,gBAAiBqT,EAAzD,WACMN,GACE,qCACI,cAAC0B,GAAD,IADJ,gBAIH1B,GACG,qCACI,cAAC4B,GAAD,IADJ,gC,+5BCtMzC,IAAMrY,GAAYJ,IAAOsU,MAAV,MAQToD,GAAQ1X,IAAOwb,MAAV,MASLC,GAAiBzb,IAAOS,IAAV,MAadib,GAAa1b,YAAO6C,EAAP7C,CAAH,MCCR2b,GA9BI,WACf,IAAMC,EAAWjS,iBAAgC,MAWjD,OACI,eAAC,GAAD,WACI,cAAC,GAAD,0BACA,eAAC8R,GAAD,WACI,uBACIhY,KAAK,OACL0C,KAAK,OACL0V,aAAczW,OAAOmU,SAASnY,KAC9B0a,IAAKF,EACLhO,QAlBA,WAAO,IAAD,EAClB,UAAAgO,EAASnQ,eAAT,SAAkBsQ,UAkBNC,UAAQ,IAEZ,cAACN,GAAD,CAAY9N,QAjBA,WACpBqO,UAAUC,UAAUC,UAAU/W,OAAOmU,SAASnY,MAC9CoC,GAAS,CAAEC,KAAMN,GAAUmH,OAAQ5G,QAAS,0BAepC,yB,wXCzBT,IAAMtD,GAAYJ,YAAOsV,IAAO7U,IAAdT,CAAH,MACN,SAACM,GAAD,OAAWA,EAAM8b,UAAY,WCIvC7P,GAAY,CACd8N,QAAS,CACLkB,EAAG,GACHjB,QAAS,GAEbC,QAAS,CACLgB,EAAG,EACHjB,QAAS,EACTG,WAAY,CACR9W,SAAU,GACVgX,MAAO,KAaJ0B,GARQ,SAAC,GAAmC,IAAjCD,EAAgC,EAAhCA,SAAUjc,EAAsB,EAAtBA,SAChC,OACI,cAAC,GAAD,CAAWmc,SAAU/P,GAAW8N,QAAQ,UAAUE,QAAQ,UAAU6B,SAAUA,EAA9E,SACKjc,K,orGCpBiBH,IAAOS,IAAV,MAApB,IAiBDmR,GAAaC,YAAH,MAMH0K,GAAYvc,YAAOwc,KAAPxc,CAAH,KAChB4R,IAIO6K,GAAezc,YAAO0c,KAAP1c,CAAH,KACnB4R,IAEO+K,GAAgB3c,YAAO4c,KAAP5c,CAAH,KACpB4R,IAMOiL,IAHa7c,YAAO8c,KAAP9c,CAAH,KACjB4R,IAEkB5R,YAAO+c,KAAP/c,CAAH,KACf4R,KAGOoL,GAAYhd,YAAOid,KAAPjd,CAAH,KAChB4R,IAGO/E,GAAW7M,YAAOkd,KAAPld,CAAH,KACf4R,IAIOuL,GAAand,YAAO6C,EAAP7C,CAAH,MACL,SAACM,GAAD,OAAYA,EAAM8c,QAAU,UAAY,0BAC7C,SAAC9c,GAAD,OAAYA,EAAM8c,QAAU,UAAY,iBAQ7CP,IAES,SAACvc,GAAD,OAAWA,EAAM8c,SAAW,aAShCC,GAAoBrd,YAAOmd,GAAPnd,CAAH,MAIjBsd,GAActd,YAAO6C,EAAP7C,CAAH,MAkBX+M,IALiB/M,IAAOa,EAAV,MAKCb,IAAOS,IAAV,OA2CZ8c,IALYvd,IAAOa,EAAV,MAKKb,YAAO6C,EAAP7C,CAAH,OCcTwd,GAtIM,WAAO,IAAD,EACfzW,EAASE,KAATF,KACApC,EAASE,KAATF,KACF4J,EAAUC,cAHO,EAI2BtJ,oBAAS,GAJpC,mBAIhBuY,EAJgB,KAIGC,EAJH,OAK2BxY,oBAAS,GALpC,mBAKhByY,EALgB,KAKGC,EALH,KAMjBC,EAAQ9W,EAAKL,aAAa4B,MAAK,SAACzH,GAAD,OAAOA,EAAEqF,KAAOa,EAAKN,WACpDqX,EAAW,UAAG/W,EAAKL,aAAa4B,MAAK,SAACzH,GAAD,OAAOA,EAAEqF,KAAOvB,EAAKuB,aAA/C,aAAG,EAAiD6C,MAC/DgV,EAAoBhX,EAAKL,aAAamB,QAAO,SAAChH,GAAD,OAAOA,EAAEkI,OAASlI,EAAEqF,KAAOa,EAAKN,WAC7EuX,GAAkBjX,EAAKJ,OAAO4E,SAAWwS,EAAkBxS,OAC3D7B,EAAUC,mBACVC,EAAYD,mBA6DlB,OATA1D,qBAAU,WACN,OAAO,WACCyD,EAAQ+B,UACRpH,IAAMsH,QAAQjC,EAAQ+B,SACtB/B,EAAQ+B,aAAUwS,MAG3B,IAGC,qCACI,eAAC,GAAD,CAAgB7B,SAAS,QAAzB,UACI,eAACkB,GAAD,CAAa1P,QAjBN,SAACE,GAChBA,EAAEoQ,kBACFR,GAAqB,IAeb,UACI,cAACnB,GAAD,IADJ,IACkB,+BAAOwB,EAAkBxS,YAE1CsS,GAASA,EAAM3X,KAAOvB,EAAKuB,GACxB,eAACiX,GAAD,CAAYvP,QA1CP,WACZoQ,EAKDjX,EAAKL,aAAa6E,QAAU,EAC5B/H,GAAS,CAAEC,KAAMN,GAAUmH,OAAQ5G,QAAS,kCAI3CqD,EAAKJ,OAAO4E,OAKZwS,EAAkBxS,QACnB/H,GAAS,CAAEC,KAAMN,GAAUmH,OAAQ5G,QAAS,uCAL5CF,GAAS,CAAEC,KAAMN,GAAUmH,OAAQ5G,QAAS,8CAV5Cka,GAAqB,IAwCsBR,QAASY,EAA5C,UACI,cAACnB,GAAD,IADJ,mBAKA,eAACQ,GAAD,CAAmBzP,QAvER,WnDYJ,IACvB7L,EACAC,EmDbIqC,IAAMsH,QAAQjC,EAAQ+B,SACtBC,aAAa9B,EAAU6B,SnDW3B1J,EmDVgB,CAAEyE,OAAQO,EAAKP,OAAkByC,OAAQtE,EAAKuB,InDW9DlE,EmDXoE,SAAC+M,GACzDA,EAAIzK,UAAYwZ,IAChBta,GAAS,CAAEC,KAAMN,GAAU+G,QAASxG,QAAS,oCAAqCC,SAAU,OAC5FiG,EAAU6B,QAAUrG,OAAOwG,YACvB,kBACKlC,EAAQ+B,QAAUjI,GAAS,CACxBC,KAAMN,GAAUgb,QAChBza,QAAS,mCACTC,SAAU,UAElB,QnDGhBjC,EAAOO,KAAK,aAAcF,EAAMC,ImDuDhB,UACK8b,EAAc,cAACrB,GAAD,IAAmB,cAACE,GAAD,IADtC,uBAMR,cAAC,GAAD,CAAO7Q,QAAS2R,EAAmB1R,QAAS,kBAAM2R,GAAqB,IAAQzR,OAAQ,IAAKD,SAAU,IAAtG,SACI,eAAC,GAAD,WACI,8CACA,6BACKjF,EAAKL,aAAagC,KAAI,SAAC7H,GACpB,OAAIA,EAAEqF,KAAOa,EAAKN,QAEV,+BACI,gCACI,cAACuW,GAAD,IACCnc,EAAEsF,QAEP,wCALKtF,EAAEqF,IAWf,+BACI,gCACI,cAAC,GAAD,IADJ,IACkBrF,EAAEsF,QAEnBtF,EAAEkI,OAAS,wCAJPlI,EAAEqF,cAW/B,cAAC,GAAD,CAAO4F,QAAS6R,EAAmB5R,QAAS,kBAAM6R,GAAqB,IAAQ3R,OAAQ,IAAKD,SAAU,IAAtG,SACI,eAAC,GAAD,WACI,+CACA,+BACI,mGACA,uBACA,uHAEJ,cAACuR,GAAD,CAAa3P,QA/FF,WnDIJ,IAAC7L,EAA0BC,EAA1BD,EmDHR,CAAEyE,OAAQO,EAAKP,QnDI/B9E,EAAOO,KAAK,eAAgBF,EAAMC,GmDH9BuM,EAAQO,QAAR,kBAA2B/H,EAAKP,UA6FpB,4B,ipBCpJb,IAAM4X,GAASpe,IAAOwM,IAAV,MASN6R,GAAMre,IAAO8C,OAAV,MAOG,SAACxC,GAAD,OAAYA,EAAMge,SAAW,IAAM,OACjC,SAAChe,GAAD,OAAYA,EAAMge,UAAY,kCACjC,SAAChe,GAAD,OAAWA,EAAMge,UAAY,wBAOlCC,GAAave,IAAOoC,QAAV,MACR,SAAC9B,GAAD,OAAYA,EAAM+M,KAAO,QAAU,UCMnCmR,GA1BF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMte,EAAsB,EAAtBA,SAAsB,EACJ+E,mBAAS,GADL,mBACjCwZ,EADiC,KACrBC,EADqB,KAOxC,OACI,qCACI,cAACP,GAAD,UACKK,EAAK/V,KAAI,SAACkW,EAASC,GAAV,OACN,cAACR,GAAD,CAAiBC,SAAUI,IAAeG,EAAOjR,QAAS,SAACE,GAAD,OARxD,SAAC+Q,GACfF,EAAcE,GAO+DC,CAAUD,IAA3E,SACKD,GADKC,QAMjB1e,EAASuI,KAAI,SAAC0F,EAAWyQ,GAAZ,OACV,cAACN,GAAD,CAAwBlR,KAAMqR,IAAeG,EAA7C,SACKzQ,GADYyQ,UC1BpBhE,GAAS,CAClB,CACI3U,GAAI,GACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,aAEV,CACID,GAAI,GACJC,KAAM,aAEV,CACID,GAAI,GACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,GACJC,KAAM,eAEV,CACID,GAAI,GACJC,KAAM,SAEV,CACID,GAAI,MACJC,KAAM,UAEV,CACID,GAAI,GACJC,KAAM,WAEV,CACID,GAAI,GACJC,KAAM,WAEV,CACID,GAAI,GACJC,KAAM,UAEV,CACID,GAAI,MACJC,KAAM,SAEV,CACID,GAAI,KACJC,KAAM,WAEV,CACID,GAAI,MACJC,KAAM,WAEV,CACID,GAAI,IACJC,KAAM,mBAEV,CACID,GAAI,MACJC,KAAM,YAEV,CACID,GAAI,GACJC,KAAM,YAEV,CACID,GAAI,MACJC,KAAM,OAEV,CACID,GAAI,GACJC,KAAM,Y,uhKCpEP,IAAMwO,GAAO3U,IAAO+Q,QAAV,MAWJyB,GAAQxS,YAAOsV,IAAO3U,IAAdX,CAAH,MAYL+e,GAAgB/e,IAAO+Q,QAAV,MAmCbtO,GAAQzC,IAAOiR,GAAV,MAQL+N,GAAiBhf,IAAOS,IAAV,MASdwe,GAAajf,YAAOwX,GAAPxX,CAAH,MAUVyX,GAAWzX,IAAOa,EAAV,MAuDRqe,GAAgBlf,YAAO6C,EAAP7C,CAAH,MAabkY,GAAkBlY,IAAO8C,OAAV,MAOV,SAACxC,GAAD,OAAWA,EAAMwD,iBAAmB,aAQzCyU,GAAWvY,YAAOwY,KAAPxY,CAAH,MAIRyY,GAAYzY,YAAO0Y,KAAP1Y,CAAH,MAIT0S,GAAW1S,YAAO2S,KAAP3S,CAAH,MC9GNmf,GA9CO,SAAC,GAAoC,IAAlCjX,EAAiC,EAAjCA,MAAOkX,EAA0B,EAA1BA,aACpBhQ,EAAoBC,KAApBD,gBACFb,EAAUC,cAFsC,EAGaoI,GAAgB1O,GAA3E2O,EAH8C,EAG9CA,YAAaG,EAHiC,EAGjCA,mBAAoBG,EAHa,EAGbA,sBACnC0D,EAAS3S,EAAMmX,UAAU3W,KAAI,SAAC4W,GAAD,OAAaC,GAAajX,MAAK,SAACkX,GAAD,OAAOA,EAAEtZ,KAAOoZ,QAO5EG,EAAe,WACIlR,EAAQgL,SAArBxY,SACKG,SAASgH,EAAMhC,GAAG4P,YAC3B1G,EAAgB,MAEhBA,EAAgBlH,IAIxB,OACI,eAAC,GAAD,CAAM0F,QAAS6R,EAAcC,KAAK,SAAlC,UACKN,GACG,eAAC,GAAD,CAAiBxR,QAjBP,SAACE,GACnBA,EAAEoQ,kBACFlH,KAeiDlT,gBAAiBqT,EAA1D,WACMN,GAAe,cAAC,GAAD,IAChBA,GAAe,cAAC,GAAD,OAGxB,cAAC,GAAD,CAAOtV,IAAK6B,GAAiB8E,EAAM8K,YAAa,QAASvR,IAAKyG,EAAMmL,QAAU,IAC9E,eAAC0L,GAAD,WACI,cAAC,GAAD,UAAQ7W,EAAMmL,QACd,cAAC2L,GAAD,iBACKnE,QADL,IACKA,OADL,EACKA,EAAQ3F,MAAM,EAAG,GAAGxM,KAAI,SAACoS,GAAD,OACrB,cAACmE,GAAD,iBAA6BnE,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAO3U,MAApC,OAAiB2U,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO5U,SAGhC,cAAC,GAAD,UAAWgC,EAAM6S,WACjB,eAACmE,GAAD,CAAetR,QAAS6R,EAAxB,UACI,cAAC,GAAD,IADJ,qB,6pBC9DT,IAAMhL,GAAOzU,IAAOoC,QAAV,MAqBJ2T,GAAQ/V,IAAOa,EAAV,MCCH8e,GAdG,SAAC,GAAqC,IAAnChZ,EAAkC,EAAlCA,OAAQyY,EAA0B,EAA1BA,aACzB,OAAKzY,EAAO4E,OAKR,cAAC,GAAD,UACK5E,EAAO+B,KAAI,SAACR,GAAD,OACR,cAAC,GAAD,CAA8BA,MAAOA,EAAOkX,aAAcA,GAAtClX,EAAMhC,SAN3B,cAAC,GAAD,sCCET0Z,GAA+B,CACjCC,KAAM,EACN3G,QAAS,GACT4G,cAAe,EACfC,YAAa,GA+EFC,GA5EQ,SAAC,GAAmC,IAAjCnF,EAAgC,EAAhCA,OAAQoF,EAAwB,EAAxBA,WAAwB,EACxB/a,oBAAS,GADe,mBAC/CV,EAD+C,KACtCsO,EADsC,OAE5B5N,mBAAsB,MAFM,mBAE/CX,EAF+C,KAExC2b,EAFwC,OAG1Bhb,mBAAwB,CAAEib,MAAOP,GAAe/E,OAAQ+E,KAH9B,mBAG/CjZ,EAH+C,KAGvCyZ,EAHuC,KAIhDtG,EAAc5G,KAAM8G,YAAYC,SAqEtC,OAtDAhU,qBAAU,WAsBN,OArBW,yCAAG,6BAAAgN,EAAA,0DACNgN,EADM,iCAGFnN,GAAW,GAHT,SAIgBI,KAAMC,IAAN,wBAA2B8M,GAAc,CACvDnG,YAAaA,EAAYI,QAL3B,OAOiB,OAHbnL,EAJJ,QAOMN,QACJ2R,EAAU,2BAAKzZ,GAAN,IAAcwZ,MAAOpR,EAAIhN,QAEtC+Q,GAAW,GAVT,kDAYFgH,EAAYC,OAAO,6BACnBmG,GAAS,GACTpN,GAAW,GAdT,0DAAH,oDAmBXuN,GAEO,WACHvG,EAAYC,OAAO,8BAExB,CAACkG,IAEJha,qBAAU,WAsBN,OArBW,yCAAG,6BAAAgN,EAAA,sEAENH,GAAW,GAFL,SAGYI,KAAMoN,KAAK,iBAAkB,CAC3CzF,SACAf,YAAaA,EAAYI,QALvB,OAQa,OALbnL,EAHA,QAQEN,QACJ2R,EAAU,2BAAKzZ,GAAN,IAAckU,OAAQ9L,EAAIhN,QAEvC+Q,GAAW,GAXL,gDAaNgH,EAAYC,OAAO,6BACnBmG,GAAS,GACTpN,GAAW,GAfL,yDAAH,oDAmBXuN,GAEO,WACHvG,EAAYC,OAAO,8BAExB,CAACc,IAEG,CAAErW,UAASD,QAAOoC,W,qoBC3FtB,IAAMvG,GAAYJ,IAAOS,IAAV,MAMTyX,GAAkBlY,IAAO8C,OAAV,MAcfyV,GAAWvY,YAAOwY,KAAPxY,CAAH,MCVNugB,GAVW,WACtB,OACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,S,8vGCHT,IAAMngB,GAAYJ,IAAO+Q,QAAV,MAMToE,GAAOnV,YAAOsV,IAAOxS,OAAd9C,CAAH,MAIF,SAACM,GAAD,OAAWA,EAAMkgB,QAAU,KAsC7BnJ,GAAmBrX,YAAOsV,IAAO7U,IAAdT,CAAH,MAShBwS,GAAQxS,YAAOsV,IAAO3U,IAAdX,CAAH,MAcLyC,GAAQzC,YAAOsV,IAAOrE,GAAdjR,CAAH,MA+BLkY,GAAkBlY,IAAO8C,OAAV,MAOV,SAACxC,GAAD,OAAWA,EAAMwD,iBAAmB,aAQzCyU,GAAWvY,YAAOwY,KAAPxY,CAAH,MAIRyY,GAAYzY,YAAO0Y,KAAP1Y,CAAH,MC9EPygB,GAlCG,SAAC,GAAsB,IAApBvY,EAAmB,EAAnBA,MACXqG,EAAUC,cACSqK,EAAmBxJ,KAApCD,gBACArI,EAASE,KAATF,KAH4B,EAIR7B,mBAAS,GAJD,mBAI7Bsb,EAJ6B,KAIrBE,EAJqB,KAK9B3N,EAAW3P,GAAiB8E,EAAM8K,YAAa,QALjB,EAM+B4D,GAAgB1O,GAA3E8O,EAN4B,EAM5BA,mBAAoBG,EANQ,EAMRA,sBAAuBN,EANf,EAMeA,YAYnD,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAMjJ,QAZO,WACIW,EAAQgL,SAASxY,SACrBG,SAASgH,EAAMhC,GAAG4P,YAC/BvH,EAAQS,KAAR,qBAA2BjI,EAAKP,UAEhCka,EAAU,GACV7H,EAAe3Q,KAMcwS,SAAQ,gBAAWxS,EAAMhC,IAAMsa,OAAQA,EAApE,SACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAOjf,IAAKwR,EAAUtR,IAAG,2BAAsByG,EAAMmL,MAA5B,OACzB,cAAC,GAAD,UAAQnL,EAAMmL,aAGtB,eAAC,GAAD,CAAiBzF,QAASoJ,EAAoBlT,gBAAiBqT,EAA/D,WACMN,GAAe,cAAC,GAAD,IAChBA,GAAe,cAAC,GAAD,W,maCvCzB,IAAM8J,GAAU3gB,IAAOS,IAAV,MC+BLmgB,GAtBM,SAAC,GAAgC,IAA9Bja,EAA6B,EAA7BA,OAAQnC,EAAqB,EAArBA,QACtBqc,EAAkBla,EAAOuS,SAAW,GAE1C,OAAI1U,EAEI,cAACmc,GAAD,UACKG,MAAMC,KAAKD,MAAM,IAAIzQ,QAAQ3H,KAAI,SAACsY,EAAGnC,GAAJ,OAC9B,cAAC,GAAD,GAAwBA,QAOpC,cAAC8B,GAAD,UACKE,EAAgBnY,KAAI,SAACR,GAAD,OACjB,cAAC,GAAD,CAA0BA,MAAOA,GAAjBA,EAAMhC,U,obCxB/B,IAAM+a,GAAYjhB,IAAOS,IAAV,MACP,SAACH,GAAD,OAAYA,EAAM+M,KAAO,OAAS,UAkBpC6T,GAAelhB,YAAOmhB,KAAPnhB,CAAH,MAIZohB,GAAc,CACvBC,QAAS,SAACnV,GAAD,mBAAC,eAAsBA,GAAvB,IAA+BpI,gBAAiB,QAASC,MAAO,yBACzEud,OAAQ,SAACpV,EAAD,GAAoF,EAAnDnK,KAAoD,IAA9Cwf,EAA6C,EAA7CA,WAA6C,EAAjCC,UAAiC,EAAtBC,WAClE,OAAO,2BACAvV,GADP,IAEIpI,gBAAiB,QACjBC,MAAO,sBACP2d,OAAQH,EAAa,cAAgB,aAG7CI,WAAY,SAACzV,EAAD,GAAgC,EAAhBnK,KACxB,OAAO,2BACAmK,GADP,IAEIpI,gBAAiB,WAGzB8d,gBAAiB,SAAC1V,EAAD,KAAgBnK,KAAhB,mBAAC,eACXmK,GADU,IAEbnI,MAAO,QACPD,gBAAiB,sBACjB+d,QAAS,UACTzV,aAAc,SAElB0V,iBAAkB,SAAC5V,EAAD,OAAgBnK,EAAhB,EAAgBA,KAAhB,mBAAC,eACZmK,GADW,IAEdnI,MAAOhC,EAAKgC,MACZ,SAAU,CACND,gBAAiB,QACjBC,MAAO,2BCFJge,GA5CK,WAAO,IAAD,EACM7c,mBAAmB,IADzB,mBACf2V,EADe,KACPmH,EADO,OAEc9c,mBAAS,IAFvB,mBAEf+a,EAFe,KAEHgC,EAFG,OAGajC,GAAe,CAAEnF,SAAQoF,eAApDzb,EAHc,EAGdA,QAAgBmC,GAHF,EAGLpC,MAHK,EAGEoC,QAClBub,EAAeC,GAAUzZ,KAAI,SAACoS,GAAD,MAAmB,CAAEnV,MAAOmV,EAAM5U,GAAIsV,MAAOV,EAAM3U,SAChF0a,EAAkBZ,EAAatZ,EAAOwZ,MAAQxZ,EAAOkU,OAe3D,OACI,oCACK,IACD,iCACI,eAACoG,GAAD,CAAW5T,MAAM,EAAjB,UACI,mDACA,uBAAO5J,KAAK,OAAOkC,MAAOsa,EAAYhS,SAnBhC,SAACH,GACnBmU,EAAcnU,EAAEzM,OAAOsE,aAoBf,eAACsb,GAAD,CAAW5T,KAAqB,KAAf4S,EAAjB,UACI,oDACA,cAACiB,GAAD,CACIkB,SAAO,EACPjc,KAAK,SACLkc,QAASH,EACThW,OAAQkV,GACRnT,SAxBE,SAClBtI,GAKAqc,EAAUrc,EAAM+C,KAAI,SAACoS,GAAD,OAAWA,EAAMnV,mBAsBjC,cAAC,GAAD,CAAcgB,OAAQka,EAAiBrc,QAASA,QC/B7C8d,GAVQ,WAAO,IAClBvb,EAASE,KAATF,KACR,OACI,eAAC,GAAD,CAAM0X,KAAM,CAAC,SAAD,sBAA0B1X,EAAKJ,OAAO4E,OAAtC,MAAZ,UACI,cAAC,GAAD,IACA,cAAC,GAAD,CAAW5E,OAAQI,EAAKJ,OAAQyY,cAAY,Q,qGCRjD,IAAMhf,GAAYJ,YAAOmC,EAAPnC,CAAH,MCMhBuiB,GACF,oIAEI,cAACtf,EAAD,4BAFJ,QAKEuf,GACF,+GAEI,cAACvf,EAAD,6BAFJ,QAsBWwf,GAhBG,WAAO,IACb9d,EAASE,KAATF,KAEF0G,EADWpE,KAATF,KACaN,UAAY9B,EAAKuB,GAEtC,OACI,eAAC,GAAD,WACI,cAACzD,EAAD,+BACA,cAACE,EAAD,UAAW0I,EAAUkX,GAAYC,KACjC,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCPGE,GAnBC,WAAO,IACX3b,EAASE,KAATF,KACApC,EAASE,KAATF,KAEFge,EAAU5b,EAAKJ,OAAOyP,QAAO,SAACuM,EAAuBza,GASvD,OAPIA,EAAMM,OAAOF,MAAK,SAACG,GAAD,OAAWA,EAAM9D,KAAKuB,KAAOvB,EAAKuB,IAAMuC,EAAME,UAChET,EAAMM,OAAOF,MAAK,SAACG,GAAD,OAAWA,EAAME,OAASF,EAAM9D,KAAKuB,KAAOvB,EAAKuB,OAGnEyc,EAAQ3T,KAAK9G,GAGVya,IACR,IAEH,OAAO,cAAC,GAAD,CAAWhc,OAAQgc,EAASvD,cAAc,K,49CClB9C,IAAMhf,GAAYJ,IAAO+Q,QAAV,MAWTyB,GAAQxS,YAAOsV,IAAO3U,IAAdX,CAAH,MAQLyC,GAAQzC,YAAOsV,IAAOrE,GAAdjR,CAAH,MAaL4iB,GAAgB5iB,YAAO6C,EAAP7C,CAAH,MAWb6iB,GAAU7iB,IAAOa,EAAV,MAWP8U,GAAa3V,YAAO2S,KAAP3S,CAAH,MC5BR8iB,GArBG,SAAC,GAAsB,IAApB5a,EAAmB,EAAnBA,MACTkH,EAAoBC,KAApBD,gBACF/L,EAAWD,GAAiB8E,EAAM8K,YAAa,QAE/C+P,EAAc,WAChB3T,EAAgBlH,IAGpB,OACI,eAAC,GAAD,CAAW0F,QAASmV,EAApB,UACI,eAACH,GAAD,CAAehV,QAASmV,EAAxB,UACI,cAAC,GAAD,UAAQ7a,EAAMmL,QACd,eAACwP,GAAD,WACI,cAAC,GAAD,IADJ,iBAIJ,cAAC,GAAD,CAAOthB,IAAK8B,EAAU5B,IAAKyG,EAAMmL,Y,i1BCrBtC,IAAM2P,GAAahjB,YAAO6C,EAAP7C,CAAH,MAWVijB,GAAgBjjB,YAAO6C,EAAP7C,CAAH,MAWpB4R,GAAaC,YAAH,MAIHqR,GAAWljB,YAAOmjB,KAAPnjB,CAAH,KACf4R,IAIOwR,GAAcpjB,YAAOqjB,KAAPrjB,CAAH,KAClB4R,ICrBN0R,KAAWC,IAAI,CAACC,KAAYC,KAAMC,KAAiBC,OAEnD,IAAMC,GAA+C,CACjDC,OAAQ,GACRC,QAAS,EACTC,MAAO,IACPC,SAAU,EACVC,cAAc,GAGZC,GAAqC,CACvCC,WAAW,EACX1gB,KAAM,cACN2gB,qBAAsB,sCAuJXC,GAhJG,WACd,IAAM9V,EAAUC,cACRzH,EAASE,KAATF,KACApC,EAASE,KAATF,KAHY,EAIQO,qBAJR,mBAIbof,EAJa,KAILC,EAJK,KAKd5d,EAASgD,iBAAuB,IALlB,EAMYzE,oBAAS,GANrB,mBAMbuK,EANa,KAMHC,EANG,KAQpBzJ,qBAAU,WACNU,EAAO8E,QAAU1E,EAAKJ,OAAO+B,KAAI,SAACR,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBsc,QAAQ,SAClE,CAACzd,EAAKJ,OAAO4E,SAEhB,IAAMkZ,EAAgB,WAClB/U,GAAY,IAGVgV,EAAiB,WACnBhV,GAAY,IAiEViV,EAAkB,SAAC,GAAyD,I3E5ElF5iB,EACAC,E2E2E2B6c,EAAsD,EAAtDA,MAAOlW,EAA+C,EAA/CA,MACxBT,EAAQvB,EAAO8E,QAAQoT,GACxB3W,IAASA,EAAMsc,SAIpBnd,QAAQC,IAAIY,EAAMmL,MAAO1K,GACzBhC,EAAO8E,QAAU9E,EAAO8E,QAAQ/C,KAAI,SAACT,GAAD,OAAQA,EAAE/B,KAAOgC,EAAMhC,GAAf,2BAAyB+B,GAAzB,IAA4Buc,QAAQ,IAASvc,K3EnF7FlG,E2EoFe,CAAEyE,OAAQO,EAAKP,OAAkBmE,QAASzC,EAAMhC,GAAIyC,QAAOhE,Q3EjF1EjD,EAAOO,KAAK,cAAeF,EAAMC,K2E4FjC,OACI,uCACO+E,EAAKJ,OAAO4E,QACX,eAAC,KAAD,CACIqZ,2BAlDmB,SAACN,GAGhC,GAFAI,IAEKJ,EAAL,CAIA,IAAMO,EAAaP,EAAOQ,cAAgB,EAC1CH,EAAgB,CAAE9F,MAAOgG,EAAYlc,OAAO,IAE5C,IAAMoc,EAAYT,EAAOU,YAAc,EACvCV,EAAOW,QAAQF,EAAW,KAC1BT,EAAOY,SACPZ,EAAOa,mBAsCKC,2BAlEmB,SAACd,GAIhC,GAHAI,IAGKJ,GAAiC,IAAvBA,EAAOU,YAAtB,CAIA,IAAMH,EAAaP,EAAOQ,cAAgB,EAC1CH,EAAgB,CAAE9F,MAAOgG,EAAYlc,OAAO,IAE5C2b,EAAOa,iBACPb,EAAOY,WAuDKG,yBAA0BZ,EAC1Ba,yBAfiB,SAAChB,GAC9BG,IAEIH,EAAOU,YAAcje,EAAKJ,OAAO4E,QACjCgD,EAAQS,KAAR,mBAAyBjI,EAAKP,UAYtB+e,WAhCG,SAACjB,GAChB,IAAMkB,EAAkB,EAAIze,EAAKJ,OAAO4E,OAAU+Y,EAAOU,YACzDpL,SAAS6L,gBAAgB5hB,MAAM6hB,YAAY,mBAAoBF,EAAe1P,aA+BlE6P,OAvCK,SAACrB,GAClB,IAAMkB,EAAiB,EAAIze,EAAKJ,OAAO4E,OACvCqO,SAAS6L,gBAAgB5hB,MAAM6hB,YAAY,mBAAoBF,EAAe1P,YAC9EyO,EAAUD,IAqCEsB,aAAc,EACdC,MAAO,IACPC,UAAQ,EACRC,YAAU,EACVC,gBAAc,EACdC,aAAc,IACdC,OAAO,YACPC,gBAAiBvC,GACjBwC,WAAYlC,GAfhB,UAiBI,cAAC,KAAD,GAAiB,cAChBnd,EAAKJ,OAAO+B,KAAI,SAACR,GAAD,OACb,cAAC,KAAD,UACI,cAAC,GAAD,CAAWA,MAAOA,KADJA,EAAMhC,OAI5B,cAAC,KAAD,GAAiB,gBAGzB,eAAC,GAAD,CAAgBkW,SAAS,QAAzB,UACI,eAAC6G,GAAD,CAAerV,QAtGT,WACd,GAAK0W,EAAL,CAIA,IAAMO,EAAaP,EAAOU,YAAc,EACxCL,EAAgB,CAAE9F,MAAOgG,EAAYlc,OAAO,IAC5C,IAAMoc,EAAYT,EAAOU,YAAc,EACvCV,EAAOW,QAAQF,EAAW,OA8FiBtV,SAAUA,EAA7C,UACI,cAAC2T,GAAD,IADJ,aAIA,eAACJ,GAAD,CAAYpV,QAnHT,WACX,GAAK0W,EAAL,CAIA,IAAMS,EAAYT,EAAOU,YAAc,EACvCV,EAAOW,QAAQF,KA6GsBtV,SAAUA,EAAvC,UACI,cAACyT,GAAD,IADJ,iB,mHCxKT,IAAM9iB,GAAYJ,YAAOmC,EAAPnC,CAAH,MC4BPqmB,GAvBA,WAAO,IACVtf,EAASE,KAATF,KACApC,EAASE,KAATF,KACF2hB,EAAavf,EAAKJ,OAAOyP,QAAO,SAACmQ,EAAKre,GAIxC,OAFIA,EAAMM,OAAOF,MAAK,SAACG,GAAD,OAAWA,EAAM9D,KAAKuB,KAAOvB,EAAKuB,IAAMuC,EAAME,UAChET,EAAMM,OAAOF,MAAK,SAACG,GAAD,OAAWA,EAAME,OAASF,EAAM9D,KAAKuB,KAAOvB,EAAKuB,MAE5DqgB,EAAM,EAEVA,IACR,GAEH,OACI,cAAC,GAAD,UACI,eAAC,GAAD,CAAM9H,KAAM,CAAC,QAAD,mBAAsB6H,EAAtB,MAAZ,UACI,cAAC,GAAD,IACA,cAAC,GAAD,UCmBDE,GAzBH,WAAO,IACPrX,EAAiBE,KAAjBF,aAER,OACI,eAAC,IAAD,CAAqB1L,KAAK,YAA1B,UACI,cAAC,IAAD,UAAkB0L,GAAgB,cAAC,GAAD,CAAajH,MAAOiH,MACtD,cAAC,IAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOP,KAAK,IAAI6X,OAAK,EAACrY,UAAW2F,KACjC,cAAC,IAAD,CAAOnF,KAAK,UAAUR,UAAWyC,KACjC,cAAC,IAAD,CAAOjC,KAAK,YAAYR,UAAW8F,KACnC,cAAC,IAAD,CAAOtF,KAAK,WAAWR,UAAW0C,KAClC,cAAC,GAAD,CAAgBlC,KAAM,CAAC,0BAA2B,kBAAmBR,UAAWqU,KAChF,cAAC,GAAD,CAAgB7T,KAAM,CAAC,uBAAwB,eAAgBR,UAAWiY,KAC1E,cAAC,GAAD,CAAgBzX,KAAM,CAAC,wBAAyB,gBAAiBR,UAAW6H,KAC5E,cAAC,IAAD,CAAO7H,UAAW2F,UAG1B,cAAC,EAAD,Q,OC9BZ2S,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,cAMpBhN,SAASiN,eAAe,U","file":"static/js/main.6ed747de.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Background = styled.main`\r\n    background: var(--blue-dark-bg);\r\n    color: var(--white);\r\n    flex: 1;\r\n`;\r\n","import { AddedMovie } from './movies';\r\n\r\nexport enum Stage {\r\n    SELECTION = 'selection',\r\n    SWIPER = 'swiper',\r\n    RESULTS = 'results',\r\n    NULL = 'null',\r\n}\r\n\r\nexport interface Room {\r\n    roomName: string | null;\r\n    roomId: string | null;\r\n    ownerId: string | null;\r\n    participants: Participant[];\r\n    movies: AddedMovie[];\r\n    stage: Stage;\r\n}\r\n\r\nexport interface Participant {\r\n    name: string;\r\n    id: string;\r\n    color: string;\r\n    ready?: boolean;\r\n}\r\n","import React from 'react';\r\nimport { Background } from './style';\r\n\r\ntype Props = {\r\n    children: React.ReactNode | React.ReactNode[];\r\n};\r\n\r\nconst AppContainer = ({ children }: Props) => {\r\n    return <Background>{children}</Background>;\r\n};\r\n\r\nexport default AppContainer;\r\n","export default __webpack_public_path__ + \"static/media/themoviedb-logo.caee7457.svg\";","import styled from 'styled-components';\r\n\r\nexport const Container = styled.footer<{ display: boolean }>`\r\n    /* background: #141d26; */\r\n    background: rgb(0 0 0 / 25%);\r\n    padding: 2rem;\r\n    display: ${(props) => (props.display ? 'block' : 'none')};\r\n\r\n    @media (min-width: 600px) {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport const InnerContainer = styled.div`\r\n    max-width: 1100px;\r\n    margin: auto;\r\n`;\r\n\r\nexport const TheMovieDB = styled.img`\r\n    height: 10.5px;\r\n    margin-left: 0.5rem;\r\n`;\r\n\r\nexport const Attribution = styled.p`\r\n    font-size: 0.85rem;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: var(--white-muted);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport TheMovieDBLogo from '../../assets/themoviedb-logo.svg';\r\nimport { Stage } from '../../types/room';\r\nimport { Attribution, Container, InnerContainer, TheMovieDB } from './style';\r\n\r\nconst Footer = () => {\r\n    const { pathname } = useLocation();\r\n    const showFooter =\r\n        pathname === '/' ||\r\n        pathname.includes('/create') ||\r\n        pathname.includes('/join') ||\r\n        pathname.includes(Stage.RESULTS);\r\n\r\n    return (\r\n        <Container display={showFooter}>\r\n            <InnerContainer>\r\n                <Attribution>\r\n                    Powered by\r\n                    <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noreferrer\">\r\n                        <TheMovieDB src={TheMovieDBLogo} alt=\"The Movie DB.\" />\r\n                    </a>\r\n                </Attribution>\r\n            </InnerContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import io from 'socket.io-client';\r\n\r\nexport const socket = io('http://localhost:4500', {\r\n    transports: ['websocket'],\r\n    reconnection: true,\r\n});\r\n","import { socket } from '.';\r\nimport { AddedMovie } from '../types/movies';\r\nimport { SocketResponse } from '../types/socket';\r\nimport { Participant } from './../../../server/src/types/index';\r\n\r\nexport const createRoom = (\r\n    data: { roomId: string | null },\r\n    callback: (res: SocketResponse<{ roomId: string }>) => void,\r\n) => {\r\n    socket.emit('room:create', data, callback);\r\n};\r\n\r\nexport const checkRoom = (data: { roomId: string }, callback: (res: SocketResponse<{ roomId: string }>) => void) => {\r\n    socket.emit('room:check', data, callback);\r\n};\r\n\r\nexport const joinRoom = (\r\n    data: { roomId: string; user: Participant },\r\n    callback: (res: SocketResponse<{ roomId: string }>) => void,\r\n) => {\r\n    socket.emit('room:join', data, callback);\r\n};\r\n\r\nexport const changeRoomOwner = (data: { roomId: string; userId: string }) => {\r\n    socket.emit('room:owner-change', data);\r\n};\r\n\r\nexport const addMovie = (\r\n    data: { roomId: string; movie: AddedMovie },\r\n    callback: (res: SocketResponse<{ movieId: string }>) => void,\r\n) => {\r\n    socket.emit('movie:add', data, callback);\r\n};\r\n\r\nexport const removeMovie = (\r\n    data: { roomId: string; movieId: number },\r\n    callback: (res: SocketResponse<{ movieId: string }>) => void,\r\n) => {\r\n    socket.emit('movie:remove', data, callback);\r\n};\r\n\r\nexport const swipeMovie = (\r\n    data: { roomId: string; movieId: number; liked: boolean; user: Participant },\r\n    callback?: (res: SocketResponse<{ movieId: string }>) => void,\r\n) => {\r\n    socket.emit('movie:swipe', data, callback);\r\n};\r\n\r\nexport const toggleReady = (\r\n    data: { roomId: string; userId: string },\r\n    callback?: (res: SocketResponse<{ userId: string }>) => void,\r\n) => {\r\n    socket.emit('user:ready', data, callback);\r\n};\r\n\r\nexport const changeName = (data: { roomId: string; userId: string; name: string }) => {\r\n    socket.emit('user:name-change', data);\r\n};\r\n\r\nexport const startSwiper = (data: { roomId: string }, callback?: (res: SocketResponse<{ roomId: string }>) => void) => {\r\n    socket.emit('swiper:start', data, callback);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const MaxWidthContainer = styled.section`\r\n    max-width: 1100px;\r\n    margin: 0 auto;\r\n    padding: 3rem 1rem;\r\n\r\n    @media (min-width: 600px) {\r\n        padding: 4rem 1rem;\r\n    }\r\n\r\n    @media (min-width: 1100px) {\r\n        padding: 4rem 0rem;\r\n    }\r\n`;\r\n\r\nexport const FormPageContainer = styled(MaxWidthContainer)`\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n\r\n    h2 {\r\n        margin-bottom: 4rem;\r\n    }\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n    label {\r\n        margin-bottom: 0.5rem;\r\n    }\r\n\r\n    input {\r\n        padding: 0.5rem;\r\n        border-radius: 4px;\r\n    }\r\n`;\r\n\r\nexport const ErrorMessage = styled.div`\r\n    margin-top: 0.5rem;\r\n    padding: 0.5rem;\r\n    background: var(--accent-light);\r\n    border-radius: 4px;\r\n    font-size: 0.875rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0 0 1rem;\r\n    font-family: 'Merienda One', 'Rubik', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\r\n        'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\r\n`;\r\n\r\nexport const Subtitle = styled.h2`\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.4;\r\n    margin-bottom: 2rem;\r\n    color: var(--white-muted);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 1.5rem 1rem;\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const FormButton = styled(Button)<{ $disabled?: boolean }>`\r\n    width: 100%;\r\n    background: ${(props) => (props.$disabled ? '#808080' : 'var(--blue-action)')};\r\n    color: ${(props) => props.$disabled && '#cbc8c8'};\r\n    padding: 1rem 1.5rem;\r\n`;\r\n\r\nexport const FontWeight600 = styled.span`\r\n    font-weight: 600;\r\n`;\r\n","import { AddedMovie } from './movies';\r\nimport { Participant, Room, Stage } from './room';\r\n\r\nexport enum ActionType {\r\n    INITIALIZE_ROOM = 'initialize_room',\r\n    GET_ROOM = 'get_room',\r\n    JOIN = 'join',\r\n    LEAVE = 'leave',\r\n    CHANGE_OWNER = 'change_owner',\r\n    ADD_MOVIE = 'add_movie',\r\n    REMOVE_MOVIE = 'remove_movie',\r\n    SWIPE_MOVIE = 'swipe_movie',\r\n    TOGGLE_READY = 'toggle_ready',\r\n    SET_STAGE = 'set_stage',\r\n    USER_NAME_CHANGE = 'user_name_change',\r\n}\r\n\r\nexport interface GetRoomAction {\r\n    type: ActionType.GET_ROOM;\r\n    payload: { room: Room };\r\n}\r\n\r\nexport interface InitializeRoomAction {\r\n    type: ActionType.INITIALIZE_ROOM;\r\n    payload: { roomName: string; roomId: string; ownerId: string; participant: Participant };\r\n}\r\n\r\nexport interface JoinAction {\r\n    type: ActionType.JOIN;\r\n    payload: { participant: Participant };\r\n}\r\n\r\nexport interface LeaveAction {\r\n    type: ActionType.LEAVE;\r\n    payload: { id: string };\r\n}\r\n\r\nexport interface ChangeOwnerAction {\r\n    type: ActionType.CHANGE_OWNER;\r\n    payload: { ownerId: string };\r\n}\r\n\r\nexport interface AddMovieAction {\r\n    type: ActionType.ADD_MOVIE;\r\n    payload: { movie: AddedMovie };\r\n}\r\n\r\nexport interface RemoveMovieAction {\r\n    type: ActionType.REMOVE_MOVIE;\r\n    payload: { id: number };\r\n}\r\n\r\nexport interface SwipeMovieAction {\r\n    type: ActionType.SWIPE_MOVIE;\r\n    payload: { id: number; liked: boolean; user: Participant };\r\n}\r\n\r\nexport interface ToggleReadyAction {\r\n    type: ActionType.TOGGLE_READY;\r\n    payload: { id: string };\r\n}\r\n\r\nexport interface SetStageAction {\r\n    type: ActionType.SET_STAGE;\r\n    payload: { stage: Stage.SELECTION | Stage.SWIPER };\r\n}\r\n\r\nexport interface UserNameChangeAction {\r\n    type: ActionType.USER_NAME_CHANGE;\r\n    payload: { userId: string; name: string };\r\n}\r\n\r\nexport type Action =\r\n    | JoinAction\r\n    | LeaveAction\r\n    | ChangeOwnerAction\r\n    | AddMovieAction\r\n    | RemoveMovieAction\r\n    | SwipeMovieAction\r\n    | InitializeRoomAction\r\n    | GetRoomAction\r\n    | ToggleReadyAction\r\n    | SetStageAction\r\n    | UserNameChangeAction;\r\n","export default __webpack_public_path__ + \"static/media/poster_unavailable.0646537b.png\";","import toast from 'react-hot-toast';\r\nimport { Renderable, Toast, ToastOptions, ValueOrFunction } from 'react-hot-toast/dist/core/types';\r\nimport PosterUnavailable from '../assets/poster_unavailable.png';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const checkIfIncluded = (list: any[], object: { [key: string]: number | string }): boolean => {\r\n    if (!list.length) {\r\n        return false;\r\n    }\r\n\r\n    const key = Object.keys(object)[0];\r\n\r\n    return Boolean(list.find((element) => element[key] === object[key]));\r\n};\r\n\r\nexport const generateImageUrl = (imageSrc: string | null, width: 'w342' | 'w500'): string => {\r\n    if (!imageSrc) {\r\n        return PosterUnavailable;\r\n    }\r\n\r\n    return `https://image.tmdb.org/t/p/${width}${imageSrc}`;\r\n};\r\n\r\nexport enum ToastType {\r\n    Success = 'success',\r\n    Error = 'error',\r\n    Loading = 'loading',\r\n    Custom = 'custom',\r\n}\r\n\r\ninterface ToastParams {\r\n    type: ToastType;\r\n    message: ValueOrFunction<Renderable, Toast>;\r\n    duration?: number;\r\n}\r\n\r\nexport const useToast = ({ type, message, duration }: ToastParams) => {\r\n    const successOptions: ToastOptions = {\r\n        duration: duration || 2000,\r\n        style: {\r\n            backgroundColor: 'var(--blue-active)',\r\n            color: '#FFF',\r\n        },\r\n        iconTheme: {\r\n            primary: 'hsl(213deg 24% 53%)',\r\n            secondary: '#FFF',\r\n        },\r\n    };\r\n\r\n    const errorOptions: ToastOptions = {\r\n        duration: duration || 4000,\r\n        style: {\r\n            backgroundColor: 'hsl(0deg 56% 27%)',\r\n            color: '#FFF',\r\n        },\r\n        iconTheme: {\r\n            primary: '#a23636',\r\n            secondary: '#FFF',\r\n        },\r\n    };\r\n\r\n    const loadingOptions: ToastOptions = {\r\n        duration: duration || 30000,\r\n        style: {\r\n            backgroundColor: 'var(--blue-active)',\r\n            color: '#FFF',\r\n        },\r\n        iconTheme: {\r\n            primary: 'hsl(213deg 24% 53%)',\r\n            secondary: '#FFF',\r\n        },\r\n    };\r\n    switch (type) {\r\n        case 'success':\r\n            return toast.success(message, successOptions);\r\n        case 'error':\r\n            return toast.error(message, errorOptions);\r\n        case 'loading':\r\n            return toast.loading(message, loadingOptions);\r\n        case 'custom':\r\n            return toast(message, successOptions);\r\n        default:\r\n            return toast(message, successOptions);\r\n    }\r\n};\r\n","import React, { createContext, ReactNode, useContext, useEffect } from 'react';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport { socket } from '../sockets';\r\nimport { onConnection } from '../sockets/listeners';\r\nimport { Participant } from '../types/room';\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n};\r\n\r\ninterface ContextProps {\r\n    user: Participant;\r\n    setUser: (value: Participant) => void;\r\n}\r\nexport const UserContext = createContext<ContextProps>({ user: {} as Participant, setUser: () => ({}) });\r\n\r\nexport const useUser = () => {\r\n    return useContext(UserContext);\r\n};\r\n\r\nconst UserProvider = ({ children }: Props) => {\r\n    const [user, setUser] = useLocalStorage('user', {} as Participant);\r\n\r\n    useEffect(() => {\r\n        onConnection(() => {\r\n            if (!user.id) {\r\n                setUser({ name: user.name, color: user.color, id: socket.id });\r\n                socket.emit('user:new', { ...user, id: socket.id });\r\n            } else {\r\n                socket.emit('user:new', user);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","import { useState } from 'react';\r\n\r\nexport const useLocalStorage = <T>(key: string, initialValue: T): [typeof initialValue, typeof setValue] => {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    const setValue = (value: T): void => {\r\n        try {\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {}\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n};\r\n","import { socket } from '.';\r\nimport { AddedMovie } from '../types/movies';\r\nimport { Room } from '../types/room';\r\nimport { Participant } from './../../../server/src/types/index';\r\n\r\nexport const onTest = () => {\r\n    return socket.on('test', () => {\r\n        console.log('this is a test');\r\n    });\r\n};\r\n\r\nexport const onConnection = (callback: (socketId: string) => void) => {\r\n    return socket.on('connect', callback);\r\n};\r\n\r\nexport const onParticipantJoin = (room: Room, callback: (user: Participant) => void) => {\r\n    return socket.on('room:new-join', (data: { socketId: string; user: Participant }) => {\r\n        console.log('new join: ', data.user);\r\n        socket.emit('room:send', { socketId: data.socketId, room });\r\n        callback(data.user);\r\n    });\r\n};\r\n\r\nexport const onParticipantLeave = (callback: (data: { socketId: string; newOwnerSocketId: string }) => void) => {\r\n    return socket.on('room:leave', callback);\r\n};\r\n\r\nexport const onRoomOwnerChange = (callback: (data: { newOwnerId: string }) => void) => {\r\n    return socket.on('room:owner-change', callback);\r\n};\r\n\r\nexport const onGetRoom = (callback: (data: { room: Room }) => void) => {\r\n    return socket.once('room:get', callback);\r\n};\r\n\r\nexport const onMovieAdd = (callback: (movie: AddedMovie) => void) => {\r\n    return socket.on('movie:add', (data: { movie: AddedMovie }) => {\r\n        callback(data.movie);\r\n    });\r\n};\r\n\r\nexport const onMovieRemove = (callback: (data: { movieId: number }) => void) => {\r\n    return socket.on('movie:remove', callback);\r\n};\r\n\r\nexport const onMovieSwipe = (callback: (data: { movieId: number; liked: boolean; user: Participant }) => void) => {\r\n    return socket.on('movie:swipe', callback);\r\n};\r\n\r\nexport const onToggleReady = (callback: (data: { userId: string }) => void) => {\r\n    return socket.on('user:ready', callback);\r\n};\r\n\r\nexport const onStartSwiper = (callback: (data: { roomId: string }) => void) => {\r\n    return socket.on('swiper:start', callback);\r\n};\r\n\r\nexport const onNameChange = (callback: (data: { userId: string; name: string }) => void) => {\r\n    return socket.on('user:name-change', callback);\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport React, { createContext, ReactNode, useContext, useEffect, useReducer, useRef } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Participant } from '../../../server/src/types';\r\nimport { socket } from '../sockets';\r\nimport { changeRoomOwner } from '../sockets/emitters';\r\nimport {\r\n    onGetRoom,\r\n    onMovieAdd,\r\n    onMovieRemove,\r\n    onMovieSwipe,\r\n    onNameChange,\r\n    onParticipantJoin,\r\n    onParticipantLeave,\r\n    onRoomOwnerChange,\r\n    onStartSwiper,\r\n    onToggleReady,\r\n} from '../sockets/listeners';\r\nimport { FontWeight600 } from '../styles';\r\nimport { Action, ActionType } from '../types/actions';\r\nimport { AddedMovie } from '../types/movies';\r\nimport { Room, Stage } from '../types/room';\r\nimport { ToastType, useToast } from '../utils';\r\nimport { useUser } from './UserContext';\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n};\r\n\r\nconst initialState: Room = {\r\n    roomName: null,\r\n    roomId: null,\r\n    ownerId: null,\r\n    participants: [],\r\n    movies: [],\r\n    stage: Stage.NULL,\r\n};\r\n\r\ninterface ContextProps {\r\n    room: Room;\r\n    dispatch: (action: Action) => void;\r\n}\r\nexport const RoomContext = createContext<ContextProps>({ room: initialState, dispatch: () => ({}) });\r\n\r\nexport const useRoom = () => {\r\n    return useContext(RoomContext);\r\n};\r\n\r\nconst reducer = (state: Room, action: Action): Room => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case ActionType.INITIALIZE_ROOM:\r\n            return {\r\n                ...initialState,\r\n                roomName: action.payload.roomName,\r\n                roomId: action.payload.roomId,\r\n                ownerId: action.payload.ownerId,\r\n                participants: [action.payload.participant],\r\n                stage: Stage.SELECTION,\r\n            };\r\n        case ActionType.GET_ROOM:\r\n            return {\r\n                ...action.payload.room,\r\n            };\r\n        case ActionType.JOIN:\r\n            const participants = [\r\n                ...state.participants.filter((p) => p.id !== action.payload.participant.id),\r\n                action.payload.participant,\r\n            ];\r\n            return { ...state, participants };\r\n        case ActionType.LEAVE:\r\n            return {\r\n                ...state,\r\n                participants: state.participants.filter((p) => p.id !== action.payload.id),\r\n            };\r\n        case ActionType.CHANGE_OWNER:\r\n            return {\r\n                ...state,\r\n                ownerId: action.payload.ownerId,\r\n            };\r\n        case ActionType.ADD_MOVIE:\r\n            return {\r\n                ...state,\r\n                movies: [...state.movies.filter((m) => m.id !== action.payload.movie.id), action.payload.movie],\r\n            };\r\n        case ActionType.REMOVE_MOVIE:\r\n            return { ...state, movies: state.movies.filter((m) => m.id !== action.payload.id) };\r\n        case ActionType.SWIPE_MOVIE:\r\n            const swipedMovie = state.movies.find((m) => m.id === action.payload.id) as AddedMovie;\r\n            const alreadySwiped = swipedMovie.swipes.find((swipe) => swipe.user.id === action.payload.user.id);\r\n            const updatedSwipes = alreadySwiped\r\n                ? swipedMovie.swipes.map((swipe) =>\r\n                      swipe.user.id === action.payload.user.id ? { ...swipe, liked: action.payload.liked } : swipe,\r\n                  )\r\n                : [...swipedMovie.swipes, { user: action.payload.user, liked: action.payload.liked }];\r\n            const updatedMovie: AddedMovie = { ...swipedMovie, swipes: updatedSwipes };\r\n            return {\r\n                ...state,\r\n                movies: state.movies.map((m) => (m.id === updatedMovie.id ? updatedMovie : m)),\r\n            };\r\n        case ActionType.SET_STAGE:\r\n            return { ...state, stage: action.payload.stage };\r\n        case ActionType.TOGGLE_READY:\r\n            return {\r\n                ...state,\r\n                participants: state.participants.map((p) =>\r\n                    p.id === action.payload.id ? { ...p, ready: !p.ready } : p,\r\n                ),\r\n            };\r\n        case ActionType.USER_NAME_CHANGE:\r\n            return {\r\n                ...state,\r\n                participants: state.participants.map((p) =>\r\n                    p.id === action.payload.userId ? { ...p, name: action.payload.name } : p,\r\n                ),\r\n            };\r\n        default:\r\n            throw new Error('Action not defined.');\r\n    }\r\n};\r\n\r\nconst LS_KEY = 'rooms';\r\n\r\nconst RoomProvider = ({ children }: Props) => {\r\n    const { pathname } = useLocation();\r\n    const { user } = useUser();\r\n    const [room, dispatch] = useReducer(reducer, initialState, getLocalStorage);\r\n    const toastId = useRef<string>();\r\n    const timeoutId = useRef<number>();\r\n\r\n    function getLSRooms(): { [key: string]: Room } | null {\r\n        const item = localStorage.getItem(LS_KEY);\r\n        if (!item) return null;\r\n        return JSON.parse(item);\r\n    }\r\n\r\n    function getLocalStorage(initialState: Room) {\r\n        const item = localStorage.getItem(LS_KEY);\r\n        if (!item) return initialState;\r\n\r\n        const rooms: { [key: string]: Room } = JSON.parse(item);\r\n        const roomIdParam = pathname.split('/').filter(Boolean)[1];\r\n        const room = rooms[roomIdParam];\r\n        return room ? room : initialState;\r\n    }\r\n\r\n    function setLocalStorage(rooms: { [key: string]: Room }) {\r\n        localStorage.setItem(LS_KEY, JSON.stringify(rooms));\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(room);\r\n        const rooms = getLSRooms();\r\n        if (room.roomId) {\r\n            const updatedRooms = { ...rooms, [room.roomId as string]: room };\r\n            setLocalStorage(updatedRooms);\r\n        }\r\n    }, [room]);\r\n\r\n    useEffect(() => {\r\n        onParticipantJoin(room, (newParticipant) => {\r\n            useToast({\r\n                type: ToastType.Success,\r\n                message: () => (\r\n                    <span>\r\n                        <FontWeight600>{newParticipant.name}</FontWeight600> {' joined.'}\r\n                    </span>\r\n                ),\r\n            });\r\n            dispatch({ type: ActionType.JOIN, payload: { participant: { ...newParticipant, ready: false } } });\r\n        });\r\n        onParticipantLeave(({ socketId, newOwnerSocketId }) => {\r\n            dispatch({ type: ActionType.LEAVE, payload: { id: socketId } });\r\n            if (socketId === room.ownerId && newOwnerSocketId === socket.id) {\r\n                changeRoomOwner({ roomId: room.roomId as string, userId: user.id });\r\n            }\r\n        });\r\n        onRoomOwnerChange(({ newOwnerId }) => {\r\n            dispatch({ type: ActionType.CHANGE_OWNER, payload: { ownerId: newOwnerId } });\r\n            if (newOwnerId === user.id) {\r\n                useToast({\r\n                    type: ToastType.Custom,\r\n                    message: 'You are the new room owner.',\r\n                });\r\n            }\r\n        });\r\n        onGetRoom(({ room }) => {\r\n            const user: Participant = JSON.parse(localStorage.getItem('user') || '');\r\n            /* Remove duplicate user */\r\n            let participants: Participant[] = room.participants.filter((p) => p.id !== user.id);\r\n            if (user) {\r\n                participants = [...participants, { ...user, ready: false } as Participant];\r\n            }\r\n            dispatch({ type: ActionType.GET_ROOM, payload: { room: { ...room, participants } } });\r\n        });\r\n        onMovieAdd((movie) => {\r\n            dispatch({ type: ActionType.ADD_MOVIE, payload: { movie } });\r\n        });\r\n        onMovieRemove(({ movieId }) => {\r\n            dispatch({ type: ActionType.REMOVE_MOVIE, payload: { id: movieId } });\r\n        });\r\n        onMovieSwipe(({ movieId, liked, user }) => {\r\n            dispatch({ type: ActionType.SWIPE_MOVIE, payload: { id: movieId, liked, user } });\r\n        });\r\n        onToggleReady(({ userId }) => {\r\n            const userToToggle = room.participants.find((p) => p.id === userId);\r\n            if (userToToggle && !userToToggle.ready && user.id !== userToToggle.id) {\r\n                useToast({\r\n                    type: ToastType.Success,\r\n                    message: () => (\r\n                        <span>\r\n                            <FontWeight600>{userToToggle.name}</FontWeight600> is ready.\r\n                        </span>\r\n                    ),\r\n                });\r\n            }\r\n            dispatch({ type: ActionType.TOGGLE_READY, payload: { id: userId } });\r\n        });\r\n        onStartSwiper(({ roomId }) => {\r\n            if (roomId !== room.roomId) return;\r\n            dispatch({ type: ActionType.SET_STAGE, payload: { stage: Stage.SWIPER } });\r\n        });\r\n        onNameChange(({ userId, name }) => {\r\n            const affectedUser = room.participants.find((p) => p.id === userId);\r\n            if (affectedUser && affectedUser.id !== user.id) {\r\n                const oldName = affectedUser?.name;\r\n                useToast({\r\n                    type: ToastType.Success,\r\n                    message: () => (\r\n                        <span>\r\n                            <FontWeight600>{oldName}</FontWeight600> {' has changed their name to '}{' '}\r\n                            <FontWeight600>{name}.</FontWeight600>\r\n                        </span>\r\n                    ),\r\n                });\r\n            }\r\n            dispatch({ type: ActionType.USER_NAME_CHANGE, payload: { userId, name } });\r\n        });\r\n\r\n        return () => {\r\n            socket.removeAllListeners();\r\n        };\r\n    }, [socket, room, dispatch]);\r\n\r\n    useEffect(() => {\r\n        /* BUG HERE */\r\n        const isOwner = user.id === room.ownerId;\r\n        const participants = room.participants.filter((p) => p.id !== user.id);\r\n        const everyoneReady = participants.length > 0 && participants.every((p) => p.ready);\r\n        if (!everyoneReady && timeoutId.current) {\r\n            clearTimeout(timeoutId.current);\r\n            toast.dismiss(toastId.current);\r\n        }\r\n        if (isOwner && everyoneReady) {\r\n            timeoutId.current = window.setTimeout(\r\n                () =>\r\n                    (toastId.current = useToast({\r\n                        type: ToastType.Success,\r\n                        message: 'Everyone is ready to start.',\r\n                        duration: 99999,\r\n                    })),\r\n                2500,\r\n            );\r\n        }\r\n    }, [room.participants]);\r\n\r\n    return <RoomContext.Provider value={{ room, dispatch }}>{children}</RoomContext.Provider>;\r\n};\r\n\r\nexport default RoomProvider;\r\n","import React from 'react';\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\n\r\ninterface Props {\r\n    children: JSX.Element | JSX.Element[] | Element | Element[];\r\n    visible: boolean;\r\n    onClose?: () => void;\r\n    width?: number | string;\r\n    maxWidth?: number | string;\r\n    height?: number | string;\r\n}\r\n\r\nconst Modal = ({ visible, onClose, width = '90%', maxWidth = 500, height = 500, children }: Props) => {\r\n    const styles = {\r\n        height,\r\n        width,\r\n        maxWidth,\r\n        background: 'var(--blue-active)',\r\n        borderRadius: '8px',\r\n    };\r\n\r\n    return (\r\n        <Rodal visible={visible} onClose={onClose} closeOnEsc={true} customStyles={styles} animation=\"slideUp\">\r\n            {children}\r\n        </Rodal>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { FaUserCircle } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../styles';\r\n\r\nexport const Container = styled.nav`\r\n    background: rgb(0 0 0 / 25%);\r\n    padding: 1rem;\r\n\r\n    @media screen and (min-width: 700px) {\r\n        padding: 1.5rem 1rem;\r\n    }\r\n`;\r\n\r\nexport const InnerContainer = styled.div`\r\n    max-width: 1100px;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n    color: var(--white);\r\n    font-size: 1.25rem;\r\n    font-family: 'Merienda One', 'Rubik', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\r\n        'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\r\n`;\r\n\r\nexport const NavContainer = styled.section``;\r\n\r\nexport const NavLinks = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n\r\n    & > *:not(:last-child) {\r\n        margin: 0 1rem;\r\n    }\r\n`;\r\n\r\nexport const UserButton = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const UserIcon = styled(FaUserCircle)`\r\n    font-size: 1.25rem;\r\n    margin-left: 0.75rem;\r\n    width: 20px;\r\n`;\r\n\r\nexport const ModalContent = styled.section`\r\n    padding: 0 1rem;\r\n\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n        margin-bottom: 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const CurrentName = styled.p`\r\n    color: var(--white-muted);\r\n    margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n    margin-bottom: 1rem;\r\n    font-size: 1.125rem;\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nexport const ChangeButton = styled(Button)`\r\n    background: var(--blue-action);\r\n    padding: 0.75rem 1rem;\r\n    width: 100%;\r\n`;\r\n","/* eslint-disable react/display-name */\r\nimport React, { useState } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { useRoom } from '../../context/RoomContext';\r\nimport { useUser } from '../../context/UserContext';\r\nimport { changeName } from '../../sockets/emitters';\r\nimport { FontWeight600, StyledForm } from '../../styles';\r\nimport { ToastType, useToast } from '../../utils';\r\nimport Modal from '../Modal';\r\nimport {\r\n    ChangeButton,\r\n    Container,\r\n    CurrentName,\r\n    InnerContainer,\r\n    InputGroup,\r\n    Logo,\r\n    ModalContent,\r\n    Name,\r\n    NavContainer,\r\n    NavLinks,\r\n    UserButton,\r\n    UserIcon,\r\n} from './style';\r\n\r\ninterface Props {\r\n    forceShow?: boolean;\r\n}\r\n\r\nconst Nav = ({ forceShow: show }: Props) => {\r\n    const { room } = useRoom();\r\n    const { user, setUser } = useUser();\r\n    const { pathname } = useLocation();\r\n    const [visible, setVisible] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    if (pathname === '/' && !show) {\r\n        return null;\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setVisible(false);\r\n        setNewName('');\r\n    };\r\n\r\n    const confirmNameChange = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setUser({ ...user, name: newName });\r\n        closeModal();\r\n        useToast({\r\n            type: ToastType.Success,\r\n            message: () => (\r\n                <span>\r\n                    {'Name changed to'} <FontWeight600>{newName}.</FontWeight600>\r\n                </span>\r\n            ),\r\n        });\r\n\r\n        if (room.roomId) {\r\n            changeName({ roomId: room.roomId, userId: user.id, name: newName });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <InnerContainer>\r\n                <Logo>\r\n                    <NavLink to=\"/\">Movie Swiper </NavLink>\r\n                </Logo>\r\n                <NavContainer>\r\n                    <NavLinks>\r\n                        {room.roomId ? (\r\n                            <NavLink to={`/${room.stage}/${room.roomId}`}>Room</NavLink>\r\n                        ) : (\r\n                            <NavLink to=\"/create\">Create</NavLink>\r\n                        )}\r\n                        {user.name && (\r\n                            <UserButton onClick={() => setVisible(true)}>\r\n                                {user.name}\r\n                                <UserIcon />\r\n                            </UserButton>\r\n                        )}\r\n                    </NavLinks>\r\n                </NavContainer>\r\n            </InnerContainer>\r\n            <Modal visible={visible} onClose={closeModal} height={280} maxWidth={400}>\r\n                <ModalContent>\r\n                    <h2>Change name</h2>\r\n                    <CurrentName>Current name</CurrentName>\r\n                    <Name>{user.name}</Name>\r\n                    <StyledForm onSubmit={confirmNameChange}>\r\n                        <InputGroup>\r\n                            <label htmlFor=\"newName\">New name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"newName\"\r\n                                id=\"newName\"\r\n                                value={newName}\r\n                                onChange={(e) => setNewName(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                        <ChangeButton type=\"submit\">Change name</ChangeButton>\r\n                    </StyledForm>\r\n                </ModalContent>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { RouteProps, useHistory } from 'react-router-dom';\r\nimport { useRoom } from '../../context/RoomContext';\r\nimport { useUser } from '../../context/UserContext';\r\nimport { checkRoom, createRoom, joinRoom } from '../../sockets/emitters';\r\nimport { Title } from '../../styles';\r\nimport { ActionType } from '../../types/actions';\r\nimport { Stage } from '../../types/room';\r\n\r\ninterface Props {\r\n    component: React.ElementType;\r\n    computedMatch?: any;\r\n    location?: RouteProps['location'];\r\n    path?: RouteProps['path'];\r\n}\r\n\r\nconst ProtectedRoute = ({ component: Component, computedMatch, ...rest }: Props) => {\r\n    const { room, dispatch } = useRoom();\r\n    const { user } = useUser();\r\n    const history = useHistory();\r\n    const [status, setStatus] = useState<'loading' | 'error' | 'success'>('loading');\r\n    const roomId = computedMatch.params.id;\r\n    const path = computedMatch.url.split('/')[1];\r\n\r\n    useEffect(() => {\r\n        try {\r\n            console.log(room.roomId, roomId);\r\n            if (!roomId) return history.replace('/expired');\r\n            /* Check if room exists */\r\n            checkRoom({ roomId }, (res) => {\r\n                if (res.success) {\r\n                    /* If username is already set, join room */\r\n                    if (user.name) {\r\n                        joinRoom({ roomId, user }, (res) => {\r\n                            if (res.success) {\r\n                                setStatus('success');\r\n                            } else {\r\n                                setStatus('error');\r\n                            }\r\n                        });\r\n                        /* If username is not set, go to Join screen to set it */\r\n                    } else {\r\n                        return history.replace(`/join/${roomId}`);\r\n                    }\r\n                } else {\r\n                    if (!room.roomId) return history.replace('/create');\r\n\r\n                    createRoom({ roomId }, (res) => {\r\n                        if (!res.success) return;\r\n\r\n                        dispatch({\r\n                            type: ActionType.GET_ROOM,\r\n                            payload: { room },\r\n                        });\r\n                        return history.push(`/selection/${roomId}`);\r\n                    });\r\n                }\r\n            });\r\n            setStatus('success');\r\n        } catch (error) {\r\n            console.log(error);\r\n            setStatus('error');\r\n        }\r\n    }, [computedMatch.params.id, user]);\r\n\r\n    useEffect(() => {\r\n        const swipedAll =\r\n            room.movies.length > 0 &&\r\n            room.movies.every((movie) => movie.swipes.find((swipe) => swipe.user.id === user.id));\r\n        if (room.roomId && swipedAll) {\r\n            history.replace(`/${Stage.RESULTS}/${roomId}`);\r\n            return;\r\n        }\r\n\r\n        if (room.roomId && path !== room.stage) {\r\n            history.replace(`/${room.stage}/${roomId}`);\r\n        }\r\n    }, [room.stage]);\r\n\r\n    if (status === 'loading') {\r\n        return <Title>Loading...</Title>;\r\n    }\r\n\r\n    if (status === 'error') {\r\n        return <Title>Could not join. Please try again.</Title>;\r\n    }\r\n\r\n    return <Component {...computedMatch} {...rest} />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { ReactNode } from 'react';\r\nimport { Movie } from '../types/movies';\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n};\r\n\r\ninterface ContextProps {\r\n    moviePreview: Movie | null;\r\n    setMoviePreview: (value: Movie | null) => void;\r\n}\r\nexport const MoviePreviewContext = createContext<ContextProps>({\r\n    moviePreview: null,\r\n    setMoviePreview: () => ({}),\r\n});\r\n\r\nexport const useMoviePreview = () => {\r\n    return useContext(MoviePreviewContext);\r\n};\r\n\r\nconst MoviePreviewProvider = ({ children }: Props) => {\r\n    const [moviePreview, setMoviePreview] = useState<Movie | null>(null);\r\n\r\n    return (\r\n        <MoviePreviewContext.Provider value={{ moviePreview, setMoviePreview }}>\r\n            {children}\r\n        </MoviePreviewContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MoviePreviewProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n\r\n    &:last-of-type {\r\n        margin-bottom: 4rem;\r\n    }\r\n`;\r\n","import randomColor from 'randomcolor';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { socket } from '../../../sockets';\r\nimport { createRoom } from '../../../sockets/emitters';\r\nimport { ErrorMessage, FormButton, StyledForm } from '../../../styles';\r\nimport { ActionType } from '../../../types/actions';\r\nimport { InputGroup } from './style';\r\n\r\ninterface Errors {\r\n    name?: string;\r\n    roomName?: string;\r\n}\r\n\r\nconst CreateForm = () => {\r\n    const history = useHistory();\r\n    const { room, dispatch } = useRoom();\r\n    const { user, setUser } = useUser();\r\n    const initialInputs = {\r\n        name: user.name || '',\r\n        roomName: '',\r\n    };\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [inputs, setInputs] = useState(initialInputs);\r\n    const [touched, setTouched] = useState<Errors>({});\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const errors = getErrors();\r\n    const isFormValid = !Object.keys(errors).length;\r\n\r\n    const initializeRoomAndUser = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n\r\n        if (!isFormValid) return;\r\n\r\n        setDisabled(true);\r\n        if (room.roomId) {\r\n            socket.disconnect();\r\n            socket.connect();\r\n        }\r\n\r\n        const newUser = {\r\n            ...user,\r\n            name: inputs.name,\r\n            color: randomColor({\r\n                luminosity: 'light',\r\n                hue: 'blue',\r\n            }),\r\n        };\r\n        setUser(newUser);\r\n        createRoom({ roomId: null }, (res) => {\r\n            if (!res.success) {\r\n                return;\r\n            }\r\n\r\n            const roomId = res.data.roomId;\r\n            dispatch({\r\n                type: ActionType.INITIALIZE_ROOM,\r\n                payload: { roomName: inputs.roomName, roomId, ownerId: newUser.id, participant: newUser },\r\n            });\r\n            history.push(`/selection/${roomId}`);\r\n        });\r\n    };\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n\r\n    const onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        const { name } = e.target;\r\n        setTouched((touched) => ({ ...touched, [name]: true }));\r\n    };\r\n\r\n    function getErrors() {\r\n        const errors: Errors = {};\r\n        if (!inputs.name) errors.name = 'Name is required.';\r\n        if (!inputs.roomName) errors.roomName = 'Group name is required.';\r\n\r\n        return errors;\r\n    }\r\n\r\n    return (\r\n        <StyledForm onSubmit={initializeRoomAndUser}>\r\n            <InputGroup>\r\n                <label htmlFor=\"name\">Your name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" value={inputs.name} onChange={onChange} onBlur={onBlur} />\r\n                {(touched.name || submitted) && errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n            </InputGroup>\r\n            <InputGroup>\r\n                <label htmlFor=\"roomName\">Group name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"roomName\"\r\n                    id=\"roomName\"\r\n                    value={inputs.roomName}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                />\r\n                {(touched.roomName || submitted) && errors.roomName && <ErrorMessage>{errors.roomName}</ErrorMessage>}\r\n            </InputGroup>\r\n            <FormButton $disabled={disabled} disabled={disabled}>\r\n                Get Started\r\n            </FormButton>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default CreateForm;\r\n","import React from 'react';\r\nimport { FormPageContainer, Subtitle, Title } from '../../../styles';\r\nimport CreateForm from '../CreateForm';\r\n\r\nconst Create = () => {\r\n    return (\r\n        <FormPageContainer>\r\n            <Title>Create New Group</Title>\r\n            <Subtitle>Enter your name and a group name before proceeding to movie selection.</Subtitle>\r\n            <CreateForm />\r\n        </FormPageContainer>\r\n    );\r\n};\r\n\r\nexport default Create;\r\n","import styled from 'styled-components';\r\nimport { MaxWidthContainer } from '../../../styles';\r\n\r\nexport const Container = styled(MaxWidthContainer)``;\r\n","import React from 'react';\r\nimport { Container } from './style';\r\nimport { Subtitle, Title } from '../../../styles/index';\r\n\r\nconst Expired = () => {\r\n    return (\r\n        <Container>\r\n            <Title>Not Found</Title>\r\n            <Subtitle>Sorry, the room you&apos;re trying to join does not exist or has expired.</Subtitle>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Expired;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.article`\r\n    padding: 1.5rem;\r\n    background-color: var(--blue-active);\r\n    border-radius: 4px;\r\n    box-shadow: 0px 5px 15px 5px rgb(24 38 53 / 55%);\r\n`;\r\n\r\nexport const Headline = styled.h3`\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: var(--gray);\r\n    font-weight: 400;\r\n    font-size: 0.875rem;\r\n    margin-bottom: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Body = styled.p`\r\n    line-height: 1.5;\r\n    @media screen and (min-width: 500px) {\r\n        font-size: 1.125rem;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport * as S from './style';\r\n\r\ninterface Prop {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Headline = ({ children }: Prop) => <S.Headline>{children}</S.Headline>;\r\nconst Body = ({ children }: Prop) => <S.Body>{children}</S.Body>;\r\n\r\nconst Instruction = ({ children }: Prop) => {\r\n    const headline = React.Children.toArray(children).filter(\r\n        (child) => React.isValidElement(child) && child.type === Headline,\r\n    );\r\n    const body = React.Children.toArray(children).filter((child) => React.isValidElement(child) && child.type === Body);\r\n\r\n    return (\r\n        <S.Container>\r\n            {headline}\r\n            {body}\r\n        </S.Container>\r\n    );\r\n};\r\n\r\nInstruction.Headline = Headline;\r\nInstruction.Body = Body;\r\n\r\nexport default Instruction;\r\n","import { FaFilm, FaPollH, FaUsers } from 'react-icons/fa';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport const Grid = styled.section`\r\n    max-width: 1100px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 1rem;\r\n    margin: 4rem 1.5rem;\r\n    position: relative;\r\n    z-index: 3;\r\n    position: relative;\r\n\r\n    &::after {\r\n        content: '';\r\n        position: absolute;\r\n        height: 2px;\r\n        background: var(--blue-muted);\r\n        width: 100%;\r\n        bottom: -4rem;\r\n        left: 0;\r\n    }\r\n\r\n    @media screen and (min-width: 750px) {\r\n        grid-template-columns: repeat(3, 1fr);\r\n        grid-gap: 2rem;\r\n        margin-top: -5rem;\r\n    }\r\n\r\n    @media screen and (min-width: 1100px) {\r\n        margin: -5rem auto 4rem auto;\r\n    }\r\n`;\r\n\r\nconst iconStyles = css`\r\n    font-size: 1.25rem;\r\n    margin-right: 0.75rem;\r\n`;\r\n\r\nexport const UsersIcon = styled(FaUsers)`\r\n    ${iconStyles}\r\n    margin-right: 0.5rem;\r\n`;\r\n\r\nexport const FilmIcon = styled(FaFilm)`\r\n    ${iconStyles}\r\n`;\r\n\r\nexport const PollIcon = styled(FaPollH)`\r\n    ${iconStyles}\r\n`;\r\n","import React from 'react';\r\nimport Instruction from '../Instruction';\r\nimport * as S from './style';\r\n\r\nconst instructions = [\r\n    {\r\n        headline: 'Invite your friends',\r\n        body: 'Create a room, copy the link and share it with others.',\r\n        icon: <S.UsersIcon />,\r\n    },\r\n    {\r\n        headline: 'Pick your movies',\r\n        body: 'Browse by genre or find the exact movie you have in mind, then add it to the shared list.',\r\n        icon: <S.FilmIcon />,\r\n    },\r\n    {\r\n        headline: 'Swipe to vote',\r\n        body: 'Like a movie? Swipe right. Dislike a movie? Swipe left.',\r\n        icon: <S.PollIcon />,\r\n    },\r\n];\r\n\r\nconst Explainer = () => {\r\n    return (\r\n        <S.Grid>\r\n            {instructions.map((i) => (\r\n                <Instruction key={i.headline}>\r\n                    <Instruction.Headline>\r\n                        {i.icon} {i.headline}\r\n                    </Instruction.Headline>\r\n                    <Instruction.Body>{i.body}</Instruction.Body>\r\n                </Instruction>\r\n            ))}\r\n        </S.Grid>\r\n    );\r\n};\r\n\r\nexport default Explainer;\r\n","import { RiInformationLine } from 'react-icons/ri';\r\nimport styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n    width: 225px;\r\n    padding: 1rem 1rem 0;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    background-color: var(--blue-active);\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    display: block;\r\n    object-fit: cover;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const ButtonSection = styled.div`\r\n    padding: 1rem 0;\r\n    background: var(--blue-active);\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n    border-radius: 0 0 4px 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n`;\r\n\r\nexport const InfoIcon = styled(RiInformationLine)`\r\n    font-size: 1.25rem;\r\n    margin-right: 0.5rem;\r\n`;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useMoviePreview } from '../../../context/MoviePreviewContext';\r\nimport { Movie } from '../../../types/movies';\r\nimport { generateImageUrl } from '../../../utils';\r\nimport * as S from './style';\r\n\r\nconst placeholderMovie = {\r\n    adult: false,\r\n    backdrop_path: '/inJjDhCjfhh3RtrJWBmmDqeuSYC.jpg',\r\n    genre_ids: [28, 878],\r\n    id: 399566,\r\n    original_language: 'en',\r\n    original_title: 'Godzilla vs. Kong',\r\n    overview:\r\n        'In a time when monsters walk the Earth, humanity’s fight for its future sets Godzilla and Kong on a collision course that will see the two most powerful forces of nature on the planet collide in a spectacular battle for the ages.',\r\n    popularity: 4459.297,\r\n    poster_path: '/pgqgaUx1cJb5oZQQ5v0tNARCeBp.jpg',\r\n    release_date: '2021-03-24',\r\n    title: 'Godzilla vs. Kong',\r\n    video: false,\r\n    vote_average: 8.3,\r\n    vote_count: 4838,\r\n};\r\n\r\nconst MovieCardDisplay = () => {\r\n    const [movie, setMovie] = useState<Movie | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const imageUrl = movie && generateImageUrl(movie.poster_path, 'w342');\r\n    const { setMoviePreview } = useMoviePreview();\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const res = await axios.get('/movies/random');\r\n\r\n                if (res.status === 200) {\r\n                    setMovie(res.data);\r\n                }\r\n                console.log(res);\r\n            } catch (error) {\r\n                console.log(error);\r\n                setMovie(null);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchMovie();\r\n    }, []);\r\n\r\n    if (!movie || !imageUrl) return null;\r\n\r\n    return (\r\n        <S.Button onClick={() => setMoviePreview(movie)}>\r\n            <S.Image src={imageUrl} alt={`Movie poster for ${movie?.title}.`} />\r\n            <S.ButtonSection>\r\n                <S.InfoIcon />\r\n                See Details\r\n            </S.ButtonSection>\r\n        </S.Button>\r\n    );\r\n};\r\n\r\nexport default MovieCardDisplay;\r\n","import styled from 'styled-components';\r\nimport { MaxWidthContainer } from '../../../styles';\r\nimport { Button as MovieCardDisplayContainer } from '../MovieCardDisplay/style';\r\n\r\nexport const Container = styled(MaxWidthContainer)`\r\n    padding: 4rem 1.5rem 4rem;\r\n    max-width: 700px;\r\n\r\n    & ${MovieCardDisplayContainer} {\r\n        flex: 0 0 200px;\r\n    }\r\n\r\n    @media screen and (min-width: 600px) {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    max-width: 350px;\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        font-weight: 500;\r\n        margin-bottom: 1rem;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n        color: var(--white-muted);\r\n        line-height: 1.5;\r\n        margin-bottom: 0.5rem;\r\n\r\n        &:nth-last-of-type(2) {\r\n            margin-bottom: 1rem;\r\n        }\r\n\r\n        &:last-of-type {\r\n            margin-bottom: 2rem;\r\n        }\r\n\r\n        @media screen and (min-width: 600px) {\r\n            &:last-of-type {\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    ul {\r\n        list-style-position: inside;\r\n        margin-bottom: 2rem;\r\n\r\n        & > li + li {\r\n            margin-top: 0.5rem;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport MovieCardDisplay from '../MovieCardDisplay';\r\nimport * as S from './style';\r\n\r\nconst Showcase = () => {\r\n    return (\r\n        <S.Container>\r\n            <S.Content>\r\n                <h2>See movie details</h2>\r\n                <p>Want to learn more about a movie before casting your vote? No problem.</p>\r\n                <p>Tap on a movie to see more details, including:</p>\r\n                <ul>\r\n                    <li>Description</li>\r\n                    <li>Duration</li>\r\n                    <li>Genres</li>\r\n                    <li>Trailer</li>\r\n                </ul>\r\n                <p>Try it out, tap on the movie card.</p>\r\n            </S.Content>\r\n            <MovieCardDisplay />\r\n        </S.Container>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n","export default __webpack_public_path__ + \"static/media/movie-posters.0e940876.jpg\";","import styled from 'styled-components';\r\nimport Cinema from '../../../assets/movie-posters.jpg';\r\nimport { Button } from '../../../styles';\r\n\r\nexport const Container = styled.section`\r\n    position: relative;\r\n    z-index: 1;\r\n    overflow: hidden;\r\n\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: -2;\r\n        background-image: url(${Cinema});\r\n        background-size: cover;\r\n        background-position: top;\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background: hsl(211deg 43% 13% / 90%);\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: -1;\r\n    }\r\n`;\r\n\r\nexport const CTA = styled.section`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 4rem 1.5rem;\r\n    min-height: 500px;\r\n\r\n    @media (min-width: 450px) {\r\n        margin: auto;\r\n    }\r\n\r\n    @media (min-width: 700px) {\r\n        align-items: flex-start;\r\n        min-height: 600px;\r\n    }\r\n\r\n    @media (min-width: 1500px) {\r\n        padding: 6rem 1rem;\r\n        min-height: 700px;\r\n    }\r\n`;\r\n\r\nexport const MainTitle = styled.h1`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 2rem;\r\n    max-width: 650px;\r\n    letter-spacing: 1px;\r\n    line-height: 1.4;\r\n    color: #b3c4d8;\r\n    margin: 0 0 4rem;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    position: relative;\r\n\r\n    &::after {\r\n        /* content: ''; */\r\n        position: absolute;\r\n        height: 2px;\r\n        background: #cecece54;\r\n        background: #aaaaaa;\r\n        width: 100%;\r\n        bottom: -0.5rem;\r\n        left: 0;\r\n    }\r\n\r\n    @media (min-width: 700px) {\r\n        font-size: 2.25rem;\r\n    }\r\n`;\r\n\r\nexport const Bold = styled.span`\r\n    color: var(--white);\r\n    font-weight: 700;\r\n    font-size: 2.75rem;\r\n    text-transform: none;\r\n    line-height: 1.2;\r\n\r\n    @media (min-width: 700px) {\r\n        font-size: 3.5rem;\r\n    }\r\n`;\r\n\r\nexport const Subtitle = styled.h2`\r\n    text-transform: uppercase;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    color: #d8d8d8;\r\n    margin-bottom: 1rem;\r\n    letter-spacing: 2px;\r\n    margin-right: auto;\r\n    position: relative;\r\n    text-align: center;\r\n`;\r\n\r\nexport const BR = styled.br`\r\n    display: inline;\r\n    @media (min-width: 500px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const GetStartedButton = styled(Button)`\r\n    flex: 0;\r\n    background: var(--blue-action);\r\n    padding: 1rem 3rem;\r\n    font-weight: 500;\r\n    transition: background 100ms ease-in;\r\n    width: 100%;\r\n    margin: auto;\r\n\r\n    &:hover {\r\n        background: var(--blue-action-90);\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Nav from '../../../components/Nav';\r\nimport Explainer from '../Explainer';\r\nimport Showcase from '../Showcase';\r\nimport { Bold, Container, CTA, GetStartedButton, MainTitle, Subtitle } from './style';\r\n\r\nconst Home = () => {\r\n    const history = useHistory();\r\n    const navigate = () => {\r\n        history.push('/create');\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Nav forceShow />\r\n                <CTA>\r\n                    <div>\r\n                        <MainTitle>\r\n                            Movie night?\r\n                            <Bold>Put it to a vote</Bold>\r\n                        </MainTitle>\r\n                        <Subtitle>Find the right movie</Subtitle>\r\n                        <GetStartedButton onClick={navigate}>Get Started</GetStartedButton>\r\n                    </div>\r\n                </CTA>\r\n            </Container>\r\n            <Explainer />\r\n            <Showcase />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n\r\n    &:last-of-type {\r\n        margin-bottom: 4rem;\r\n    }\r\n`;\r\n","import randomColor from 'randomcolor';\r\nimport React, { useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { ErrorMessage, FormButton, StyledForm } from '../../../styles';\r\nimport { InputGroup } from './style';\r\n\r\ninterface Errors {\r\n    name?: string;\r\n}\r\n\r\nconst initialInputs = {\r\n    name: '',\r\n};\r\n\r\nconst JoinForm = () => {\r\n    const history = useHistory();\r\n    const { id: roomId }: { [key: string]: string } = useParams();\r\n    const { user, setUser } = useUser();\r\n    const [inputs, setInputs] = useState(initialInputs);\r\n    const [touched, setTouched] = useState<Errors>({});\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const errors = getErrors();\r\n    const isFormValid = !Object.keys(errors).length;\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n\r\n    const onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        const { name } = e.target;\r\n        setTouched((touched) => ({ ...touched, [name]: true }));\r\n    };\r\n\r\n    function getErrors() {\r\n        const errors: Errors = {};\r\n        if (!inputs.name) errors.name = 'Name is required.';\r\n\r\n        return errors;\r\n    }\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n\r\n        if (!isFormValid) return;\r\n\r\n        const newUser = {\r\n            ...user,\r\n            name: inputs.name,\r\n            color: randomColor({\r\n                luminosity: 'light',\r\n                hue: 'blue',\r\n            }),\r\n        };\r\n        setUser(newUser);\r\n        history.push(`/selection/${roomId}`);\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onSubmit}>\r\n            <InputGroup>\r\n                <label>Your name</label>\r\n                <input type=\"text\" name=\"name\" onChange={onChange} onBlur={onBlur} />\r\n                {(touched.name || submitted) && errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n            </InputGroup>\r\n            <FormButton>Get Started</FormButton>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default JoinForm;\r\n","import React from 'react';\r\nimport { FormPageContainer, Subtitle, Title } from '../../../styles';\r\nimport JoinForm from '../JoinForm';\r\n\r\nconst Join = () => {\r\n    return (\r\n        <FormPageContainer>\r\n            <Title>Enter Your Name</Title>\r\n            <Subtitle>Enter your name before proceeding to movie selection.</Subtitle>\r\n            <JoinForm />\r\n        </FormPageContainer>\r\n    );\r\n};\r\n\r\nexport default Join;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div<{ margin: string | undefined; backgroundColor: string | undefined }>`\r\n    padding: 0.75rem;\r\n    margin: ${(props) => props.margin || ''};\r\n    border-radius: 4px;\r\n    display: inline-block;\r\n    max-width: 500px;\r\n    background: ${(props) => props.backgroundColor || 'var(--accent-active)'};\r\n    color: hsl(340deg 38% 94%);\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    line-height: 1.3;\r\n`;\r\n\r\nexport const TextContainer = styled.aside``;\r\n","import React from 'react';\r\nimport { Container, Text, TextContainer } from './style';\r\n\r\ninterface Props {\r\n    text: string;\r\n    margin?: string;\r\n    backgroundColor?: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst InfoBox = ({ text, margin, backgroundColor, children }: Props) => {\r\n    if (children) {\r\n        return (\r\n            <Container margin={margin} backgroundColor={backgroundColor}>\r\n                <TextContainer>{children}</TextContainer>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container margin={margin} backgroundColor={backgroundColor}>\r\n            <Text>{text}</Text>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default InfoBox;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin-top: 0.5rem;\r\n    padding: 0.5rem 0;\r\n\r\n    & > * + * {\r\n        margin-top: 0.5rem;\r\n    }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: flex;\r\n    align-items: center;\r\n    color: var(--white-muted);\r\n`;\r\n\r\nexport const Color = styled.div<{ color: string }>`\r\n    background-color: ${(props) => props.color};\r\n    width: 12.5px;\r\n    height: 12.5px;\r\n    border-radius: 50%;\r\n    margin-right: 0.5rem;\r\n    flex-shrink: 0;\r\n`;\r\n\r\nexport const Name = styled.p<{ wrap: number }>`\r\n    white-space: ${(props) => props.wrap === 0 && 'nowrap'};\r\n    overflow: ${(props) => props.wrap === 0 && 'hidden'};\r\n    text-overflow: ${(props) => props.wrap === 0 && 'ellipsis'};\r\n    max-width: ${(props) => props.wrap === 0 && '110px'}; ;\r\n`;\r\n\r\nexport const MoreItems = styled.p`\r\n    margin-top: 0.5rem;\r\n    color: var(--white-muted);\r\n\r\n    span {\r\n        margin-right: 0.25rem;\r\n    }\r\n`;\r\n\r\nexport const ModalContent = styled.section`\r\n    h2 {\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport Modal from '../../../components/Modal';\r\nimport { Participant } from '../../../types/room';\r\nimport { Color, Item, List, ModalContent, MoreItems, Name } from './styled';\r\n\r\ninterface Props {\r\n    users: Participant[];\r\n}\r\n\r\nconst LikeList = ({ users }: Props) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const maxNumber = 5;\r\n    if (users.length > maxNumber) {\r\n        return (\r\n            <>\r\n                <List>\r\n                    {users.slice(0, maxNumber).map((user) => (\r\n                        <Item key={user.id}>\r\n                            <Color color={user.color} />\r\n                            <Name wrap={0}>{user.name}</Name>\r\n                        </Item>\r\n                    ))}\r\n                    <Item>\r\n                        <MoreItems onClick={() => setVisible(true)}>\r\n                            <button>\r\n                                <span>+{users.length - maxNumber}</span> More\r\n                            </button>\r\n                        </MoreItems>\r\n                    </Item>\r\n                </List>\r\n                <Modal visible={visible} onClose={() => setVisible(false)} height={300}>\r\n                    <ModalContent>\r\n                        <h2>Likes</h2>\r\n                        <List>\r\n                            {users.map((user) => (\r\n                                <Item key={user.id}>\r\n                                    <Color color={user.color} />\r\n                                    <Name wrap={1}>{user.name}</Name>\r\n                                </Item>\r\n                            ))}\r\n                        </List>\r\n                    </ModalContent>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {users.map((user) => (\r\n                <Item key={user.id}>\r\n                    <Color color={user.color} />\r\n                    <Name wrap={0}>{user.name}</Name>\r\n                </Item>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default LikeList;\r\n","import { motion } from 'framer-motion';\r\nimport { RiInformationLine } from 'react-icons/ri';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../../styles';\r\n\r\nexport const Card = styled.article`\r\n    border-right: 1px solid var(--blue-dark);\r\n    background: var(--blue-dark);\r\n`;\r\n\r\nexport const ResultsArea = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n`;\r\n\r\nexport const ImageContainer = styled(motion.div)`\r\n    position: relative;\r\n`;\r\n\r\nexport const Image = styled(motion.img)`\r\n    height: 230px;\r\n    object-fit: cover;\r\n    display: block;\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const TotalLikes = styled.p`\r\n    font-weight: 600;\r\n    font-size: 1.25rem;\r\n    text-align: center;\r\n    padding: 0.5rem 1rem;\r\n    background: hsl(213deg 47% 48% / 90%);\r\n    position: absolute;\r\n    top: -1rem;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    display: flex;\r\n    align-items: baseline;\r\n    border-radius: 4px;\r\n\r\n    span {\r\n        font-size: 1rem;\r\n        font-weight: 500;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nexport const MovieTitle = styled.h3`\r\n    font-size: 1.125rem;\r\n    font-weight: 600;\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n    border-bottom: 1px solid var(--gray);\r\n    padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const ResultsContainer = styled.div`\r\n    width: 100%;\r\n    background: var(--blue-dark);\r\n    padding: 1rem 1.5rem;\r\n`;\r\n\r\nexport const DetailButton = styled(Button)`\r\n    background: var(--blue-active);\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n`;\r\n\r\nexport const ExpandIcon = styled(RiInformationLine)`\r\n    font-size: 1rem;\r\n    margin-right: 0.5rem;\r\n`;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useMoviePreview } from '../../../context/MoviePreviewContext';\r\nimport { AddedMovie } from '../../../types/movies';\r\nimport { generateImageUrl } from '../../../utils';\r\nimport LikeList from '../LikeList';\r\nimport {\r\n    Card,\r\n    DetailButton,\r\n    ExpandIcon,\r\n    Image,\r\n    ImageContainer,\r\n    MovieTitle,\r\n    ResultsArea,\r\n    ResultsContainer,\r\n    TotalLikes,\r\n} from './style';\r\n\r\ninterface Props {\r\n    movie: AddedMovie;\r\n}\r\n\r\nconst ResultCard = ({ movie }: Props) => {\r\n    const { setMoviePreview } = useMoviePreview();\r\n    const { pathname } = useLocation();\r\n    const usersWhoLiked = movie.swipes.filter((swipe) => swipe.liked).map((swipe) => swipe.user);\r\n    const colors = usersWhoLiked.map((user) => user?.color) as string[];\r\n\r\n    const onMovieClick = () => {\r\n        if (pathname.includes(movie.id.toString())) {\r\n            setMoviePreview(null);\r\n        } else {\r\n            setMoviePreview(movie);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <ResultsArea>\r\n                <ImageContainer>\r\n                    <TotalLikes>\r\n                        {usersWhoLiked.length} <span>likes</span>\r\n                    </TotalLikes>\r\n                    <Image src={generateImageUrl(movie.poster_path, 'w500')} />\r\n                </ImageContainer>\r\n                <ResultsContainer>\r\n                    <MovieTitle>{movie.title}</MovieTitle>\r\n                    <LikeList users={usersWhoLiked} />\r\n                </ResultsContainer>\r\n            </ResultsArea>\r\n            <DetailButton onClick={onMovieClick}>\r\n                <ExpandIcon />\r\n                Movie Details\r\n            </DetailButton>\r\n            {/* <LikeCountBar colors={colors} /> */}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ResultCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.section`\r\n    display: grid;\r\n    gap: 4rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n`;\r\n\r\nexport const Empty = styled.p`\r\n    text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport { AddedMovie } from '../../../types/movies';\r\nimport ResultCard from '../ResultCard';\r\nimport { List, Empty } from './style';\r\n\r\ninterface Props {\r\n    movies: AddedMovie[];\r\n}\r\n\r\nconst ResultList = ({ movies }: Props) => {\r\n    if (!movies.length) {\r\n        return <Empty>No matches yet.</Empty>;\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {movies.map((movie) => (\r\n                <ResultCard key={movie.id} movie={movie} />\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default ResultList;\r\n","import styled from 'styled-components';\r\nimport { MaxWidthContainer } from '../../../styles';\r\n\r\nexport const Container = styled(MaxWidthContainer)``;\r\n","import React from 'react';\r\nimport InfoBox from '../../../components/InfoBox';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport { Subtitle, Title } from '../../../styles';\r\nimport ResultList from '../ResultList';\r\nimport { Container } from './style';\r\n\r\nconst Results = () => {\r\n    const { room } = useRoom();\r\n    const sortedMovies = room.movies\r\n        .map((movie) => {\r\n            const likes = movie.swipes.reduce((acc, swipe) => (swipe.liked ? acc + 1 : acc), 0);\r\n            return { ...movie, likes };\r\n        })\r\n        .sort((a, b) => b.likes - a.likes);\r\n    const filteredMovies = sortedMovies.filter((movie) => movie.likes > 1);\r\n\r\n    const getInfoBoxProps = () => {\r\n        const participantIds = room.participants.map((p) => p.id);\r\n        const allSwiped = room.movies.reduce((allSwiped, movie) => {\r\n            const swipeIds = movie.swipes.map((swipe) => swipe.user.id);\r\n            allSwiped =\r\n                movie.swipes.length >= participantIds.length && participantIds.every((id) => swipeIds.includes(id));\r\n            return allSwiped;\r\n        }, true);\r\n\r\n        if (!allSwiped) {\r\n            return {\r\n                text: 'Others are still swiping. Results may change.',\r\n                backgroundColor: 'hsla(0, 0%, 49.4%, 0.5)',\r\n            };\r\n        }\r\n\r\n        return {\r\n            text: \"Everyone's done swiping. See the final results below.\",\r\n            backgroundColor: 'var(--accent-purple)',\r\n        };\r\n    };\r\n    const { text, backgroundColor } = getInfoBoxProps();\r\n\r\n    return (\r\n        <Container>\r\n            <Title>Final Results</Title>\r\n            <Subtitle>Only movies that 2 or more participants liked will show up here.</Subtitle>\r\n            <InfoBox text={text} margin=\"0 0 4rem\" backgroundColor={backgroundColor} />\r\n            <ResultList movies={filteredMovies} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Results;\r\n","/* eslint-disable react/display-name */\r\nimport React from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { useRoom } from '../context/RoomContext';\r\nimport { useUser } from '../context/UserContext';\r\nimport { addMovie, removeMovie } from '../sockets/emitters';\r\nimport { FontWeight600 } from '../styles';\r\nimport { AddedMovie, Movie } from '../types/movies';\r\nimport { ToastType, useToast } from '../utils';\r\n\r\nconst useMovieManager = (movie: Movie) => {\r\n    const { room } = useRoom();\r\n    const { user } = useUser();\r\n    const movieInList = room.movies.find((m) => m.id === movie.id);\r\n    const addedByMe = movieInList?.addedByUserId === user.id;\r\n\r\n    const movieActionHandler = () => {\r\n        if (!movieInList) {\r\n            const addedMovie: AddedMovie = { ...movie, addedByUserId: user.id, swipes: [] };\r\n            addMovie({ roomId: room.roomId as string, movie: addedMovie }, (res) => {\r\n                if (res.success) {\r\n                    useToast({\r\n                        type: ToastType.Success,\r\n                        message: () => (\r\n                            <>\r\n                                <span>\r\n                                    Added <FontWeight600>{movie.title}</FontWeight600>.\r\n                                </span>\r\n                            </>\r\n                        ),\r\n                    });\r\n                } else {\r\n                    useToast({\r\n                        type: ToastType.Error,\r\n                        message: () => (\r\n                            <>\r\n                                <span>\r\n                                    There was a problem adding <FontWeight600>{movie.title}</FontWeight600>.\r\n                                </span>\r\n                            </>\r\n                        ),\r\n                    });\r\n                    toast.error(`There was a problem adding ${movie.title}.`);\r\n                }\r\n            });\r\n        } else if (movieInList && !addedByMe) {\r\n            useToast({\r\n                type: ToastType.Custom,\r\n                message: () => (\r\n                    <span>\r\n                        <FontWeight600>{movie.title}</FontWeight600> can only be removed by the person who added it.\r\n                    </span>\r\n                ),\r\n            });\r\n            return;\r\n        } else {\r\n            removeMovie({ roomId: room.roomId as string, movieId: movie.id }, (res) => {\r\n                if (!res.success) {\r\n                    toast.error(`There was a problem removing ${movie.title}.`);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const getButtonBackgroundColor = (): string => {\r\n        if (!movieInList) {\r\n            return 'hsl(213deg 40% 49%)';\r\n        } else if (movieInList && !addedByMe) {\r\n            return 'hsl(213deg 6% 37% / 90%)';\r\n        } else {\r\n            return 'var(--accent-dark-90)';\r\n        }\r\n    };\r\n\r\n    return { movieActionHandler, buttonBackgroundColor: getButtonBackgroundColor(), movieInList };\r\n};\r\n\r\nexport default useMovieManager;\r\n","import { motion } from 'framer-motion';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { HiMinus, HiOutlinePlus } from 'react-icons/hi';\r\nimport { IoIosArrowBack } from 'react-icons/io';\r\nimport styled, { css } from 'styled-components';\r\nimport { Button } from '../../../styles';\r\n\r\nexport const Overlay = styled(motion.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0);\r\n    will-change: opacity;\r\n    z-index: 6;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        background: rgba(0, 0, 0, 0.5);\r\n    }\r\n`;\r\n\r\nexport const Container = styled(motion.section)<{ imageUrl?: string | null }>`\r\n    height: 100%;\r\n    width: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    will-change: opacity;\r\n    z-index: 7;\r\n    overflow-y: scroll;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        max-width: 800px;\r\n        max-height: 500px;\r\n        left: 0;\r\n        right: 0;\r\n        margin: auto;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        border-radius: 4px;\r\n    }\r\n`;\r\n\r\nexport const Image = styled(motion.img)`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: block;\r\n    object-fit: cover;\r\n    filter: brightness(0.25);\r\n    z-index: -1;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nexport const ContentContainer = styled(motion.article)`\r\n    height: auto;\r\n    min-height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 2rem 2rem 6rem;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        max-width: 800px;\r\n        max-height: 500px;\r\n        left: 0;\r\n        right: 0;\r\n        margin: auto;\r\n        border-radius: 4px;\r\n        padding: 3rem;\r\n    }\r\n`;\r\n\r\nexport const Title = styled(motion.h3)`\r\n    font-size: 3rem;\r\n    margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Tag = styled.p`\r\n    margin-bottom: 1rem;\r\n    color: var(--white-muted);\r\n`;\r\n\r\nexport const WrapContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 2rem;\r\n\r\n    & > * {\r\n        margin-top: 0.5rem;\r\n        margin-right: 0.5rem;\r\n    }\r\n`;\r\n\r\nexport const Genre = styled.p`\r\n    background: #495768;\r\n    color: var(--white);\r\n    padding: 0.125rem 0.75rem;\r\n    border-radius: 99px;\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n    line-height: 1.7;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Label = styled.p`\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n    margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Divider = styled.p`\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 1rem;\r\n    color: var(--gray);\r\n    border-bottom: 1px solid;\r\n    font-size: 0.875rem;\r\n`;\r\n\r\nexport const RatingText = styled.p`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n    margin-bottom: 2rem;\r\n\r\n    @media screen and (min-width: 350px) {\r\n        grid-template-columns: repeat(2, minmax(130px, 200px));\r\n    }\r\n`;\r\n\r\nexport const GridCell = styled.div`\r\n    p {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const Star = styled(AiFillStar)`\r\n    margin-left: 0.5rem;\r\n    color: #dada1b;\r\n`;\r\n\r\nexport const Video = styled.iframe`\r\n    width: 100%;\r\n\r\n    @media screen and (min-width: 450px) {\r\n        height: 275px;\r\n    }\r\n\r\n    @media screen and (min-width: 600px) {\r\n        height: 500px;\r\n        margin-bottom: 3rem;\r\n    }\r\n`;\r\n\r\nexport const ButtonContainer = styled(motion.div)`\r\n    display: flex;\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: hsl(213deg 23% 25%);\r\n    box-shadow: 0 -2px 10px -1px rgb(0 0 0 / 30%);\r\n    margin-top: auto;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const BackButton = styled(Button)``;\r\n\r\nexport const AddButton = styled(Button)<{ backgroundColor: string }>`\r\n    background: ${(props) => props.backgroundColor || 'var(--blue-action)'};\r\n    border-top-left-radius: 0;\r\n`;\r\n\r\nconst iconStyles = css`\r\n    margin-right: 1rem;\r\n    font-size: 1.125rem;\r\n`;\r\n\r\nexport const BackIcon = styled(IoIosArrowBack)`\r\n    ${iconStyles}\r\n`;\r\n\r\nexport const PlusIcon = styled(HiOutlinePlus)`\r\n    ${iconStyles}\r\n`;\r\n\r\nexport const MinusIcon = styled(HiMinus)`\r\n    ${iconStyles}\r\n`;\r\n\r\nexport const DesktopAddButton = styled(Button)<{ backgroundColor: string }>`\r\n    display: none;\r\n    max-width: 300px;\r\n    background: ${(props) => props.backgroundColor || 'var(--blue-action)'};\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 4px;\r\n    margin-bottom: 2rem;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        display: flex;\r\n    }\r\n`;\r\n","import axios from 'axios';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useMoviePreview } from '../../../context/MoviePreviewContext';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport useMovieManager from '../../../hooks/useMovieManager';\r\nimport { Movie, MovieDetails } from '../../../types/movies';\r\nimport { Stage } from '../../../types/room';\r\nimport { generateImageUrl } from '../../../utils';\r\nimport {\r\n    AddButton,\r\n    BackButton,\r\n    BackIcon,\r\n    ButtonContainer,\r\n    Container,\r\n    ContentContainer,\r\n    DesktopAddButton,\r\n    Divider,\r\n    Genre,\r\n    Grid,\r\n    GridCell,\r\n    Image,\r\n    Label,\r\n    MinusIcon,\r\n    Overlay,\r\n    Overview,\r\n    PlusIcon,\r\n    RatingText,\r\n    Star,\r\n    Tag,\r\n    Title,\r\n    Video,\r\n    WrapContainer,\r\n} from './style';\r\n\r\ninterface Props {\r\n    movie: Movie;\r\n}\r\n\r\nconst MovieDetail = ({ movie }: Props) => {\r\n    const history = useHistory();\r\n    const { room } = useRoom();\r\n    const { movieActionHandler, buttonBackgroundColor, movieInList } = useMovieManager(movie);\r\n    const { setMoviePreview: setMovieDetail } = useMoviePreview();\r\n\r\n    const [details, setDetails] = useState<MovieDetails | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const imageUrl = generateImageUrl(movie.poster_path, 'w500');\r\n    const trailerData =\r\n        details && details?.videos?.results?.find((video) => video.type === 'Trailer' && video.site === 'YouTube');\r\n    const trailerUrl = `https://www.youtube.com/embed/${trailerData?.key}`;\r\n    const inSelection = history.location.pathname.includes(Stage.SELECTION);\r\n\r\n    const onOverlayClick = (e: any) => {\r\n        if (e.target.attributes['data-overlay']) {\r\n            setMovieDetail(null);\r\n        }\r\n    };\r\n\r\n    const backToSelection = () => {\r\n        setMovieDetail(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const onEscPress = (e: KeyboardEvent) => {\r\n            console.log(e);\r\n            if (e.key === 'Escape') {\r\n                history.push(`/selection/${room.roomId}`);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', onEscPress);\r\n\r\n        return window.removeEventListener('keydown', onEscPress);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchMovieDetails();\r\n        document.body.style.overflow = 'hidden';\r\n        return () => {\r\n            cancelToken.cancel('Component got unmounted');\r\n            document.body.style.overflow = 'unset';\r\n        };\r\n    }, [movie]);\r\n\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    const fetchMovieDetails = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await axios.get(`/movies/${movie.id}`, {\r\n                cancelToken: cancelToken.token,\r\n            });\r\n            if (res.status === 200) {\r\n                setDetails(res.data);\r\n            }\r\n            setLoading(false);\r\n        } catch (error) {\r\n            cancelToken.cancel('Error in try catch block.');\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Overlay\r\n            data-overlay={true}\r\n            onClick={onOverlayClick}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0, transition: { duration: 0 } }}\r\n        >\r\n            <Container>\r\n                <ContentContainer initial={{ opacity: 0 }} animate={{ opacity: 1 }} layoutId={`image-${movie.id}`}>\r\n                    <Image src={imageUrl} />\r\n                    <AnimatePresence>\r\n                        {details && (\r\n                            <motion.div\r\n                                initial={{ opacity: 0 }}\r\n                                animate={{ opacity: 1 }}\r\n                                transition={{ duration: 0.2, delay: 0.25 }}\r\n                            >\r\n                                {inSelection && (\r\n                                    <DesktopAddButton\r\n                                        onClick={movieActionHandler}\r\n                                        backgroundColor={buttonBackgroundColor}\r\n                                    >\r\n                                        {' '}\r\n                                        {!movieInList && (\r\n                                            <>\r\n                                                <PlusIcon /> Add Movie\r\n                                            </>\r\n                                        )}\r\n                                        {movieInList && (\r\n                                            <>\r\n                                                <MinusIcon /> Remove Movie\r\n                                            </>\r\n                                        )}\r\n                                    </DesktopAddButton>\r\n                                )}\r\n                                <Title>{details.title}</Title>\r\n                                <Tag>{details.tagline}</Tag>\r\n\r\n                                <WrapContainer>\r\n                                    {details.genres?.map((genre) => (\r\n                                        <Genre key={genre.id}>{genre.name}</Genre>\r\n                                    ))}\r\n                                </WrapContainer>\r\n                                <Label>Overview</Label>\r\n                                <Overview>{details.overview}</Overview>\r\n                                <Divider>Details</Divider>\r\n                                <Grid>\r\n                                    <GridCell>\r\n                                        <Label>Rating</Label>\r\n                                        <RatingText>\r\n                                            {details.vote_average} <Star />\r\n                                        </RatingText>\r\n                                    </GridCell>\r\n                                    <GridCell>\r\n                                        <Label>Runtime</Label>\r\n                                        <p>{details.runtime} min</p>\r\n                                    </GridCell>\r\n                                    <GridCell>\r\n                                        <Label>Released</Label>\r\n                                        <p>{details.release_date}</p>\r\n                                    </GridCell>\r\n                                    <GridCell>\r\n                                        <Label>Language</Label>\r\n                                        <p>{details.original_language.toUpperCase()}</p>\r\n                                    </GridCell>\r\n                                </Grid>\r\n                                {trailerData && (\r\n                                    <>\r\n                                        <Divider>Trailer</Divider>\r\n                                        <Video src={trailerUrl} frameBorder=\"0\" allowFullScreen></Video>\r\n                                    </>\r\n                                )}\r\n                                <ButtonContainer\r\n                                    initial={{ opacity: 0, y: 50 }}\r\n                                    animate={{\r\n                                        opacity: 1,\r\n                                        y: 0,\r\n                                        transition: {\r\n                                            duration: 0.75,\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    <BackButton onClick={backToSelection}>\r\n                                        <BackIcon />\r\n                                        Go Back\r\n                                    </BackButton>\r\n                                    {inSelection && (\r\n                                        <AddButton onClick={movieActionHandler} backgroundColor={buttonBackgroundColor}>\r\n                                            {!movieInList && (\r\n                                                <>\r\n                                                    <PlusIcon /> Add Movie\r\n                                                </>\r\n                                            )}\r\n                                            {movieInList && (\r\n                                                <>\r\n                                                    <MinusIcon /> Remove\r\n                                                </>\r\n                                            )}\r\n                                        </AddButton>\r\n                                    )}\r\n                                </ButtonContainer>\r\n                            </motion.div>\r\n                        )}\r\n                    </AnimatePresence>\r\n                </ContentContainer>\r\n            </Container>\r\n        </Overlay>\r\n    );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import styled from 'styled-components';\r\nimport { Button } from '../../styles';\r\n\r\nexport const Container = styled.aside`\r\n    margin-bottom: 2rem;\r\n\r\n    @media (min-width: 800px) {\r\n        max-width: 400px;\r\n    }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    color: var(--white-muted);\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-size: 0.875rem;\r\n    margin-bottom: 0.5rem;\r\n    display: inline-block;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n    display: flex;\r\n\r\n    input {\r\n        padding: 0.5rem;\r\n        border-radius: 4px;\r\n        flex-basis: 65%;\r\n        text-overflow: ellipsis;\r\n        border-top-right-radius: 0;\r\n        border-bottom-right-radius: 0;\r\n    }\r\n`;\r\n\r\nexport const CopyButton = styled(Button)`\r\n    background: var(--blue-action);\r\n    padding: 0.5rem 1.25rem;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport { ToastType, useToast } from '../../utils';\r\nimport { Container, CopyButton, InputContainer, Label } from './style';\r\n\r\nconst InviteLink = () => {\r\n    const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    const onClick = () => {\r\n        inputRef.current?.select();\r\n    };\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(window.location.href);\r\n        useToast({ type: ToastType.Custom, message: 'Copied to clipboard.' });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Label>Invite Link</Label>\r\n            <InputContainer>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"link\"\r\n                    defaultValue={window.location.href}\r\n                    ref={inputRef}\r\n                    onClick={onClick}\r\n                    readOnly\r\n                />\r\n                <CopyButton onClick={copyToClipboard}>Copy</CopyButton>\r\n            </InputContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default InviteLink;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const Container = styled(motion.div)<{ position?: string }>`\r\n    position: ${(props) => props.position || 'fixed'};\r\n    left: 0;\r\n    right: 0;\r\n    bottom: -3px;\r\n    display: flex;\r\n    box-shadow: 0 -2px 10px -1px rgb(0 0 0 / 30%);\r\n    width: 100%;\r\n    z-index: 4;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        margin: auto;\r\n        width: fit-content;\r\n        bottom: 1rem;\r\n    }\r\n`;\r\n","import React, { ReactNode } from 'react';\r\nimport { Container } from './style';\r\n\r\ninterface Props {\r\n    position: string;\r\n    children: ReactNode | ReactNode[];\r\n}\r\n\r\nconst animation = {\r\n    initial: {\r\n        y: 75,\r\n        opacity: 0,\r\n    },\r\n    animate: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.5,\r\n            delay: 1,\r\n        },\r\n    },\r\n};\r\n\r\nconst FixedContainer = ({ position, children }: Props) => {\r\n    return (\r\n        <Container variants={animation} initial=\"initial\" animate=\"animate\" position={position}>\r\n            {children}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FixedContainer;\r\n","import { FaCrown, FaUserAlt, FaUserCheck } from 'react-icons/fa';\r\nimport { RiCheckboxCircleFill, RiCheckboxCircleLine, RiMovieFill } from 'react-icons/ri';\r\nimport { SiTinder } from 'react-icons/si';\r\nimport styled, { css } from 'styled-components';\r\nimport { Button } from '../../../styles/index';\r\n\r\nexport const FixedContainer = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: -3px;\r\n    display: flex;\r\n    box-shadow: 0 -2px 10px -1px rgb(0 0 0 / 30%);\r\n    width: 100%;\r\n    z-index: 4;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        margin: auto;\r\n        width: fit-content;\r\n        bottom: 1rem;\r\n    }\r\n`;\r\n\r\nconst iconStyles = css`\r\n    font-size: 1.25rem;\r\n    margin-right: 1rem;\r\n    width: 20px;\r\n`;\r\n\r\nexport const UserCheck = styled(FaUserCheck)`\r\n    ${iconStyles}\r\n    margin-right: 0.5rem;\r\n`;\r\n\r\nexport const FillCheckbox = styled(RiCheckboxCircleFill)`\r\n    ${iconStyles}\r\n`;\r\nexport const EmptyCheckbox = styled(RiCheckboxCircleLine)`\r\n    ${iconStyles}\r\n`;\r\n\r\nexport const TinderIcon = styled(SiTinder)`\r\n    ${iconStyles}\r\n`;\r\nexport const PlayIcon = styled(RiMovieFill)`\r\n    ${iconStyles}\r\n`;\r\n\r\nexport const CrownIcon = styled(FaCrown)`\r\n    ${iconStyles}\r\n`;\r\n\r\nexport const UserIcon = styled(FaUserAlt)`\r\n    ${iconStyles}\r\n    font-size: 1rem;\r\n`;\r\n\r\nexport const MainButton = styled(Button)<{ disable?: boolean }>`\r\n    background: ${(props) => (props.disable ? '#808080' : 'var(--accent-purple)')};\r\n    color: ${(props) => (props.disable ? '#cbc8c8' : 'var(--white)')};\r\n    transition: all ease-in 250ms;\r\n    flex: 70%;\r\n    outline: none;\r\n    border-radius: 0;\r\n    border-top-right-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n\r\n    & ${PlayIcon} {\r\n        transition: all ease-in 250ms;\r\n        color: ${(props) => props.disable && '#a9a9a9'};\r\n    }\r\n\r\n    @media screen and (min-width: 600px) {\r\n        padding: 1rem 2rem;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nexport const ToggleReadyButton = styled(MainButton)`\r\n    background: var(--blue-active);\r\n`;\r\n\r\nexport const ReadyButton = styled(Button)`\r\n    flex: 30%;\r\n    background: var(--blue-dark-bg);\r\n    outline: none;\r\n    border-radius: 0;\r\n    border-top-left-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n\r\n    span {\r\n        width: 20px;\r\n    }\r\n`;\r\n\r\nexport const NoParticipants = styled.p`\r\n    margin-bottom: 1rem;\r\n    color: var(--white-muted);\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n    padding: 0 1rem;\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n        margin-bottom: 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    ul {\r\n        margin-bottom: 2rem;\r\n        & > * + * {\r\n            margin-top: 1rem;\r\n        }\r\n    }\r\n\r\n    li {\r\n        list-style: none;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        font-size: 1.125rem;\r\n\r\n        div {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        p {\r\n            text-transform: uppercase;\r\n            letter-spacing: 1px;\r\n            font-size: 0.875rem;\r\n            color: var(--white-muted);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ReadyText = styled.p`\r\n    line-height: 1.3;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nexport const StartButton = styled(Button)`\r\n    background: var(--accent-purple);\r\n    padding: 0.75rem 1rem;\r\n    width: 100%;\r\n    margin-top: 2rem;\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { useHistory } from 'react-router-dom';\r\nimport FixedContainer from '../../../components/FixedContainer';\r\nimport Modal from '../../../components/Modal';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { startSwiper, toggleReady } from '../../../sockets/emitters';\r\nimport { ToastType, useToast } from '../../../utils';\r\nimport {\r\n    CrownIcon,\r\n    EmptyCheckbox,\r\n    FillCheckbox,\r\n    MainButton,\r\n    ModalContent,\r\n    PlayIcon,\r\n    ReadyButton,\r\n    StartButton,\r\n    ToggleReadyButton,\r\n    UserCheck,\r\n    UserIcon\r\n} from './style';\r\n\r\nconst ActionButton = () => {\r\n    const { room } = useRoom();\r\n    const { user } = useUser();\r\n    const history = useHistory();\r\n    const [groupModalVisible, setGroupModalVisible] = useState(false);\r\n    const [swipeModalVisible, setSwipeModalVisible] = useState(false);\r\n    const owner = room.participants.find((p) => p.id === room.ownerId);\r\n    const isUserReady = room.participants.find((p) => p.id === user.id)?.ready;\r\n    const participantsReady = room.participants.filter((p) => p.ready && p.id !== room.ownerId);\r\n    const disableSwiping = !room.movies.length || !participantsReady.length;\r\n    const toastId = useRef<string>();\r\n    const timeoutId = useRef<number>();\r\n\r\n    const toggleReadyHandler = () => {\r\n        toast.dismiss(toastId.current);\r\n        clearTimeout(timeoutId.current);\r\n        toggleReady({ roomId: room.roomId as string, userId: user.id }, (res) => {\r\n            if (res.success && !isUserReady) {\r\n                useToast({ type: ToastType.Success, message: 'The room owner has been notified.', duration: 2500 });\r\n                timeoutId.current = window.setTimeout(\r\n                    () =>\r\n                        (toastId.current = useToast({\r\n                            type: ToastType.Loading,\r\n                            message: 'Waiting for room owner to start.',\r\n                            duration: 99999,\r\n                        })),\r\n                    2500,\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    const confirmSwipeAction = () => {\r\n        startSwiper({ roomId: room.roomId as string });\r\n        history.replace(`/swiper/${room.roomId}`);\r\n    };\r\n\r\n    const startSwiping = () => {\r\n        if (!disableSwiping) {\r\n            setSwipeModalVisible(true);\r\n            return;\r\n        }\r\n\r\n        if (room.participants.length <= 1) {\r\n            useToast({ type: ToastType.Custom, message: 'Invite participants to start.' });\r\n            return;\r\n        }\r\n\r\n        if (!room.movies.length) {\r\n            useToast({ type: ToastType.Custom, message: 'Add movies to your list to start swiping.' });\r\n            return;\r\n        }\r\n\r\n        if (!participantsReady.length) {\r\n            useToast({ type: ToastType.Custom, message: 'Wait for participants to be ready.' });\r\n        }\r\n    };\r\n\r\n    const checkReady = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.stopPropagation();\r\n        setGroupModalVisible(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (toastId.current) {\r\n                toast.dismiss(toastId.current);\r\n                toastId.current = undefined;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <FixedContainer position=\"fixed\">\r\n                <ReadyButton onClick={checkReady}>\r\n                    <UserCheck /> <span>{participantsReady.length}</span>\r\n                </ReadyButton>\r\n                {owner && owner.id === user.id ? (\r\n                    <MainButton onClick={startSwiping} disable={disableSwiping}>\r\n                        <PlayIcon />\r\n                        Start Swiping\r\n                    </MainButton>\r\n                ) : (\r\n                    <ToggleReadyButton onClick={toggleReadyHandler}>\r\n                        {isUserReady ? <FillCheckbox /> : <EmptyCheckbox />}\r\n                        Ready To Swipe\r\n                    </ToggleReadyButton>\r\n                )}\r\n            </FixedContainer>\r\n            <Modal visible={groupModalVisible} onClose={() => setGroupModalVisible(false)} height={300} maxWidth={400}>\r\n                <ModalContent>\r\n                    <h2>Participants</h2>\r\n                    <ul>\r\n                        {room.participants.map((p) => {\r\n                            if (p.id === room.ownerId) {\r\n                                return (\r\n                                    <li key={p.id}>\r\n                                        <div>\r\n                                            <CrownIcon />\r\n                                            {p.name}\r\n                                        </div>\r\n                                        <p>Owner</p>\r\n                                    </li>\r\n                                );\r\n                            }\r\n\r\n                            return (\r\n                                <li key={p.id}>\r\n                                    <div>\r\n                                        <UserIcon /> {p.name}\r\n                                    </div>\r\n                                    {p.ready && <p>Ready</p>}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </ModalContent>\r\n            </Modal>\r\n            <Modal visible={swipeModalVisible} onClose={() => setSwipeModalVisible(false)} height={280} maxWidth={400}>\r\n                <ModalContent>\r\n                    <h2>Start Swiping</h2>\r\n                    <ol>\r\n                        <li>This action will move everyone in the group to the swiping stage.</li>\r\n                        <br />\r\n                        <li>Once in this stage, group members won&apos;t be allowed to go back and add more movies.</li>\r\n                    </ol>\r\n                    <StartButton onClick={confirmSwipeAction}>Start</StartButton>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActionButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const TabBar = styled.nav`\r\n    display: flex;\r\n    margin-bottom: 2rem;\r\n\r\n    & > * {\r\n        flex: 1;\r\n    }\r\n`;\r\n\r\nexport const Tab = styled.button<{ selected: boolean }>`\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-size: 0.875rem;\r\n    font-weight: ${(props) => (props.selected ? 500 : 400)};\r\n    border-bottom: ${(props) => !props.selected && '2px solid var(--blue-active)'};\r\n    background: ${(props) => props.selected && 'var(--blue-active)'};\r\n    color: var(--white);\r\n    padding: 1rem;\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n`;\r\n\r\nexport const TabContent = styled.section<{ show: boolean }>`\r\n    display: ${(props) => (props.show ? 'block' : 'none')};\r\n`;\r\n","import React, { ReactNode, useState } from 'react';\r\nimport { Tab, TabBar, TabContent } from './style';\r\n\r\ninterface Props {\r\n    tabs: string[];\r\n    children: ReactNode[];\r\n}\r\n\r\nconst Tabs = ({ tabs, children }: Props) => {\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const changeTab = (index: number) => {\r\n        setCurrentTab(index);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TabBar>\r\n                {tabs.map((tabName, index) => (\r\n                    <Tab key={index} selected={currentTab === index} onClick={(e) => changeTab(index)}>\r\n                        {tabName}\r\n                    </Tab>\r\n                ))}\r\n            </TabBar>\r\n\r\n            {children.map((component, index) => (\r\n                <TabContent key={index} show={currentTab === index}>\r\n                    {component}\r\n                </TabContent>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tabs;\r\n","export const genres = [\r\n    {\r\n        id: 28,\r\n        name: 'Action',\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Adventure',\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'Animation',\r\n    },\r\n    {\r\n        id: 35,\r\n        name: 'Comedy',\r\n    },\r\n    {\r\n        id: 80,\r\n        name: 'Crime',\r\n    },\r\n    {\r\n        id: 99,\r\n        name: 'Documentary',\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'Drama',\r\n    },\r\n    {\r\n        id: 10751,\r\n        name: 'Family',\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Fantasy',\r\n    },\r\n    {\r\n        id: 36,\r\n        name: 'History',\r\n    },\r\n    {\r\n        id: 27,\r\n        name: 'Horror',\r\n    },\r\n    {\r\n        id: 10402,\r\n        name: 'Music',\r\n    },\r\n    {\r\n        id: 9648,\r\n        name: 'Mystery',\r\n    },\r\n    {\r\n        id: 10749,\r\n        name: 'Romance',\r\n    },\r\n    {\r\n        id: 878,\r\n        name: 'Science Fiction',\r\n    },\r\n    {\r\n        id: 10770,\r\n        name: 'TV Movie',\r\n    },\r\n    {\r\n        id: 53,\r\n        name: 'Thriller',\r\n    },\r\n    {\r\n        id: 10752,\r\n        name: 'War',\r\n    },\r\n    {\r\n        id: 37,\r\n        name: 'Western',\r\n    },\r\n];\r\n","import { motion } from 'framer-motion';\r\nimport { HiMinus, HiOutlinePlus } from 'react-icons/hi';\r\nimport { RiInformationLine } from 'react-icons/ri';\r\nimport styled from 'styled-components';\r\nimport { Button } from './../../../styles/index';\r\nimport { Genre } from './../MovieDetail/style';\r\n\r\nexport const Item = styled.article`\r\n    display: flex;\r\n    position: relative;\r\n    height: 250px;\r\n    cursor: pointer;\r\n\r\n    @media screen and (min-width: 800px) {\r\n        height: 300px;\r\n    }\r\n`;\r\n\r\nexport const Image = styled(motion.img)`\r\n    max-width: 30%;\r\n    object-fit: cover;\r\n    display: block;\r\n    border-radius: 4px;\r\n    margin-right: 1rem;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        margin-right: 2rem;\r\n    }\r\n`;\r\n\r\nexport const InfoContainer = styled.article`\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background: linear-gradient(\r\n            to top,\r\n            hsl(210, 38%, 15%) 0%,\r\n            hsla(210, 38%, 15%, 0.941) 25%,\r\n            hsla(210, 38%, 15%, 0.881) 28%,\r\n            hsla(210, 38%, 15%, 0.819) 32%,\r\n            hsla(210, 38%, 15%, 0.756) 36%,\r\n            hsla(210, 38%, 15%, 0.692) 41.3%,\r\n            hsla(210, 38%, 15%, 0.626) 45.7%,\r\n            hsla(210, 38%, 15%, 0.56) 49.6%,\r\n            hsla(210, 38%, 15%, 0.492) 53.3%,\r\n            hsla(210, 38%, 15%, 0.424) 57.2%,\r\n            hsla(210, 38%, 15%, 0.355) 61.4%,\r\n            hsla(210, 38%, 15%, 0.285) 66.4%,\r\n            hsla(210, 38%, 15%, 0.214) 72.4%,\r\n            hsla(210, 38%, 15%, 0.143) 79.8%,\r\n            hsla(210, 38%, 15%, 0.072) 88.9%,\r\n            hsla(210, 38%, 15%, 0) 100%\r\n        );\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    font-size: 1.25rem;\r\n    margin-bottom: 0.5rem;\r\n\r\n    @media screen and (min-width: 800px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\nexport const GenreContainer = styled.div`\r\n    display: flex;\r\n    margin-bottom: 0.5rem;\r\n\r\n    @media screen and (min-width: 800px) {\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\nexport const SmallGenre = styled(Genre)`\r\n    font-size: 0.875rem;\r\n    margin-right: 0.5rem;\r\n\r\n    @media screen and (min-width: 800px) {\r\n        font-size: 1rem;\r\n        margin-right: 1rem;\r\n    }\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n    line-height: 1.3;\r\n    position: relative;\r\n\r\n    /* &:after {\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background: linear-gradient(\r\n            to top,\r\n            hsl(210, 38%, 15%) 0%,\r\n            hsla(210, 38%, 15%, 1) 18.7%,\r\n            hsla(210, 38%, 15%, 1) 34.8%,\r\n            hsla(210, 38%, 15%, 1) 48.6%,\r\n            hsla(210, 38%, 15%, 1) 60.3%,\r\n            hsla(210, 38%, 15%, 1) 69.9%,\r\n            hsla(210, 38%, 15%, 0.626) 77.8%,\r\n            hsla(210, 38%, 15%, 0.562) 84.1%,\r\n            hsla(210, 38%, 15%, 0.497) 89%,\r\n            hsla(210, 38%, 15%, 0.431) 92.7%,\r\n            hsla(210, 38%, 15%, 0.364) 95.4%,\r\n            hsla(210, 38%, 15%, 0.295) 97.2%,\r\n            hsla(210, 38%, 15%, 0.224) 98.4%,\r\n            hsla(210, 38%, 15%, 0.151) 99.2%,\r\n            hsla(210, 38%, 15%, 0.077) 99.6%,\r\n            hsla(210, 38%, 15%, 0) 100%\r\n        );\r\n\r\n        linear-gradient(\r\n            to bottom,\r\n            hsla(210, 38%, 15%, 0) 0%,\r\n            hsla(210, 38%, 15%, 0.106) 8.1%,\r\n            hsla(210, 38%, 15%, 0.2) 14.7%,\r\n            hsla(210, 38%, 15%, 0.284) 20%,\r\n            hsla(210, 38%, 15%, 0.358) 24.4%,\r\n            hsla(210, 38%, 15%, 0.426) 28.1%,\r\n            hsla(210, 38%, 15%, 0.487) 31.6%,\r\n            hsla(210, 38%, 15%, 0.544) 35.1%,\r\n            hsla(210, 38%, 15%, 0.598) 38.8%,\r\n            hsla(210, 38%, 15%, 0.649) 43.2%,\r\n            hsla(210, 38%, 15%, 0.701) 48.5%,\r\n            hsla(210, 38%, 15%, 0.753) 55.1%,\r\n            hsla(210, 38%, 15%, 0.808) 63.2%,\r\n            hsla(210, 38%, 15%, 0.866) 73.2%,\r\n            hsla(210, 38%, 15%, 0.93) 85.3%,\r\n            hsl(210, 38%, 15%) 100%\r\n        );\r\n    } */\r\n`;\r\n\r\nexport const SeeMoreButton = styled(Button)`\r\n    font-size: 1rem;\r\n    width: 100%;\r\n    padding: 0.5rem 1rem;\r\n    background: #445970;\r\n    position: absolute;\r\n    bottom: 0rem;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    z-index: 1;\r\n`;\r\n\r\nexport const ButtonContainer = styled.button<{ backgroundColor: string }>`\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: ${(props) => props.backgroundColor || '#4c7fbd'};\r\n    border-radius: 50%;\r\n    padding: 0.25rem;\r\n    box-shadow: 0 10px 20px rgb(0 0 0 / 19%), 0 6px 6px rgb(0 0 0 / 23%);\r\n    cursor: pointer;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const PlusIcon = styled(HiOutlinePlus)`\r\n    font-size: 2rem;\r\n`;\r\n\r\nexport const MinusIcon = styled(HiMinus)`\r\n    font-size: 2rem;\r\n`;\r\n\r\nexport const InfoIcon = styled(RiInformationLine)`\r\n    font-size: 1.125rem;\r\n    margin-right: 0.5rem;\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useMoviePreview } from '../../../context/MoviePreviewContext';\r\nimport useMovieManager from '../../../hooks/useMovieManager';\r\nimport { AddedMovie } from '../../../types/movies';\r\nimport { generateImageUrl } from '../../../utils';\r\nimport { genres as genreObjects } from '../MovieSearch/genres';\r\nimport {\r\n    ButtonContainer,\r\n    GenreContainer,\r\n    Image,\r\n    InfoContainer,\r\n    InfoIcon,\r\n    Item,\r\n    MinusIcon,\r\n    Overview,\r\n    PlusIcon,\r\n    SeeMoreButton,\r\n    SmallGenre,\r\n    Title,\r\n} from './styled';\r\n\r\ninterface Props {\r\n    movie: AddedMovie;\r\n    allowActions: boolean;\r\n}\r\n\r\nconst MovieListItem = ({ movie, allowActions }: Props) => {\r\n    const { setMoviePreview } = useMoviePreview();\r\n    const history = useHistory();\r\n    const { movieInList, movieActionHandler, buttonBackgroundColor } = useMovieManager(movie);\r\n    const genres = movie.genre_ids.map((genreId) => genreObjects.find((g) => g.id === genreId));\r\n\r\n    const onMovieAction = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        e.stopPropagation();\r\n        movieActionHandler();\r\n    };\r\n\r\n    const onMovieClick = () => {\r\n        const { pathname } = history.location;\r\n        if (pathname.includes(movie.id.toString())) {\r\n            setMoviePreview(null);\r\n        } else {\r\n            setMoviePreview(movie);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Item onClick={onMovieClick} role=\"button\">\r\n            {allowActions && (\r\n                <ButtonContainer onClick={onMovieAction} backgroundColor={buttonBackgroundColor}>\r\n                    {!movieInList && <PlusIcon />}\r\n                    {movieInList && <MinusIcon />}\r\n                </ButtonContainer>\r\n            )}\r\n            <Image src={generateImageUrl(movie.poster_path, 'w342')} alt={movie.title} />{' '}\r\n            <InfoContainer>\r\n                <Title>{movie.title}</Title>\r\n                <GenreContainer>\r\n                    {genres?.slice(0, 2).map((genre) => (\r\n                        <SmallGenre key={genre?.id}>{genre?.name}</SmallGenre>\r\n                    ))}\r\n                </GenreContainer>\r\n                <Overview>{movie.overview}</Overview>\r\n                <SeeMoreButton onClick={onMovieClick}>\r\n                    <InfoIcon />\r\n                    See More\r\n                </SeeMoreButton>\r\n            </InfoContainer>\r\n        </Item>\r\n    );\r\n};\r\n\r\nexport default MovieListItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.section`\r\n    display: grid;\r\n    gap: 2rem;\r\n    margin-bottom: 4rem;\r\n\r\n    & > *:not(:last-child) {\r\n        padding-bottom: 2rem;\r\n        border-bottom: 1px solid hsl(212deg 22% 43% / 38%);\r\n    }\r\n\r\n    @media screen and (min-width: 800px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        gap: 4rem;\r\n\r\n        & > *:not(:last-child) {\r\n            padding-bottom: 0;\r\n            border-bottom: none;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Empty = styled.p`\r\n    text-align: center;\r\n\r\n    @media (min-width: 700px) {\r\n        font-size: 1.25rem;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { AddedMovie } from '../../../types/movies';\r\nimport MovieListItem from '../MovieListItem';\r\nimport { Empty, List } from './styled';\r\n\r\ninterface Props {\r\n    movies: AddedMovie[];\r\n    allowActions: boolean;\r\n}\r\n\r\nconst MovieList = ({ movies, allowActions }: Props) => {\r\n    if (!movies.length) {\r\n        return <Empty>No movies in the list.</Empty>;\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {movies.map((movie) => (\r\n                <MovieListItem key={movie.id} movie={movie} allowActions={allowActions} />\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default MovieList;\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { MovieResponse } from '../types/movies';\r\n\r\ninterface Props {\r\n    genres: number[];\r\n    movieQuery: string;\r\n}\r\n\r\ninterface FetchedMovies {\r\n    query: MovieResponse;\r\n    genres: MovieResponse;\r\n}\r\n\r\nconst emptyResponse: MovieResponse = {\r\n    page: 0,\r\n    results: [],\r\n    total_results: 0,\r\n    total_pages: 0,\r\n};\r\n\r\nconst useFetchMovies = ({ genres, movieQuery }: Props) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<true | null>(null);\r\n    const [movies, setMovies] = useState<FetchedMovies>({ query: emptyResponse, genres: emptyResponse });\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    const fetchMovieQuery = async (url: string) => {\r\n        try {\r\n            const res = await axios.get(url, {\r\n                cancelToken: cancelToken.token,\r\n            });\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        } catch (error) {\r\n            cancelToken.cancel('Error in try catch block.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            if (movieQuery) {\r\n                try {\r\n                    setLoading(true);\r\n                    const res = await axios.get(`/movies/query/${movieQuery}`, {\r\n                        cancelToken: cancelToken.token,\r\n                    });\r\n                    if (res.status === 200) {\r\n                        setMovies({ ...movies, query: res.data });\r\n                    }\r\n                    setLoading(false);\r\n                } catch (error) {\r\n                    cancelToken.cancel('Error in try catch block.');\r\n                    setError(true);\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetch();\r\n\r\n        return () => {\r\n            cancelToken.cancel('Component got unmounted');\r\n        };\r\n    }, [movieQuery]);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const res = await axios.post('/movies/genres', {\r\n                    genres,\r\n                    cancelToken: cancelToken.token,\r\n                });\r\n\r\n                if (res.status === 200) {\r\n                    setMovies({ ...movies, genres: res.data });\r\n                }\r\n                setLoading(false);\r\n            } catch (error) {\r\n                cancelToken.cancel('Error in try catch block.');\r\n                setError(true);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetch();\r\n\r\n        return () => {\r\n            cancelToken.cancel('Component got unmounted');\r\n        };\r\n    }, [genres]);\r\n\r\n    return { loading, error, movies };\r\n};\r\n\r\nexport default useFetchMovies;\r\n","import { HiOutlinePlus } from 'react-icons/hi';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    border-radius: 4px;\r\n    background: var(--blue-active);\r\n    position: relative;\r\n`;\r\n\r\nexport const ButtonContainer = styled.button`\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: hsl(213deg 40% 49%);\r\n    border-radius: 50%;\r\n    padding: 0.25rem;\r\n    box-shadow: 0 10px 20px rgb(0 0 0 / 19%), 0 6px 6px rgb(0 0 0 / 23%);\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const PlusIcon = styled(HiOutlinePlus)`\r\n    font-size: 2rem;\r\n`;\r\n","import React from 'react';\r\nimport { ButtonContainer, Container, PlusIcon } from './style';\r\n\r\nconst MovieCardSkeleton = () => {\r\n    return (\r\n        <Container>\r\n            <ButtonContainer>\r\n                <PlusIcon />\r\n            </ButtonContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MovieCardSkeleton;\r\n","import { motion } from 'framer-motion';\r\nimport { HiMinus, HiOutlinePlus } from 'react-icons/hi';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.article`\r\n    position: relative;\r\n    border-radius: 4px;\r\n    height: 100%;\r\n`;\r\n\r\nexport const Card = styled(motion.button)<{ zIndex: number }>`\r\n    height: 100% !important;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    z-index: ${(props) => props.zIndex || 0};\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background: linear-gradient(\r\n            to bottom,\r\n            hsla(0, 0%, 0%, 0) 0%,\r\n            hsla(0, 0%, 0%, 0.041) 7%,\r\n            hsla(0, 0%, 0%, 0.082) 13.5%,\r\n            hsla(0, 0%, 0%, 0.124) 19.4%,\r\n            hsla(0, 0%, 0%, 0.166) 25%,\r\n            hsla(0, 0%, 0%, 0.208) 30.4%,\r\n            hsla(0, 0%, 0%, 0.251) 35.6%,\r\n            hsla(0, 0%, 0%, 0.295) 40.9%,\r\n            hsla(0, 0%, 0%, 0.339) 46.4%,\r\n            hsla(0, 0%, 0%, 0.385) 52.1%,\r\n            hsla(0, 0%, 0%, 0.431) 58.3%,\r\n            hsla(0, 0%, 0%, 0.479) 65%,\r\n            hsla(0, 0%, 0%, 0.527) 72.4%,\r\n            hsla(0, 0%, 0%, 0.577) 80.6%,\r\n            hsla(0, 0%, 0%, 0.628) 89.8%,\r\n            hsla(0, 0%, 0%, 0.68) 100%\r\n        );\r\n        z-index: 1;\r\n    }\r\n`;\r\n\r\nexport const ContentContainer = styled(motion.div)`\r\n    height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Image = styled(motion.img)`\r\n    border-radius: 4px;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: block;\r\n    object-fit: cover;\r\n    z-index: 0;\r\n`;\r\n\r\nexport const Title = styled(motion.h3)`\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    margin-top: auto;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n    background: #00000038;\r\n    background: linear-gradient(\r\n        to bottom,\r\n        hsla(0, 0%, 0%, 0) 0%,\r\n        hsla(0, 0%, 0%, 0.007) 7.9%,\r\n        hsla(0, 0%, 0%, 0.028) 15%,\r\n        hsla(0, 0%, 0%, 0.062) 21.4%,\r\n        hsla(0, 0%, 0%, 0.105) 27.3%,\r\n        hsla(0, 0%, 0%, 0.158) 32.8%,\r\n        hsla(0, 0%, 0%, 0.218) 38.1%,\r\n        hsla(0, 0%, 0%, 0.284) 43.3%,\r\n        hsla(0, 0%, 0%, 0.354) 48.5%,\r\n        hsla(0, 0%, 0%, 0.427) 54%,\r\n        hsla(0, 0%, 0%, 0.5) 59.9%,\r\n        hsla(0, 0%, 0%, 0.574) 66.2%,\r\n        hsla(0, 0%, 0%, 0.645) 73.3%,\r\n        hsla(0, 0%, 0%, 0.712) 81.2%,\r\n        hsla(0, 0%, 0%, 0.775) 90%,\r\n        hsla(0, 0%, 0%, 0.83) 100%\r\n    );\r\n    z-index: 1;\r\n`;\r\n\r\nexport const ButtonContainer = styled.button<{ backgroundColor: string }>`\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: ${(props) => props.backgroundColor || '#4c7fbd'};\r\n    border-radius: 50%;\r\n    padding: 0.25rem;\r\n    box-shadow: 0 10px 20px rgb(0 0 0 / 19%), 0 6px 6px rgb(0 0 0 / 23%);\r\n    cursor: pointer;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const PlusIcon = styled(HiOutlinePlus)`\r\n    font-size: 2rem;\r\n`;\r\n\r\nexport const MinusIcon = styled(HiMinus)`\r\n    font-size: 2rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Movie } from '../../../../../server/src/types/movies';\r\nimport { useMoviePreview } from '../../../context/MoviePreviewContext';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport useMovieManager from '../../../hooks/useMovieManager';\r\nimport { generateImageUrl } from '../../../utils';\r\nimport { ButtonContainer, Card, Container, ContentContainer, Image, MinusIcon, PlusIcon, Title } from './styled';\r\n\r\ninterface Props {\r\n    movie: Movie;\r\n}\r\n\r\nconst MovieCard = ({ movie }: Props) => {\r\n    const history = useHistory();\r\n    const { setMoviePreview: setMovieDetail } = useMoviePreview();\r\n    const { room } = useRoom();\r\n    const [zIndex, setZIndex] = useState(0);\r\n    const imageUrl = generateImageUrl(movie.poster_path, 'w342');\r\n    const { movieActionHandler, buttonBackgroundColor, movieInList } = useMovieManager(movie);\r\n\r\n    const onMovieClick = () => {\r\n        const currPathname = history.location.pathname;\r\n        if (currPathname.includes(movie.id.toString())) {\r\n            history.push(`/selection/${room.roomId}`);\r\n        } else {\r\n            setZIndex(2);\r\n            setMovieDetail(movie);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Card onClick={onMovieClick} layoutId={`image-${movie.id}`} zIndex={zIndex}>\r\n                <ContentContainer>\r\n                    <Image src={imageUrl} alt={`Movie poster for ${movie.title}.`} />\r\n                    <Title>{movie.title}</Title>\r\n                </ContentContainer>\r\n            </Card>\r\n            <ButtonContainer onClick={movieActionHandler} backgroundColor={buttonBackgroundColor}>\r\n                {!movieInList && <PlusIcon />}\r\n                {movieInList && <MinusIcon />}\r\n            </ButtonContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MovieCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const Gallery = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n    grid-gap: 0.5rem;\r\n\r\n    & > * {\r\n        min-height: 300px;\r\n    }\r\n\r\n    @media screen and (min-width: 700px) {\r\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n\r\n        & > * {\r\n            min-height: 300px;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport MovieCardSkeleton from '../../../components/MovieCardSkeleton';\r\nimport { MovieResponse } from '../../../types/movies';\r\nimport MovieCard from '../MovieCard';\r\nimport { Gallery } from './style';\r\n\r\ninterface Props {\r\n    movies: MovieResponse;\r\n    loading: boolean;\r\n}\r\n\r\nconst MovieGallery = ({ movies, loading }: Props) => {\r\n    const moviesOnDisplay = movies.results || [];\r\n\r\n    if (loading) {\r\n        return (\r\n            <Gallery>\r\n                {Array.from(Array(20).keys()).map((n, index) => (\r\n                    <MovieCardSkeleton key={index} />\r\n                ))}\r\n            </Gallery>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Gallery>\r\n            {moviesOnDisplay.map((movie) => (\r\n                <MovieCard key={movie.id} movie={movie} />\r\n            ))}\r\n        </Gallery>\r\n    );\r\n};\r\n\r\nexport default MovieGallery;\r\n","import Select from 'react-select';\r\nimport styled from 'styled-components';\r\n\r\nexport const FormField = styled.div<{ show: boolean }>`\r\n    display: ${(props) => (props.show ? 'flex' : 'none')};\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n\r\n    label {\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    input {\r\n        padding: 0.5rem;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    &:last-of-type {\r\n        margin-bottom: 2rem;\r\n    }\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n    z-index: 4;\r\n`;\r\n\r\nexport const colorStyles = {\r\n    control: (styles: any) => ({ ...styles, backgroundColor: 'white', color: 'var(--blue-dark-bg)' }),\r\n    option: (styles: { [x: string]: any }, { data, isDisabled, isFocused, isSelected }: any) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: 'white',\r\n            color: 'var(--blue-dark-bg)',\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n        };\r\n    },\r\n    multiValue: (styles: any, { data }: any) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: 'white',\r\n        };\r\n    },\r\n    multiValueLabel: (styles: any, { data }: any) => ({\r\n        ...styles,\r\n        color: 'white',\r\n        backgroundColor: 'var(--blue-dark-bg)',\r\n        padding: '4px 8px',\r\n        borderRadius: '4px',\r\n    }),\r\n    multiValueRemove: (styles: any, { data }: any) => ({\r\n        ...styles,\r\n        color: data.color,\r\n        ':hover': {\r\n            backgroundColor: 'white',\r\n            color: 'var(--blue-dark-bg)',\r\n        },\r\n    }),\r\n};\r\n","import React, { useState } from 'react';\r\nimport { OptionsType } from 'react-select';\r\nimport useFetchMovies from '../../../hooks/useFetchMovies';\r\nimport { Genre } from '../../../types/movies';\r\nimport MovieGallery from '../MovieGallery';\r\nimport { genres as allGenres } from './genres';\r\nimport { colorStyles, FormField, StyledSelect } from './style';\r\n\r\nconst MovieSearch = () => {\r\n    const [genres, setGenres] = useState<number[]>([]);\r\n    const [movieQuery, setMovieQuery] = useState('');\r\n    const { loading, error, movies } = useFetchMovies({ genres, movieQuery });\r\n    const genreOptions = allGenres.map((genre: Genre) => ({ value: genre.id, label: genre.name }));\r\n    const moviesOnDisplay = movieQuery ? movies.query : movies.genres;\r\n\r\n    const onQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setMovieQuery(e.target.value);\r\n    };\r\n\r\n    const onGenreChange = (\r\n        value: OptionsType<{\r\n            value: number;\r\n            label: string;\r\n        }>,\r\n    ) => {\r\n        setGenres(value.map((genre) => genre.value));\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            {' '}\r\n            <form>\r\n                <FormField show={true}>\r\n                    <label>Search by name</label>\r\n                    <input type=\"text\" value={movieQuery} onChange={onQueryChange} />\r\n                </FormField>\r\n                <FormField show={movieQuery === ''}>\r\n                    <label>Search by genre</label>\r\n                    <StyledSelect\r\n                        isMulti\r\n                        name=\"genres\"\r\n                        options={genreOptions}\r\n                        styles={colorStyles}\r\n                        onChange={onGenreChange}\r\n                    />\r\n                </FormField>\r\n            </form>\r\n            <MovieGallery movies={moviesOnDisplay} loading={loading} />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MovieSearch;\r\n","import React from 'react';\r\nimport Tabs from '../../../components/Tabs';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport MovieList from '../MovieList';\r\nimport MovieSearch from '../MovieSearch';\r\n\r\nconst MovieSelection = () => {\r\n    const { room } = useRoom();\r\n    return (\r\n        <Tabs tabs={['Search', `Group List (${room.movies.length})`]}>\r\n            <MovieSearch />\r\n            <MovieList movies={room.movies} allowActions />\r\n        </Tabs>\r\n    );\r\n};\r\n\r\nexport default MovieSelection;\r\n","import styled from 'styled-components';\r\nimport { MaxWidthContainer } from '../../../styles';\r\n\r\nexport const Container = styled(MaxWidthContainer)`\r\n    margin-bottom: 2.5rem;\r\n`;\r\n","import React from 'react';\r\nimport InviteLink from '../../../components/InviteLink';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { FontWeight600, Subtitle, Title } from '../../../styles';\r\nimport ActionButton from '../ActionButton';\r\nimport MovieSelection from '../MovieSelection';\r\nimport { Container } from './style';\r\n\r\nconst ownerText = (\r\n    <>\r\n        Add movies you&apos;d want to watch. Once the list is complete and members are ready, click on &quot;\r\n        <FontWeight600>Start Swiping</FontWeight600>.&quot;\r\n    </>\r\n);\r\nconst participantText = (\r\n    <>\r\n        Add movies you&apos;d want to watch. Once you&apos;re ready to start, click on &quot;\r\n        <FontWeight600>Ready to Swipe</FontWeight600>.&quot;\r\n    </>\r\n);\r\n\r\nconst Selection = () => {\r\n    const { user } = useUser();\r\n    const { room } = useRoom();\r\n    const isOwner = room.ownerId === user.id;\r\n\r\n    return (\r\n        <Container>\r\n            <Title>Pick Your Movies</Title>\r\n            <Subtitle>{isOwner ? ownerText : participantText}</Subtitle>\r\n            <InviteLink />\r\n            <MovieSelection />\r\n            <ActionButton />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Selection;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { AddedMovie } from '../../../types/movies';\r\nimport MovieList from '../../selection/MovieList';\r\n\r\nconst Matches = () => {\r\n    const { room } = useRoom();\r\n    const { user } = useUser();\r\n\r\n    const matches = room.movies.reduce((matches: AddedMovie[], movie: AddedMovie) => {\r\n        const matched =\r\n            movie.swipes.find((swipe) => swipe.user.id === user.id && swipe.liked) &&\r\n            movie.swipes.find((swipe) => swipe.liked && swipe.user.id !== user.id);\r\n\r\n        if (matched) {\r\n            matches.push(movie);\r\n        }\r\n\r\n        return matches;\r\n    }, []);\r\n\r\n    return <MovieList movies={matches} allowActions={false} />;\r\n};\r\n\r\nexport default Matches;\r\n","import { motion } from 'framer-motion';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../../styles';\r\nimport { RiInformationLine } from 'react-icons/ri';\r\n\r\nexport const Container = styled.article`\r\n    margin: auto;\r\n    margin-bottom: 2.5rem;\r\n    max-width: 600px;\r\n    max-width: 350px;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nexport const Image = styled(motion.img)`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Title = styled(motion.h3)`\r\n    font-size: 1.25rem;\r\n    padding: 1.5rem 1rem 1rem;\r\n    border-radius: 4px;\r\n    margin-top: auto;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n    width: 100%;\r\n    text-transform: none;\r\n    background: var(--blue-dark);\r\n`;\r\n\r\nexport const PreviewButton = styled(Button)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 0;\r\n    background: hsl(211deg 43% 10%);\r\n    color: var(--white-muted);\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n`;\r\n\r\nexport const Details = styled.p`\r\n    width: 100%;\r\n    font-size: 0.875rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 0.5rem;\r\n    background: #2e3f52;\r\n    padding: 1rem;\r\n`;\r\n\r\nexport const ExpandIcon = styled(RiInformationLine)`\r\n    font-size: 1rem;\r\n    margin-right: 0.5rem;\r\n`;\r\n","import React from 'react';\r\nimport { useMoviePreview } from '../../../context/MoviePreviewContext';\r\nimport { AddedMovie } from '../../../types/movies';\r\nimport { generateImageUrl } from '../../../utils';\r\nimport { Container, Details, ExpandIcon, Image, PreviewButton, Title } from './style';\r\n\r\ninterface Props {\r\n    movie: AddedMovie;\r\n}\r\n\r\nconst SwipeItem = ({ movie }: Props) => {\r\n    const { setMoviePreview } = useMoviePreview();\r\n    const imageSrc = generateImageUrl(movie.poster_path, 'w500');\r\n\r\n    const showPreview = () => {\r\n        setMoviePreview(movie);\r\n    };\r\n\r\n    return (\r\n        <Container onClick={showPreview}>\r\n            <PreviewButton onClick={showPreview}>\r\n                <Title>{movie.title}</Title>\r\n                <Details>\r\n                    <ExpandIcon /> Details\r\n                </Details>\r\n            </PreviewButton>\r\n            <Image src={imageSrc} alt={movie.title}></Image>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SwipeItem;\r\n","import styled, { css } from 'styled-components';\r\nimport { Button } from '../../../styles';\r\nimport { RiCloseFill } from 'react-icons/ri';\r\nimport { HiHeart } from 'react-icons/hi';\r\n\r\nexport const LikeButton = styled(Button)`\r\n    background: var(--blue-active-90);\r\n    outline: none;\r\n    border-radius: 0;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        padding: 1rem 2rem;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nexport const DislikeButton = styled(Button)`\r\n    background: var(--accent-dark-90);\r\n    outline: none;\r\n    border-radius: 0;\r\n\r\n    @media screen and (min-width: 600px) {\r\n        padding: 1rem 2rem;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst iconStyles = css`\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nexport const LikeIcon = styled(HiHeart)`\r\n    ${iconStyles}\r\n    margin-right: 1rem;\r\n`;\r\n\r\nexport const DislikeIcon = styled(RiCloseFill)`\r\n    ${iconStyles}\r\n    margin-right: 0.5rem;\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SwiperCore, { A11y, EffectCoverflow, EffectFade, Pagination } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n// Swiper imports\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport { CoverflowEffectOptions } from 'swiper/types/components/effect-coverflow';\r\nimport { PaginationOptions } from 'swiper/types/components/pagination';\r\nimport FixedContainer from '../../../components/FixedContainer';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { swipeMovie } from '../../../sockets/emitters';\r\nimport { AddedMovie } from '../../../types/movies';\r\nimport SwipeItem from '../SwipeItem';\r\nimport { DislikeButton, DislikeIcon, LikeButton, LikeIcon } from './style';\r\n\r\nSwiperCore.use([Pagination, A11y, EffectCoverflow, EffectFade]);\r\n\r\nconst coverFlowEffectProps: CoverflowEffectOptions = {\r\n    rotate: 50,\r\n    stretch: 0,\r\n    depth: 200,\r\n    modifier: 1,\r\n    slideShadows: false,\r\n};\r\n\r\nconst paginationProps: PaginationOptions = {\r\n    clickable: false,\r\n    type: 'progressbar',\r\n    progressbarFillClass: 'swiper-pagination-progressbar-fill',\r\n};\r\n\r\ninterface MovieToSwipe extends AddedMovie {\r\n    swiped: boolean;\r\n}\r\n\r\nconst SwipeArea = () => {\r\n    const history = useHistory();\r\n    const { room } = useRoom();\r\n    const { user } = useUser();\r\n    const [swiper, setSwiper] = useState<SwiperCore>();\r\n    const movies = useRef<MovieToSwipe[]>([]);\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    useEffect(() => {\r\n        movies.current = room.movies.map((movie) => ({ ...movie, swiped: false }));\r\n    }, [room.movies.length]);\r\n\r\n    const enableButtons = () => {\r\n        setDisabled(false);\r\n    };\r\n\r\n    const disableButtons = () => {\r\n        setDisabled(true);\r\n    };\r\n\r\n    const onLike = () => {\r\n        if (!swiper) {\r\n            return;\r\n        }\r\n\r\n        const nextIndex = swiper.activeIndex + 1;\r\n        swiper.slideTo(nextIndex);\r\n    };\r\n\r\n    const onDislike = () => {\r\n        if (!swiper) {\r\n            return;\r\n        }\r\n\r\n        const movieIndex = swiper.activeIndex - 1;\r\n        handleSwipeEmit({ index: movieIndex, liked: false });\r\n        const nextIndex = swiper.activeIndex + 1;\r\n        swiper.slideTo(nextIndex, 400);\r\n    };\r\n\r\n    const onSlideNextTransitionStart = (swiper: SwiperCore) => {\r\n        disableButtons();\r\n\r\n        /* Ignore slideNext on init */\r\n        if (!swiper || swiper.activeIndex === 1) {\r\n            return;\r\n        }\r\n\r\n        const movieIndex = swiper.previousIndex - 1;\r\n        handleSwipeEmit({ index: movieIndex, liked: true });\r\n\r\n        swiper.updateProgress();\r\n        swiper.update();\r\n    };\r\n\r\n    const onSlidePrevTransitionStart = (swiper: SwiperCore) => {\r\n        disableButtons();\r\n\r\n        if (!swiper) {\r\n            return;\r\n        }\r\n\r\n        const movieIndex = swiper.previousIndex - 1;\r\n        handleSwipeEmit({ index: movieIndex, liked: false });\r\n\r\n        const nextIndex = swiper.activeIndex + 2;\r\n        swiper.slideTo(nextIndex, 100);\r\n        swiper.update();\r\n        swiper.updateProgress();\r\n    };\r\n\r\n    const onSwiperInit = (swiper: SwiperCore) => {\r\n        const actualProgress = 1 / room.movies.length;\r\n        document.documentElement.style.setProperty('--swipe-progress', actualProgress.toString());\r\n        setSwiper(swiper);\r\n    };\r\n\r\n    const onProgress = (swiper: SwiperCore) => {\r\n        const actualProgress = (1 / room.movies.length) * swiper.activeIndex;\r\n        document.documentElement.style.setProperty('--swipe-progress', actualProgress.toString());\r\n    };\r\n\r\n    const handleSwipeEmit = ({ index, liked }: { index: number; liked: boolean }) => {\r\n        const movie = movies.current[index];\r\n        if (!movie || movie.swiped) {\r\n            return;\r\n        }\r\n\r\n        console.log(movie.title, liked);\r\n        movies.current = movies.current.map((m) => (m.id === movie.id ? { ...m, swiped: true } : m));\r\n        swipeMovie({ roomId: room.roomId as string, movieId: movie.id, liked, user });\r\n    };\r\n\r\n    const onSlideNextTransitionEnd = (swiper: SwiperCore) => {\r\n        enableButtons();\r\n\r\n        if (swiper.activeIndex > room.movies.length) {\r\n            history.push(`/results/${room.roomId}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!!room.movies.length && (\r\n                <Swiper\r\n                    onSlidePrevTransitionStart={onSlidePrevTransitionStart}\r\n                    onSlideNextTransitionStart={onSlideNextTransitionStart}\r\n                    onSlidePrevTransitionEnd={enableButtons}\r\n                    onSlideNextTransitionEnd={onSlideNextTransitionEnd}\r\n                    onProgress={onProgress}\r\n                    onInit={onSwiperInit}\r\n                    initialSlide={1}\r\n                    speed={400}\r\n                    observer\r\n                    grabCursor\r\n                    centeredSlides\r\n                    spaceBetween={5000}\r\n                    effect=\"coverflow\"\r\n                    coverflowEffect={coverFlowEffectProps}\r\n                    pagination={paginationProps}\r\n                >\r\n                    <SwiperSlide key=\"firstSlide\"></SwiperSlide>\r\n                    {room.movies.map((movie) => (\r\n                        <SwiperSlide key={movie.id}>\r\n                            <SwipeItem movie={movie} />\r\n                        </SwiperSlide>\r\n                    ))}\r\n                    <SwiperSlide key=\"lastSlide\"></SwiperSlide>\r\n                </Swiper>\r\n            )}\r\n            <FixedContainer position=\"fixed\">\r\n                <DislikeButton onClick={onDislike} disabled={disabled}>\r\n                    <DislikeIcon />\r\n                    Dislike\r\n                </DislikeButton>\r\n                <LikeButton onClick={onLike} disabled={disabled}>\r\n                    <LikeIcon />\r\n                    Like\r\n                </LikeButton>\r\n            </FixedContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SwipeArea;\r\n","import styled from 'styled-components';\r\nimport { MaxWidthContainer } from '../../../styles';\r\n\r\nexport const Container = styled(MaxWidthContainer)`\r\n    max-width: 600px;\r\n    margin: auto;\r\n`;\r\n","import React from 'react';\r\nimport Tabs from '../../../components/Tabs';\r\nimport { useRoom } from '../../../context/RoomContext';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport Matches from '../Matches';\r\nimport SwipeArea from '../SwipeArea';\r\nimport { Container } from './style';\r\n\r\nconst Swiper = () => {\r\n    const { room } = useRoom();\r\n    const { user } = useUser();\r\n    const numMatches = room.movies.reduce((num, movie) => {\r\n        const matched =\r\n            movie.swipes.find((swipe) => swipe.user.id === user.id && swipe.liked) &&\r\n            movie.swipes.find((swipe) => swipe.liked && swipe.user.id !== user.id);\r\n        if (matched) {\r\n            return num + 1;\r\n        }\r\n        return num;\r\n    }, 0);\r\n\r\n    return (\r\n        <Container>\r\n            <Tabs tabs={['Movie', `Matches (${numMatches})`]}>\r\n                <SwipeArea />\r\n                <Matches />\r\n            </Tabs>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Swiper;\r\n","import { AnimatePresence, AnimateSharedLayout } from 'framer-motion';\nimport React from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AppContainer from './components/AppContainer';\nimport Footer from './components/Footer';\nimport Nav from './components/Nav';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { useMoviePreview } from './context/MoviePreviewContext';\nimport Create from './pages/create/Create';\nimport Expired from './pages/expired/Expired';\nimport Home from './pages/home/Home';\nimport Join from './pages/join/Join';\nimport Results from './pages/results/Results';\nimport MovieDetail from './pages/selection/MovieDetail';\nimport Selection from './pages/selection/Selection';\nimport Swiper from './pages/swiper/Swiper';\n\nconst App = () => {\n    const { moviePreview } = useMoviePreview();\n\n    return (\n        <AnimateSharedLayout type=\"crossfade\">\n            <AnimatePresence>{moviePreview && <MovieDetail movie={moviePreview} />}</AnimatePresence>\n            <Toaster />\n            <Nav />\n            <AppContainer>\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/create\" component={Create} />\n                    <Route path=\"/join/:id\" component={Join} />\n                    <Route path=\"/expired\" component={Expired} />\n                    <ProtectedRoute path={['/selection/:id/:movieId', '/selection/:id']} component={Selection} />\n                    <ProtectedRoute path={['/swiper/:id/:movieId', '/swiper/:id']} component={Swiper} />\n                    <ProtectedRoute path={['/results/:id/:movieId', '/results/:id']} component={Results} />\n                    <Route component={Home} />\n                </Switch>\n            </AppContainer>\n            <Footer />\n        </AnimateSharedLayout>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport MoviePreviewProvider from './context/MoviePreviewContext';\nimport RoomProvider from './context/RoomContext';\nimport UserProvider from './context/UserContext';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <UserProvider>\n                <RoomProvider>\n                    <MoviePreviewProvider>\n                        <App />\n                    </MoviePreviewProvider>\n                </RoomProvider>\n            </UserProvider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}